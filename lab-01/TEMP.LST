      Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 1

0020:0000  0000			data_66		dw	0
  
				;ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
				;			       SUBROUTINE
				;‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
  
				sub_1		proc	near
0020:0002  0000			data_67		dw	0
0020:0004  0000			data_69		dw	0
0020:0006  0000			data_70		dw	0
0020:0008  00 00				add	[bx+si],al
0020:000A  0000			data_71		dw	0
0020:000C  0000			data_72		dw	0
0020:000E  0000 0000		data_73		dd	00000h
0020:0012  00 00				add	[bx+si],al
0020:0014  0000			data_75		dw	0
0020:0016  0000 0000		data_76		dw	0, 0
0020:001A  0000			data_79		dw	0
0020:001C  0000			data_80		dw	0
0020:001E  0000 0000		data_81		dd	00000h
0020:0022  0000 0000		data_83		dd	00000h
0020:0026  00			data_84		db	0
0020:0027  00			data_85		db	0
0020:0028  00 00				add	[bx+si],al
0020:002A  00 00				add	[bx+si],al
0020:002C  0000			data_88		dw	0
0020:002E  00 00				add	[bx+si],al
0020:0030  00 00				add	[bx+si],al
  
				;ƒƒƒƒƒ Indexed Entry Point ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ
  
0020:0032			loc_3:
0020:0032  00 00				add	[bx+si],al
0020:0034  00 00				add	[bx+si],al
0020:0036  00 00				add	[bx+si],al
0020:0038  00 00				add	[bx+si],al
0020:003A  00 00				add	[bx+si],al
  
				;ƒƒƒƒƒ Indexed Entry Point ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ
  
0020:003C			loc_4:
0020:003C  00			data_94		db	0
0020:003D  00 00				add	[bx+si],al
0020:003F  00 00				add	[bx+si],al
0020:0041  00 00				add	[bx+si],al
  
				;ﬂﬂﬂﬂ External Entry into Subroutine ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
  
				sub_4:
0020:0043  00 00				add	[bx+si],al
0020:0045  00 00				add	[bx+si],al
0020:0047  00 00				add	[bx+si],al
0020:0049  00 00				add	[bx+si],al
0020:004B  00 00				add	[bx+si],al
0020:004D  00 00				add	[bx+si],al
0020:004F  00 00				add	[bx+si],al
0020:0051  00 00				add	[bx+si],al
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 2

0020:0053  00 00				add	[bx+si],al
0020:0055  00 00				add	[bx+si],al
0020:0057  00 00				add	[bx+si],al
0020:0059  00 00				add	[bx+si],al
0020:005B  00 00				add	[bx+si],al
0020:005D  00 00				add	[bx+si],al
0020:005F  00 00				add	[bx+si],al
0020:0061  0000			data_95		dw	0
0020:0063  0000			data_96		dw	0
0020:0065  00 00				add	[bx+si],al
0020:0067  00 00				add	[bx+si],al
0020:0069  00			data_97		db	0
0020:006A  00 00				add	[bx+si],al
0020:006C  00 00				add	[bx+si],al
0020:006E  00 00				add	[bx+si],al
0020:0070  00 00				add	[bx+si],al
0020:0072  00 00				add	[bx+si],al
0020:0074  00 00				add	[bx+si],al
0020:0076  00 00				add	[bx+si],al
0020:0078  00 00				add	[bx+si],al
0020:007A  00 00				add	[bx+si],al
0020:007C  00 00				add	[bx+si],al
0020:007E  00 00				add	[bx+si],al
0020:0080  00 00				add	[bx+si],al
0020:0082  00 00				add	[bx+si],al
0020:0084  00 00				add	[bx+si],al
0020:0086  00 00				add	[bx+si],al
0020:0088  00 00				add	[bx+si],al
0020:008A  00 00				add	[bx+si],al
0020:008C  00 00				add	[bx+si],al
0020:008E  00 00				add	[bx+si],al
0020:0090  0000			data_99		dw	0
0020:0092  0000			data_100	dw	0
0020:0094  00 00				add	[bx+si],al
0020:0096  00			data_101	db	0
0020:0097  00 00				add	[bx+si],al
0020:0099  00 00				add	[bx+si],al
0020:009B  00 00				add	[bx+si],al
0020:009D  00 00				add	[bx+si],al
0020:009F  00 00				add	[bx+si],al
0020:00A1  00 00				add	[bx+si],al
0020:00A3  00 00				add	[bx+si],al
0020:00A5  00 00				add	[bx+si],al
0020:00A7  00 00				add	[bx+si],al
0020:00A9  00 00				add	[bx+si],al
0020:00AB  00 00				add	[bx+si],al
0020:00AD  00 00				add	[bx+si],al
0020:00AF  00 00				add	[bx+si],al
0020:00B1  00 00				add	[bx+si],al
0020:00B3  00 00				add	[bx+si],al
0020:00B5  00 00				add	[bx+si],al
  
				;ƒƒƒƒƒ Indexed Entry Point ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ
  
0020:00B7			loc_5:
0020:00B7  00 00				add	[bx+si],al
0020:00B9  00 00				add	[bx+si],al
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 3

0020:00BB  00 00				add	[bx+si],al
0020:00BD  00 00				add	[bx+si],al
0020:00BF  00 00				add	[bx+si],al
0020:00C1  00 00				add	[bx+si],al
0020:00C3  00 00				add	[bx+si],al
0020:00C5  00 00				add	[bx+si],al
0020:00C7  00 00				add	[bx+si],al
0020:00C9  00 00				add	[bx+si],al
0020:00CB  00 00				add	[bx+si],al
0020:00CD  00 00				add	[bx+si],al
0020:00CF  00 00				add	[bx+si],al
0020:00D1  00 00				add	[bx+si],al
0020:00D3  00 00				add	[bx+si],al
0020:00D5  00 00				add	[bx+si],al
0020:00D7  00 00				add	[bx+si],al
0020:00D9  00 00				add	[bx+si],al
0020:00DB  00			data_102	db	0			; Data table (indexed access)
0020:00DC  00 00				add	[bx+si],al
0020:00DE  00 00				add	[bx+si],al
0020:00E0  00 00				add	[bx+si],al
0020:00E2  00 00				add	[bx+si],al
0020:00E4  00 00				add	[bx+si],al
0020:00E6  00 00				add	[bx+si],al
0020:00E8  00 00				add	[bx+si],al
0020:00EA  00 00				add	[bx+si],al
0020:00EC  00 00				add	[bx+si],al
0020:00EE  00 00				add	[bx+si],al
0020:00F0  0000 0000		data_103	dd	00000h
0020:00F4  00 00				add	[bx+si],al
0020:00F6  00 00				add	[bx+si],al
0020:00F8  00 00				add	[bx+si],al
0020:00FA  00 00				add	[bx+si],al
0020:00FC  00 00				add	[bx+si],al
0020:00FE  00			data_104	db	0
0020:00FF  00 00				add	[bx+si],al
0020:0101  00 00				add	[bx+si],al
0020:0103  00 00				add	[bx+si],al
0020:0105  00 00				add	[bx+si],al
0020:0107  00 00				add	[bx+si],al
0020:0109  00 00				add	[bx+si],al
0020:010B  00 00				add	[bx+si],al
0020:010D  00 00				add	[bx+si],al
0020:010F  00 00				add	[bx+si],al
0020:0111  00 00				add	[bx+si],al
0020:0113  00					db	0
0020:0114  0000 0000		data_111	dd	00000h
0020:0118  0000 0000		data_112	dd	00000h
0020:011C  0000 0000		data_113	dd	00000h
0020:0120  0000 0000		data_114	dd	00000h
0020:0124  0000 0000		data_115	dd	00000h
0020:0128  0000 0000		data_116	dd	00000h
0020:012C  0000 0000		data_117	dd	00000h
0020:0130  0000 0000		data_118	dd	00000h
0020:0134  00			data_119	db	0
0020:0135  00 00				add	[bx+si],al
0020:0137  00 00				add	[bx+si],al
0020:0139  00 00				add	[bx+si],al
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 4

0020:013B  00 00				add	[bx+si],al
0020:013D  00 00				add	[bx+si],al
0020:013F  00 00				add	[bx+si],al
0020:0141  00 00				add	[bx+si],al
0020:0143  00 00				add	[bx+si],al
0020:0145  00 00				add	[bx+si],al
0020:0147  00 00				add	[bx+si],al
0020:0149  00 00				add	[bx+si],al
0020:014B  00 00				add	[bx+si],al
0020:014D  0000			data_120	dw	0
0020:014F  00 00				add	[bx+si],al
0020:0151  00 00				add	[bx+si],al
0020:0153  00 00				add	[bx+si],al
0020:0155  00 00				add	[bx+si],al
0020:0157  00 00				add	[bx+si],al
0020:0159  00 00				add	[bx+si],al
0020:015B  00 00				add	[bx+si],al
0020:015D  00 00				add	[bx+si],al
0020:015F  00 00				add	[bx+si],al
0020:0161  00 00				add	[bx+si],al
0020:0163  00 00				add	[bx+si],al
0020:0165  00 00				add	[bx+si],al
0020:0167  00 00				add	[bx+si],al
0020:0169  00 00				add	[bx+si],al
0020:016B  00 00				add	[bx+si],al
0020:016D  00 00				add	[bx+si],al
0020:016F  00 00				add	[bx+si],al
0020:0171  00 00				add	[bx+si],al
0020:0173  00 00				add	[bx+si],al
0020:0175  00 00				add	[bx+si],al
0020:0177  00 00				add	[bx+si],al
0020:0179  00 00				add	[bx+si],al
0020:017B  00 00				add	[bx+si],al
0020:017D  0000 0000		data_121	dd	00000h
0020:0181  0000 0000		data_122	dd	00000h
0020:0185  00 00				add	[bx+si],al
0020:0187  00 00				add	[bx+si],al
0020:0189  00 00				add	[bx+si],al
0020:018B  00 00				add	[bx+si],al
0020:018D  00 00				add	[bx+si],al
0020:018F  00 00				add	[bx+si],al
0020:0191  00 00				add	[bx+si],al
0020:0193  00 00				add	[bx+si],al
0020:0195  00 00				add	[bx+si],al
0020:0197  00 00				add	[bx+si],al
0020:0199  00 00				add	[bx+si],al
0020:019B  00 00				add	[bx+si],al
0020:019D  00			data_124	db	0			; Data table (indexed access)
0020:019E  00 00				add	[bx+si],al
0020:01A0  00			data_125	db	0			; Data table (indexed access)
0020:01A1  00 00				add	[bx+si],al
0020:01A3  00			data_126	db	0			; Data table (indexed access)
0020:01A4  00 00				add	[bx+si],al
0020:01A6  00 00				add	[bx+si],al
0020:01A8  00			data_127	db	0			; Data table (indexed access)
0020:01A9  00 00				add	[bx+si],al
0020:01AB  00 00				add	[bx+si],al
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 5

0020:01AD  00 00				add	[bx+si],al
0020:01AF  00 00				add	[bx+si],al
0020:01B1  00 00				add	[bx+si],al
0020:01B3  00 00				add	[bx+si],al
0020:01B5  00 00				add	[bx+si],al
0020:01B7  00 00				add	[bx+si],al
0020:01B9  00 00				add	[bx+si],al
0020:01BB  00 00				add	[bx+si],al
0020:01BD  00 00				add	[bx+si],al
0020:01BF  00 00				add	[bx+si],al
0020:01C1  0000 0000		data_128	dd	00000h
0020:01C5  00 00				add	[bx+si],al
0020:01C7  00 00				add	[bx+si],al
0020:01C9  00 00				add	[bx+si],al
0020:01CB  00 00				add	[bx+si],al
0020:01CD  00 00				add	[bx+si],al
0020:01CF  00 00				add	[bx+si],al
0020:01D1  00 00				add	[bx+si],al
0020:01D3  00 00				add	[bx+si],al
0020:01D5  00 00				add	[bx+si],al
0020:01D7  00 00				add	[bx+si],al
0020:01D9  00 00				add	[bx+si],al
0020:01DB  00 00				add	[bx+si],al
0020:01DD  00 00				add	[bx+si],al
0020:01DF  00 00				add	[bx+si],al
0020:01E1  00 00				add	[bx+si],al
0020:01E3  00 00				add	[bx+si],al
0020:01E5  00 00				add	[bx+si],al
0020:01E7  00 00				add	[bx+si],al
0020:01E9  00 00				add	[bx+si],al
0020:01EB  00 00				add	[bx+si],al
0020:01ED  00 00				add	[bx+si],al
0020:01EF  00 00				add	[bx+si],al
0020:01F1  00 00				add	[bx+si],al
0020:01F3  00 00				add	[bx+si],al
0020:01F5  00 00				add	[bx+si],al
0020:01F7  00 00				add	[bx+si],al
0020:01F9  00 00				add	[bx+si],al
0020:01FB  00 00				add	[bx+si],al
0020:01FD  00 00				add	[bx+si],al
0020:01FF  00 F8				add	al,bh
0020:0201  03 F8				add	di,ax
0020:0203  02 E8				add	ch,al
0020:0205  03 E8				add	bp,ax
0020:0207  02 BC 7803				add	bh,byte ptr ds:[7803h][si]	; (ss:7803=0FEh)
0020:020B  03 78 02				add	di,[bx+si+2]
0020:020E  C0					db	0C0h
0020:020F  9F					lahf				; Load ah from flags
0020:0210  22 C8				and	cl,al
0020:0212  00 80 0002				add	[bx+si+2],al
0020:0216  00 00				add	[bx+si],al
0020:0218  00 00				add	[bx+si],al
0020:021A  34 00				xor	al,0
0020:021C  34 00				xor	al,0
0020:021E  30 0B				xor	[bp+di],cl
0020:0220  30 0B				xor	[bp+di],cl
0020:0222  30 0B				xor	[bp+di],cl
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 6

0020:0224  0D 651C				or	ax,651Ch
0020:0227  12 66 21				adc	ah,[bp+21h]
0020:022A  66					db	66h
0020:022B  21 66 21				and	[bp+21h],sp
0020:022E  66					db	66h
0020:022F  21 0D				and	[di],cx
0020:0231  1C 67				sbb	al,67h			; 'g'
0020:0233  22 30				and	dh,[bx+si]
0020:0235  0B 32				or	si,[bp+si]
0020:0237  03 30				add	si,[bx+si]
0020:0239  0B 3A				or	di,[bp+si]
0020:023B  27					daa				; Decimal adjust
  
				;ƒƒƒƒƒ Indexed Entry Point ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ
  
0020:023C			loc_7:
0020:023C  30 0B				xor	[bp+di],cl
  
				;ƒƒƒƒƒ Indexed Entry Point ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ
  
0020:023E			loc_8:
0020:023E  00 00				add	[bx+si],al
0020:0240  FA					cli				; Disable interrupts
0020:0241  00 C3				add	bl,al
0020:0243  00 00				add	[bx+si],al
0020:0245  00 00				add	[bx+si],al
0020:0247  00 00				add	[bx+si],al
0020:0249  03 50 00				add	dx,[bx+si+0]
0020:024C  00 10				add	[bx+si],dl
0020:024E  00 00				add	[bx+si],al
0020:0250  4F					dec	di
0020:0251  18 00				sbb	[bx+si],al
0020:0253  00 00 00				db	0, 0, 0
0020:0256  0000			data_133	dw	0
0020:0258  00 00				add	[bx+si],al
0020:025A  00 00				add	[bx+si],al
0020:025C  00 00				add	[bx+si],al
0020:025E  00 00				add	[bx+si],al
0020:0260  00 20				add	[bx+si],ah
0020:0262  00 D4				add	ah,dl
0020:0264  03 29				add	bp,[bx+di]
0020:0266  30 00				xor	[bx+si],al
0020:0268  0000 0000		data_135	dd	00000h
0020:026C  AAEE 0017		data_136	dd	17AAEEh
0020:0270  00 00 00 00 00 00			db	0, 0, 0, 0, 0, 0
0020:0276  C0					db	0C0h
0020:0277  00 14				add	[si],dl
0020:0279  14 14				adc	al,14h
0020:027B  00 01				add	[bx+di],al
0020:027D  01 01				add	[bx+di],ax
0020:027F  01 1E 3E00				add	word ptr ds:[3E00h],bx	; (ss:3E00=245h)
0020:0283  00 18				add	[bx+si],bl
0020:0285  10 00				adc	[bx+si],al
0020:0287  60					db	60h
0020:0288  F9					stc				; Set carry flag
0020:0289  01 08				add	[bx+si],cx
0020:028B  000B[00]				db	11 dup (0)
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 7

0020:0296  10 00				adc	[bx+si],al
0020:0298  00 00 00 00				db	0, 0, 0, 0
0020:029C  0000			data_140	dw	0
0020:029E  00			data_141	db	0
0020:029F  00 00				add	[bx+si],al
0020:02A1  00 00				add	[bx+si],al
0020:02A3  00 00				add	[bx+si],al
0020:02A5  00 00				add	[bx+si],al
0020:02A7  5100			data_142	dw	5100h
0020:02A9  55					push	bp
0020:02AA  00			data_144	db	0
0020:02AB  C0					db	0C0h
0020:02AC  00 00 00 00				db	0, 0, 0, 0
0020:02B0  00			data_146	db	0
0020:02B1  0000			data_147	dw	0
0020:02B3  00 00				add	[bx+si],al
0020:02B5  00 00				add	[bx+si],al
0020:02B7  00 00				add	[bx+si],al
0020:02B9  01 00				add	[bx+si],ax
0020:02BB  0014[00]		data_148	db	20 dup (0)
0020:02CF  00			data_149	db	0
0020:02D0  00 00				add	[bx+si],al
0020:02D2  00 00				add	[bx+si],al
0020:02D4  00 00				add	[bx+si],al
0020:02D6  00 00				add	[bx+si],al
0020:02D8  00 00				add	[bx+si],al
0020:02DA  00 00				add	[bx+si],al
0020:02DC  00 00				add	[bx+si],al
0020:02DE  00 00				add	[bx+si],al
0020:02E0  00 00				add	[bx+si],al
0020:02E2  00 00				add	[bx+si],al
0020:02E4  00 00				add	[bx+si],al
0020:02E6  00 00				add	[bx+si],al
0020:02E8  0000 0000		data_150	dd	00000h			; Data table (indexed access)
0020:02EC  00 00				add	[bx+si],al
0020:02EE  00 00				add	[bx+si],al
0020:02F0  00 00				add	[bx+si],al
0020:02F2  00 00				add	[bx+si],al
0020:02F4  00 00				add	[bx+si],al
0020:02F6  00 00				add	[bx+si],al
0020:02F8  00 00				add	[bx+si],al
0020:02FA  00 00				add	[bx+si],al
0020:02FC  00 00				add	[bx+si],al
0020:02FE  00 00				add	[bx+si],al
0020:0300  00 00				add	[bx+si],al
0020:0302  00 00				add	[bx+si],al
0020:0304  00 00				add	[bx+si],al
0020:0306  00 00				add	[bx+si],al
0020:0308  00 00				add	[bx+si],al
0020:030A  00 00				add	[bx+si],al
0020:030C  00 00				add	[bx+si],al
0020:030E  00 00				add	[bx+si],al
0020:0310  00 00				add	[bx+si],al
0020:0312  00 00				add	[bx+si],al
0020:0314  0000			data_153	dw	0
0020:0316  00 00				add	[bx+si],al
0020:0318  00 00				add	[bx+si],al
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 8

0020:031A  00 00				add	[bx+si],al
0020:031C  00 00				add	[bx+si],al
0020:031E  00 00				add	[bx+si],al
0020:0320  00			data_154	db	0
0020:0321  00 00				add	[bx+si],al
0020:0323  00			data_155	db	0
0020:0324  00 00				add	[bx+si],al
0020:0326  0000 0000		data_156	dd	00000h			; Data table (indexed access)
0020:032A  00 00				add	[bx+si],al
0020:032C  00 00				add	[bx+si],al
0020:032E  00 00				add	[bx+si],al
0020:0330  00			data_157	db	0
0020:0331  00 00				add	[bx+si],al
0020:0333  00 00				add	[bx+si],al
0020:0335  00 00				add	[bx+si],al
0020:0337  00 00				add	[bx+si],al
0020:0339  00 00				add	[bx+si],al
0020:033B  00 00				add	[bx+si],al
0020:033D  00 00				add	[bx+si],al
0020:033F  00 00				add	[bx+si],al
0020:0341  00 00				add	[bx+si],al
0020:0343  00 00				add	[bx+si],al
0020:0345  00 00				add	[bx+si],al
0020:0347  00 00				add	[bx+si],al
0020:0349  00 00				add	[bx+si],al
0020:034B  00 00				add	[bx+si],al
0020:034D  00 00				add	[bx+si],al
0020:034F  00 00				add	[bx+si],al
0020:0351  00 00				add	[bx+si],al
0020:0353  00 00				add	[bx+si],al
0020:0355  00 00				add	[bx+si],al
0020:0357  00 00				add	[bx+si],al
0020:0359  00 00				add	[bx+si],al
0020:035B  00 00				add	[bx+si],al
0020:035D  00 00				add	[bx+si],al
0020:035F  00 00				add	[bx+si],al
0020:0361  00 00				add	[bx+si],al
0020:0363  00 00				add	[bx+si],al
0020:0365  00 00				add	[bx+si],al
0020:0367  00 00				add	[bx+si],al
0020:0369  00 00				add	[bx+si],al
0020:036B  00 00				add	[bx+si],al
0020:036D  00 00				add	[bx+si],al
0020:036F  00 00				add	[bx+si],al
0020:0371  00 00				add	[bx+si],al
0020:0373  00 00				add	[bx+si],al
0020:0375  00 00				add	[bx+si],al
0020:0377  00 00				add	[bx+si],al
0020:0379  00 00				add	[bx+si],al
0020:037B  00 00				add	[bx+si],al
0020:037D  00 00				add	[bx+si],al
0020:037F  00 00				add	[bx+si],al
0020:0381  00 00				add	[bx+si],al
0020:0383  00 00				add	[bx+si],al
0020:0385  00 00				add	[bx+si],al
0020:0387  00 00				add	[bx+si],al
0020:0389  00 00				add	[bx+si],al
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 9

0020:038B  00 00				add	[bx+si],al
0020:038D  00 00				add	[bx+si],al
0020:038F  00 00				add	[bx+si],al
0020:0391  00 00				add	[bx+si],al
0020:0393  00 00				add	[bx+si],al
0020:0395  00 00				add	[bx+si],al
0020:0397  00 00				add	[bx+si],al
0020:0399  00 00				add	[bx+si],al
0020:039B  00 00				add	[bx+si],al
0020:039D  00 00				add	[bx+si],al
0020:039F  00 00				add	[bx+si],al
0020:03A1  00 00				add	[bx+si],al
0020:03A3  00 00				add	[bx+si],al
0020:03A5  00 00				add	[bx+si],al
0020:03A7  00 00				add	[bx+si],al
0020:03A9  00 00				add	[bx+si],al
0020:03AB  00 00				add	[bx+si],al
0020:03AD  00 00				add	[bx+si],al
0020:03AF  00 00				add	[bx+si],al
0020:03B1  00 00				add	[bx+si],al
0020:03B3  00 00				add	[bx+si],al
0020:03B5  00 00				add	[bx+si],al
0020:03B7  00 00				add	[bx+si],al
0020:03B9  00 00				add	[bx+si],al
0020:03BB  00 00				add	[bx+si],al
0020:03BD  00 00				add	[bx+si],al
0020:03BF  00 00				add	[bx+si],al
0020:03C1  00 00				add	[bx+si],al
0020:03C3  00 00				add	[bx+si],al
0020:03C5  00 00				add	[bx+si],al
0020:03C7  00 00				add	[bx+si],al
0020:03C9  00 00				add	[bx+si],al
0020:03CB  00 00				add	[bx+si],al
0020:03CD  00 00				add	[bx+si],al
0020:03CF  00 00				add	[bx+si],al
0020:03D1  00 00				add	[bx+si],al
0020:03D3  00 00				add	[bx+si],al
0020:03D5  00 00				add	[bx+si],al
0020:03D7  00 00				add	[bx+si],al
0020:03D9  00 00				add	[bx+si],al
0020:03DB  00 00				add	[bx+si],al
0020:03DD  00 00				add	[bx+si],al
0020:03DF  00 00				add	[bx+si],al
0020:03E1  00 00				add	[bx+si],al
0020:03E3  00 00				add	[bx+si],al
0020:03E5  00 00				add	[bx+si],al
0020:03E7  00 00				add	[bx+si],al
0020:03E9  00 00				add	[bx+si],al
0020:03EB  00 00				add	[bx+si],al
0020:03ED  00 00				add	[bx+si],al
0020:03EF  00 00				add	[bx+si],al
0020:03F1  00 00				add	[bx+si],al
0020:03F3  00 00				add	[bx+si],al
0020:03F5  00 00				add	[bx+si],al
0020:03F7  00 00				add	[bx+si],al
0020:03F9  00 00				add	[bx+si],al
0020:03FB  00 00				add	[bx+si],al
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 10

0020:03FD  00 00				add	[bx+si],al
0020:03FF  00 00				add	[bx+si],al
0020:0401  00 00				add	[bx+si],al
0020:0403  00 00				add	[bx+si],al
0020:0405  00 00				add	[bx+si],al
0020:0407  00 00				add	[bx+si],al
0020:0409  00 00				add	[bx+si],al
0020:040B  00 00				add	[bx+si],al
0020:040D  00 00				add	[bx+si],al
0020:040F  00 00				add	[bx+si],al
0020:0411  00 00				add	[bx+si],al
0020:0413  00 00				add	[bx+si],al
0020:0415  00 00				add	[bx+si],al
0020:0417  00 00				add	[bx+si],al
0020:0419  00 00				add	[bx+si],al
0020:041B  BD 07BE				mov	bp,7BEh
0020:041E  B1 04				mov	cl,4
  
0020:0420			locloop_9:
0020:0420  38 6E 00				cmp	[bp],ch
0020:0423  7C 09				jl	loc_10			; Jump if <
0020:0425  75 13				jnz	loc_12			; Jump if not zero
0020:0427  83 C5 10				add	bp,10h
0020:042A  E2 F4				loop	locloop_9		; Loop if cx > 0
  
0020:042C  CD 18				int	18h			; ROM basic
0020:042E			loc_10:
0020:042E  8B F5				mov	si,bp
0020:0430			loc_11:
0020:0430  83 C6 10				add	si,10h
0020:0433  49					dec	cx
0020:0434  74 19				jz	loc_17			; Jump if zero
0020:0436  38 2C				cmp	[si],ch
0020:0438  74 F6				je	loc_11			; Jump if equal
0020:043A			loc_12:
0020:043A  A0 07B5				mov	al,byte ptr ds:[7B5h]	; (ss:07B5=14h)
0020:043D			loc_13:
0020:043D  B4 07				mov	ah,7
0020:043F  8B F0				mov	si,ax
0020:0441			loc_14:
0020:0441  AC					lodsb				; String [si] to al
0020:0442			loc_15:
0020:0442  3C 00				cmp	al,0
0020:0444  74 FC				je	loc_15			; Jump if equal
0020:0446  BB 0007				mov	bx,7
0020:0449  B4 0E				mov	ah,0Eh
0020:044B  CD 10				int	10h			; Video display   ah=functn 0Eh
										;  write char al, teletype mode
0020:044D  EB F2				jmp	short loc_14		; (0441)
0020:044F			loc_17:
0020:044F  88 4E 10				mov	[bp+10h],cl
0020:0452  E8 0046				call	sub_10			; (049B)
0020:0455  73 2A				jnc	loc_20			; Jump if carry=0
0020:0457			loc_18:
0020:0457  FE 46 10				inc	byte ptr [bp+10h]
0020:045A  80 7E 04 0B				cmp	byte ptr [bp+4],0Bh
0020:045E  74 0B				je	loc_19			; Jump if equal
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 11

0020:0460  80 7E 04 0C				cmp	byte ptr [bp+4],0Ch
0020:0464  74 05				je	loc_19			; Jump if equal
0020:0466  A0 07B6				mov	al,byte ptr ds:[7B6h]	; (ss:07B6=0E8h)
0020:0469  75 D2				jnz	loc_13			; Jump if not zero
0020:046B			loc_19:
0020:046B  80 46 02 06				add	byte ptr [bp+2],6
0020:046F  83 46 08 06				add	word ptr [bp+8],6
0020:0473  83 56 0A 00				adc	word ptr [bp+0Ah],0
0020:0477  E8 0021				call	sub_10			; (049B)
0020:047A  73 05				jnc	loc_20			; Jump if carry=0
0020:047C  A0 07B6				mov	al,byte ptr ds:[7B6h]	; (ss:07B6=0E8h)
0020:047F  EB BC				jmp	short loc_13		; (043D)
0020:0481			loc_20:
0020:0481  81 3E 7DFE AA55			cmp	word ptr ds:[7DFEh],0AA55h	; (ss:7DFE=0D2D1h)
0020:0487  74 0B				je	loc_21			; Jump if equal
0020:0489  80 7E 10 00				cmp	byte ptr [bp+10h],0
0020:048D  74 C8				je	loc_18			; Jump if equal
0020:048F  A0 07B7				mov	al,byte ptr ds:[7B7h]	; (ss:07B7=0EBh)
0020:0492  EB A9				jmp	short loc_13		; (043D)
0020:0494			loc_21:
0020:0494  8B FC				mov	di,sp
0020:0496  1E					push	ds
0020:0497  57					push	di
0020:0498  8B F5				mov	si,bp
  
				;ﬂﬂﬂﬂ External Entry into Subroutine ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
  
				sub_9:
0020:049A  CB					retf				; Return far
				sub_1		endp
  
  
				;ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
				;			       SUBROUTINE
				;‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
  
				sub_10		proc	near
0020:049B  BF 0005				mov	di,5
0020:049E  8A 56 00				mov	dl,[bp]
0020:04A1  B4 08				mov	ah,8
0020:04A3  CD 13				int	13h			; Disk  dl=drive a  ah=func 08h
										;  read parameters for drive dl
0020:04A5  72 23				jc	loc_22			; Jump if carry Set
0020:04A7  8A C1				mov	al,cl
0020:04A9  24 3F				and	al,3Fh			; '?'
0020:04AB  98					cbw				; Convrt byte to word
0020:04AC  8A DE				mov	bl,dh
0020:04AE  8A FC				mov	bh,ah
0020:04B0  43					inc	bx
0020:04B1  F7 E3				mul	bx			; dx:ax = reg * ax
0020:04B3  8B D1				mov	dx,cx
0020:04B5  86 D6				xchg	dl,dh
0020:04B7  B1 06				mov	cl,6
0020:04B9  D2 EE				shr	dh,cl			; Shift w/zeros fill
0020:04BB  42					inc	dx
0020:04BC  F7 E2				mul	dx			; dx:ax = reg * ax
0020:04BE  39 56 0A				cmp	[bp+0Ah],dx
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 12

0020:04C1  77 23				ja	loc_23			; Jump if above
0020:04C3  72 05				jc	loc_22			; Jump if carry Set
0020:04C5  39 46 08				cmp	[bp+8],ax
0020:04C8  73 1C				jae	loc_23			; Jump if above or =
0020:04CA			loc_22:
0020:04CA  B8 0201				mov	ax,201h
0020:04CD  BB 7C00				mov	bx,7C00h
0020:04D0  8B 4E 02				mov	cx,[bp+2]
0020:04D3  8B 56 00				mov	dx,[bp]
0020:04D6  CD 13				int	13h			; Disk  dl=drive a  ah=func 02h
										;  read sectors to memory es:bx
0020:04D8  73 51				jnc	loc_25			; Jump if carry=0
0020:04DA  4F					dec	di
0020:04DB  74 4E				jz	loc_25			; Jump if zero
0020:04DD  32 E4				xor	ah,ah			; Zero register
0020:04DF  8A 56 00				mov	dl,[bp]
0020:04E2  CD 13				int	13h			; Disk  dl=drive a  ah=func 00h
										;  reset disk, al=return status
0020:04E4  EB E4				jmp	short loc_22		; (04CA)
0020:04E6			loc_23:
0020:04E6  8A 56 00				mov	dl,[bp]
0020:04E9  60					db	60h
0020:04EA  BB 55AA				mov	bx,55AAh
0020:04ED  B4 41				mov	ah,41h			; 'A'
0020:04EF  CD 13				int	13h			; Disk  dl=drive a  ah=func 41h
0020:04F1  72 36				jc	loc_24			; Jump if carry Set
0020:04F3  81 FB AA55				cmp	bx,0AA55h
0020:04F7  75 30				jne	loc_24			; Jump if not equal
0020:04F9  F6 AB 709F				imul	byte ptr [bp+di+709Fh]	; ax = data * al
0020:04FD  00 02				add	[bp+si],al
0020:04FF  06					push	es
0020:0500  E9			data_161	db	0E9h
0020:0501  6D					db	6Dh
0020:0502  03 A7 EA00				add	sp,word ptr ds:[0EA00h][bx]	; (ss:EA00=0B04Fh)
0020:0506  FD					std				; Set direction flag
0020:0507  02 70 00				add	dh,[bx+si+0]
0020:050A  00 00				add	[bx+si],al
0020:050C  00 FF				add	bh,bh
0020:050E  AF					scasw				; Scan es:[di] for ax
0020:050F  00 D9				add	cl,bl
0020:0511  02 87 00DB				add	al,byte ptr ds:[0DBh][bx]	; (ss:00DB=46h)
0020:0515  32 20				xor	ah,[bx+si]
0020:0517  00 7E 03				add	[bp+3],bh
0020:051A  A7					cmpsw				; Cmp [si] to es:[di]
0020:051B  0007[00]				db	7 dup (0)
0020:0522  E8 3600				call	sub_73			; (3B25)
0020:0525  00 70 00				add	[bx+si+0],dh
0020:0528  13 80 01EC				adc	ax,word ptr ds:[1ECh][bx+si]	; (ss:01EC=163Bh)
0020:052C  F7 01 4F43				test	word ptr [bx+di],4F43h
0020:0530  4E					dec	si
0020:0531  20 20				and	[bx+si],ah
0020:0533  20 20				and	[bx+si],ah
0020:0535  20 48 00				and	[bx+si+0],cl
0020:0538  70 00				jo	loc_26			; Jump if overflow=1
0020:053A			loc_26:
0020:053A  00 80 01EC				add	byte ptr ds:[1ECh][bx+si],al	; (ss:01EC=3Bh)
0020:053E  18 02				sbb	[bp+si],al
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 13

0020:0540  41					inc	cx
0020:0541  55					push	bp
0020:0542  58					pop	ax
0020:0543  20 20				and	[bx+si],ah
0020:0545  20 20				and	[bx+si],ah
0020:0547  20 5A 00				and	[bp+si+0],bl
0020:054A  70 00				jo	loc_27			; Jump if overflow=1
0020:054C			loc_27:
0020:054C  C0					db	0C0h
0020:054D  A8 EC				test	al,0ECh
0020:054F  01 FC				add	sp,di
0020:0551  01 50 52				add	[bx+si+52h],dx
0020:0554  4E					dec	si
0020:0555  20 20				and	[bx+si],ah
0020:0557  20 20				and	[bx+si],ah
0020:0559  20 6C 00				and	[si+0],ch
0020:055C  70 00				jo	loc_28			; Jump if overflow=1
0020:055E			loc_28:
0020:055E  08 80 01EC				or	byte ptr ds:[1ECh][bx+si],al	; (ss:01EC=3Bh)
0020:0562  30 02				xor	[bp+si],al
0020:0564  43					inc	bx
0020:0565  4C					dec	sp
0020:0566  4F					dec	di
0020:0567  43					inc	bx
0020:0568  4B					dec	bx
0020:0569  24 20				and	al,20h			; ' '
0020:056B  20 7E 00				and	[bp],bh
0020:056E  70 00				jo	loc_29			; Jump if overflow=1
0020:0570			loc_29:
0020:0570  00 80 01EC				add	byte ptr ds:[1ECh][bx+si],al	; (ss:01EC=3Bh)
0020:0574  18 02				sbb	[bp+si],al
0020:0576  43					inc	bx
0020:0577  4F					dec	di
0020:0578  4D					dec	bp
0020:0579  31 20				xor	[bx+si],sp
0020:057B  20 20				and	[bx+si],ah
0020:057D  20 90 7000				and	byte ptr ds:[7000h][bx+si],dl	; (ss:7000=26h)
0020:0581  00 C0				add	al,al
0020:0583  A8 EC				test	al,0ECh
0020:0585  01 03				add	[bp+di],ax
0020:0587  02 4C 50				add	cl,[si+50h]
0020:058A  54					push	sp
0020:058B  31 20				xor	[bx+si],sp
0020:058D  20 20				and	[bx+si],ah
0020:058F  20 A2 7000				and	[bp+si+7000h],ah
0020:0593  C000			data_167	dw	0C000h
0020:0595  A8 EC				test	al,0ECh
0020:0597  01 0A				add	[bp+si],cx
0020:0599  02 4C 50				add	cl,[si+50h]
0020:059C  54					push	sp
0020:059D  32 20				xor	ah,[bx+si]
0020:059F  20 20				and	[bx+si],ah
0020:05A1  20 B4 7000				and	byte ptr ds:[7000h][si],dh	; (ss:7000=26h)
0020:05A5  00 C0				add	al,al
0020:05A7  A8 EC				test	al,0ECh
0020:05A9  01 11				add	[bx+di],dx
0020:05AB  02 4C 50				add	cl,[si+50h]
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 14

0020:05AE  54					push	sp
0020:05AF  33 20				xor	sp,[bx+si]
0020:05B1  20 20				and	[bx+si],ah
0020:05B3  20 C6				and	dh,al
0020:05B5  00 70 00				add	[bx+si+0],dh
0020:05B8  00 80 01EC				add	byte ptr ds:[1ECh][bx+si],al	; (ss:01EC=3Bh)
0020:05BC  1E					push	ds
0020:05BD  02 43 4F				add	al,[bp+di+4Fh]
0020:05C0  4D					dec	bp
0020:05C1  32 20				xor	ah,[bx+si]
0020:05C3  20 20				and	[bx+si],ah
0020:05C5  20 D8				and	al,bl
0020:05C7  00 70 00				add	[bx+si+0],dh
0020:05CA  00 80 01EC				add	byte ptr ds:[1ECh][bx+si],al	; (ss:01EC=3Bh)
0020:05CE  24 02				and	al,2
0020:05D0  43					inc	bx
0020:05D1  4F					dec	di
0020:05D2  4D					dec	bp
0020:05D3  33 20				xor	sp,[bx+si]
0020:05D5  20 20				and	[bx+si],ah
0020:05D7  20 FF				and	bh,bh
0020:05D9  FF 70 00				push	word ptr [bx+si+0]
0020:05DC  00 80 01EC				add	byte ptr ds:[1ECh][bx+si],al	; (ss:01EC=3Bh)
0020:05E0  2A 02				sub	al,[bp+si]
0020:05E2			loc_30:
0020:05E2  43					inc	bx
0020:05E3  4F					dec	di
0020:05E4  4D					dec	bp
0020:05E5  34 20				xor	al,20h			; ' '
0020:05E7  20 20				and	[bx+si],ah
0020:05E9  20 10				and	[bx+si],dl
0020:05EB  22 00				and	al,[bx+si]
0020:05ED  00 C0				add	al,al
0020:05EF  15 F859				adc	ax,0F859h
0020:05F2  F000			data_168	dw	0F000h
0020:05F4  F219			data_170	dw	0F219h
0020:05F6  E6 00				out	0,al			; port 0, DMA-1 bas&add ch 0
0020:05F8  F0> 1B 53 FF		           lock	sbb	dx,[bp+di-1]
0020:05FC			loc_31:
0020:05FC  00 F0				add	al,dh
0020:05FE  A9 0A08				test	ax,0A08h
0020:0601			loc_32:
0020:0601  02 54 02				add	dl,[si+2]
0020:0604  70 00				jo	loc_33			; Jump if overflow=1
0020:0606			loc_33:
0020:0606  10 11				adc	[bx+di],dl
0020:0608  36: 80 00 50				add	byte ptr ss:[bx+si],50h	; 'P'
0020:060C  00 50 00				add	[bx+si+0],dl
0020:060F  50					push	ax
0020:0610  00 50 00				add	[bx+si+0],dl
0020:0613  01 02				add	[bp+si],ax
0020:0615  53					push	bx
0020:0616  FF 00				inc	word ptr [bx+si]
0020:0618  F0> 08		data_173   lock	db	8
0020:061A  FF					db	0FFh
0020:061B  FF					db	0FFh
0020:061C  FF					db	0FFh
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 15

0020:061D  FF 09				dec	word ptr [bx+di]
0020:061F  FF					db	0FFh
0020:0620  FF					db	0FFh
0020:0621  FF					db	0FFh
0020:0622  FF 0A				dec	word ptr [bp+si]
0020:0624  FF 03				inc	word ptr [bp+di]
0020:0626  0A 02				or	al,[bp+si]
0020:0628  0B FF				or	di,di			; Zero ?
0020:062A  03 0A				add	cx,[bp+si]
0020:062C  02 0C				add	cl,[si]
0020:062E  FF 03				inc	word ptr [bp+di]
0020:0630  0A 02				or	al,[bp+si]
0020:0632  0D 03FF				or	ax,3FFh
0020:0635  0A 02				or	al,[bp+si]
0020:0637  0E					push	cs
0020:0638  B3 07				mov	bl,7
0020:063A  0A 02				or	al,[bp+si]
0020:063C  70 A4				jo	loc_30			; Jump if overflow=1
0020:063E  0C 0A				or	al,0Ah
0020:0640  02 72 B4				add	dh,[bp+si-4Ch]
0020:0643  06					push	es
0020:0644  0A 02				or	al,[bp+si]
0020:0646  73 B4				jnc	loc_31			; Jump if carry=0
0020:0648  06					push	es
0020:0649  0A 02				or	al,[bp+si]
0020:064B  74 B4				jz	loc_32			; Jump if zero
0020:064D  06					push	es
0020:064E  0A			data_175	db	0Ah
0020:064F  02 76 B4				add	dh,[bp-4Ch]
0020:0652  06					push	es
0020:0653  0A 02				or	al,[bp+si]
0020:0655  77 B4		;*		ja	loc_34			;*Jump if above
0020:0655  77 B4				db	 77h,0B4h
0020:0657  06					push	es
0020:0658  0A 02				or	al,[bp+si]
0020:065A  000A[00]				db	10 dup (0)
0020:0664  1F					pop	ds
0020:0665  00 3B				add	[bp+di],bh
0020:0667  00 5A 00				add	[bp+si+0],bl
0020:066A  78 00				js	loc_36			; Jump if sign=1
0020:066C			loc_36:
0020:066C  97					xchg	ax,di
0020:066D  00 B5 D400				add	data_670[di],dh		; (0020:D400=0EBh)
0020:0671  00 F3				add	bl,dh
0020:0673  00 11				add	[bx+di],dl
0020:0675  01 30				add	[bx+si],si
0020:0677  01 4E 01				add	[bp+1],cx
0020:067A  00 00				add	[bx+si],al
0020:067C  00 43 00				add	[bp+di+0],al
0020:067F  FF					db	0FFh
0020:0680  FF 0C				dec	word ptr [si]
0020:0682  04 FF				add	al,0FFh
0020:0684  FF 2E 06C6				jmp	dword ptr data_177	; (0020:06C6=9E19h)
0020:0688  0C 00				or	al,0
0020:068A  03 1E B850				add	bx,data_662		; (0020:B850=472Bh)
0020:068E  40					inc	ax
0020:068F  00 8E F7D8				add	[bp-828h],cl
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 16

0020:0693  06					push	es
0020:0694  14 03				adc	al,3
0020:0696  00 24				add	[si],ah
0020:0698  75 4F				jnz	loc_45			; Jump if not zero
0020:069A  55					push	bp
0020:069B  8B EC				mov	bp,sp
0020:069D  8B 46 0A				mov	ax,[bp+0Ah]
0020:06A0  5D					pop	bp
0020:06A1  A9 0100				test	ax,100h
0020:06A4  75 43				jnz	loc_45			; Jump if not zero
0020:06A6  A9 0200				test	ax,200h
0020:06A9  74 22				jz	loc_41			; Jump if zero
0020:06AB  F0> 81 0E 0314 0200	           lock	or	data_153,200h		; (0020:0314=0)
0020:06B2  F7 06 0314 0003			test	data_153,3		; (0020:0314=0)
0020:06B8  75 2F				jnz	loc_45			; Jump if not zero
0020:06BA			loc_38:
0020:06BA  86 E0				xchg	ah,al
0020:06BC  FC					cld				; Clear direction
0020:06BD  A8 04				test	al,4
0020:06BF  75 25				jnz	loc_44			; Jump if not zero
0020:06C1			loc_39:
0020:06C1  A8 08				test	al,8
0020:06C3  75 11				jnz	loc_42			; Jump if not zero
0020:06C5  70 19				jo	loc_43			; Jump if overflow=1
  
				;ﬂﬂﬂﬂ External Entry into Subroutine ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
  
				sub_14:
0020:06C7			loc_40:
0020:06C7  9E					sahf				; Store ah into flags
0020:06C8  58					pop	ax
0020:06C9  1F					pop	ds
0020:06CA  CA 0002				retf	2			; Return far
0020:06CD			loc_41:
0020:06CD  F0> 81 26 0314 FDFF	           lock	and	data_153,0FDFFh		; (0020:0314=0)
0020:06D4  EB E4				jmp	short loc_38		; (06BA)
0020:06D6			loc_42:
0020:06D6  70 EF				jo	loc_40			; Jump if overflow=1
0020:06D8  50					push	ax
0020:06D9  B0 7F				mov	al,7Fh
0020:06DB  04 02				add	al,2
0020:06DD  58					pop	ax
0020:06DE  EB E7				jmp	short loc_40		; (06C7)
0020:06E0			loc_43:
0020:06E0  50					push	ax
0020:06E1  32 C0				xor	al,al			; Zero register
0020:06E3  58					pop	ax
0020:06E4  EB E1				jmp	short loc_40		; (06C7)
0020:06E6			loc_44:
0020:06E6  FD					std				; Set direction flag
0020:06E7  EB D8				jmp	short loc_39		; (06C1)
0020:06E9			loc_45:
0020:06E9  1F58 2ECF		data_178	dd	2ECF1F58h
0020:06ED  89 1E 0018				mov	word ptr data_76+2,bx	; (0020:0018=0)
0020:06F1  2E: 8C 06 001A			mov	cs:data_79,es		; (0020:001A=0)
0020:06F6  CB					retf
				sub_10		endp
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 17

  
0020:06F7  E8 003B				call	sub_16			; (0735)
0020:06FA  E4 00				in	al,0			; port 0, DMA-1 bas&add ch 0
0020:06FC  E8 0036				call	sub_16			; (0735)
0020:06FF  FB			data_179	db	0FBh
0020:0700  0000			data_180	dw	0			; Data table (indexed access)
0020:0702  00 E8				add	al,ch
0020:0704  2F					das				; Decimal adjust
0020:0705  00 FB				add	bl,bh
0020:0707  00 00				add	[bx+si],al
0020:0709  01 E8				add	ax,bp
0020:070B  28 00				sub	[bx+si],al
0020:070D  FB					sti				; Enable interrupts
0020:070E  00 01				add	[bx+di],al
0020:0710  02 E8				add	ch,al
0020:0712  21 00				and	[bx+si],ax
0020:0714  FB					sti				; Enable interrupts
0020:0715  00 02				add	[bp+si],al
0020:0717  03 E8				add	bp,ax
0020:0719  1A 00				sbb	al,[bx+si]
0020:071B  30 01				xor	[bx+di],al
0020:071D  00 E8				add	al,ch
0020:071F  14 00				adc	al,0
0020:0721  30 01				xor	[bx+di],al
0020:0723  01 E8				add	ax,bp
0020:0725  0E					push	cs
0020:0726  00 30				add	[bx+si],dh
0020:0728  01 02				add	[bp+si],ax
0020:072A  E8 0008				call	sub_16			; (0735)
0020:072D  30 01				xor	[bx+di],al
0020:072F  03 E8				add	bp,ax
0020:0731  02 00				add	al,[bx+si]
0020:0733  47					inc	di
0020:0734  01 2E 3E80				add	data_477,bp		; (0020:3E80=94Dh)
0020:0738  0D 0000				or	ax,0
0020:073B  74 0D				jz	loc_46			; Jump if zero
0020:073D  50					push	ax
0020:073E  2E: A1 0003				mov	ax,word ptr cs:data_67+1	; (0020:0003=0)
0020:0742  2E: 39 06 001A			cmp	cs:data_79,ax		; (0020:001A=0)
0020:0747  58					pop	ax
0020:0748  75 05				jnz	loc_47			; Jump if not zero
0020:074A			loc_46:
0020:074A  2E: FF 2E 017D			jmp	cs:data_121		; (0020:017D=0)
0020:074F			loc_47:
0020:074F  E8 001E				call	sub_17			; (0770)
0020:0752  EB F6				jmp	short loc_46		; (074A)
0020:0754  50					push	ax
0020:0755  56					push	si
0020:0756  57					push	di
0020:0757  55					push	bp
0020:0758  53					push	bx
0020:0759  B4 0E				mov	ah,0Eh
0020:075B  BB 0007				mov	bx,7
0020:075E  CD 10				int	10h			; Video display   ah=functn 0Eh
										;  write char al, teletype mode
0020:0760  5B					pop	bx
0020:0761  5D					pop	bp
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 18

0020:0762  5F					pop	di
0020:0763  5E					pop	si
0020:0764  58					pop	ax
0020:0765  E9 FF23		;*		jmp	loc_37			;*(068B)
0020:0765  E9 23 FF				db	0E9h, 23h,0FFh
0020:0768  90					nop
0020:0769  00 FF				add	bh,bh
0020:076B  FF 80 0000				inc	word ptr [bx+si+0]
0020:076F  00 E8				add	al,ch
0020:0771  0F					pop	cs			; Dangerous 8088 only
0020:0772  00 74 01				add	[si+1],dh
0020:0775  C3					retn
0020:0776  50					push	ax
0020:0777  53					push	bx
0020:0778  B4 05				mov	ah,5
0020:077A  2E: FF 1E 000E			call	cs:data_73		; (0020:000E=0)
0020:077F  5B					pop	bx
0020:0780  58					pop	ax
0020:0781  C3					retn
0020:0782  1E					push	ds
0020:0783  06					push	es
0020:0784  51					push	cx
0020:0785  56					push	si
0020:0786  57					push	di
0020:0787  2E: C5 36 0268			lds	si,cs:data_135		; (0020:0268=0) Load 32 bit ptr
0020:078C  2E: C4 3E 026C			les	di,cs:data_136		; (0020:026C=0AAEEh) Load 32 bit ptr
0020:0791  B9 0008				mov	cx,8
0020:0794  F3/ A7				repe	cmpsw			; Rep zf=1+cx >0 Cmp [si] to es:[di]
0020:0796  5F					pop	di
0020:0797  5E					pop	si
0020:0798  59					pop	cx
0020:0799  07					pop	es
0020:079A  1F					pop	ds
0020:079B  C3					retn
0020:079C  50					push	ax
0020:079D  53					push	bx
0020:079E  B4 06				mov	ah,6
0020:07A0  2E: FF 1E 000E			call	cs:data_73		; (0020:000E=0)
0020:07A5  5B					pop	bx
0020:07A6  C358			data_182	dw	0C358h
0020:07A8  0E					push	cs
0020:07A9  1F					pop	ds
0020:07AA  8E 06 0020				mov	es,word ptr data_81+2	; (0020:0020=0)
0020:07AE  B9 0004				mov	cx,4
0020:07B1  BE 00EA				mov	si,0EAh
  
0020:07B4			locloop_48:
0020:07B4  AC					lodsb				; String [si] to al
0020:07B5  98			data_183	db	98h
0020:07B6  D1			data_184	db	0D1h
0020:07B7  E0			data_185	db	0E0h
0020:07B8  D1 E0				shl	ax,1			; Shift w/zeros fill
0020:07BA  8B F8				mov	di,ax
0020:07BC  AD					lodsw				; String [si] to ax
0020:07BD  AB					stosw				; Store ax to es:[di]
0020:07BE  AD					lodsw				; String [si] to ax
0020:07BF  AB					stosw				; Store ax to es:[di]
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 19

0020:07C0  E2 F2				loop	locloop_48		; Loop if cx > 0
  
0020:07C2  80 3E 0113 00			cmp	byte ptr ds:[113h],0	; (0020:0113=0)
0020:07C7  74 22				je	loc_51			; Jump if equal
0020:07C9  BE 0114				mov	si,114h
0020:07CC  B9 000E				mov	cx,0Eh
  
0020:07CF			locloop_49:
0020:07CF  AC					lodsb				; String [si] to al
0020:07D0  98					cbw				; Convrt byte to word
0020:07D1  8B F8				mov	di,ax
0020:07D3  AD					lodsw				; String [si] to ax
0020:07D4  8B D8				mov	bx,ax
0020:07D6  AD					lodsw				; String [si] to ax
0020:07D7  83 FB FF				cmp	bx,0FFFFh
0020:07DA  74 0D				je	loc_50			; Jump if equal
0020:07DC  3D FFFF				cmp	ax,0FFFFh
0020:07DF  74 08				je	loc_50			; Jump if equal
0020:07E1  03 FF				add	di,di
0020:07E3  03 FF				add	di,di
0020:07E5  93					xchg	ax,bx
0020:07E6  AB					stosw				; Store ax to es:[di]
0020:07E7  93					xchg	ax,bx
0020:07E8  AB					stosw				; Store ax to es:[di]
0020:07E9			loc_50:
0020:07E9  E2 E4				loop	locloop_49		; Loop if cx > 0
  
0020:07EB			loc_51:
0020:07EB  CD 19				int	19h			; Bootstrap loader
0020:07ED  3D 4F53				cmp	ax,4F53h
0020:07F0  74 05				je	loc_52			; Jump if equal
0020:07F2  2E: FF 2E 00F0			jmp	cs:data_103		; (0020:00F0=0)
0020:07F7			loc_52:
0020:07F7  F9					stc				; Set carry flag
0020:07F8  2E: FF 2E 00F0			jmp	cs:data_103		; (0020:00F0=0)
0020:07FD  2E: FF 2E 0181			jmp	cs:data_122		; (0020:0181=0)
0020:0802  03CB			data_188	dw	3CBh
0020:0804  0000			data_189	dw	0
0020:0806  000B[00]				db	11 dup (0)
0020:0811  15 7003				adc	ax,7003h
0020:0814  00 00				add	[bx+si],al
0020:0816  00 50 00				add	[bx+si+0],dl
0020:0819  02 00				add	al,[bx+si]
0020:081B  0E					push	cs
0020:081C  00 50 00				add	[bx+si+0],dl
0020:081F  14 00				adc	al,0
0020:0821  0C 00				or	al,0
0020:0823  70 00				jo	loc_53			; Jump if overflow=1
0020:0825			loc_53:
0020:0825  01 00				add	[bx+si],ax
0020:0827  10 00				adc	[bx+si],al
0020:0829  8B 03				mov	ax,[bp+di]
0020:082B  02 00				add	al,[bx+si]
0020:082D  00 00				add	[bx+si],al
0020:082F  BB C803				mov	bx,0C803h
0020:0832  04 00				add	al,0
0020:0834  00 00				add	[bx+si],al
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 20

0020:0836  00 00				add	[bx+si],al
0020:0838  57					push	di
0020:0839  06					push	es
0020:083A  53					push	bx
0020:083B  50					push	ax
0020:083C  33 FF				xor	di,di			; Zero register
0020:083E  8E C7				mov	es,di
0020:0840  BB 0015				mov	bx,15h
0020:0843  B8 1684				mov	ax,1684h
0020:0846  CD 2F				int	2Fh			; Multiplex/Spooler al=func 84h
0020:0848  8C C0				mov	ax,es
0020:084A  0B C7				or	ax,di
0020:084C  74 0B				jz	loc_54			; Jump if zero
0020:084E  0E					push	cs
0020:084F  B8 0359				mov	ax,359h
0020:0852  50					push	ax
0020:0853  06					push	es
0020:0854  57					push	di
0020:0855  B8 0001				mov	ax,1
0020:0858  CB					retf				; Return far
0020:0859			loc_54:
0020:0859  58					pop	ax
0020:085A  5B					pop	bx
0020:085B  07					pop	es
0020:085C  5F					pop	di
0020:085D  CB					retf
0020:085E  F0					db	0F0h
0020:085F  64					db	64h
0020:0860  6C					db	6Ch
0020:0861  0B 07				or	ax,[bx]
0020:0863  8E 00				mov	es,[bx+si]
0020:0865  000F[00]				db	15 dup (0)
0020:0874  01 00				add	[bx+si],ax
0020:0876  000E[00]				db	14 dup (0)
0020:0884  FF					db	0FFh
0020:0885  FF					db	0FFh
0020:0886  FF					db	0FFh
0020:0887  FF A9 0326				jmp	data_156[bx+di]		;*(0020:0326=0)
0020:088B  00 01				add	[bx+di],al
0020:088D  00 FF				add	bh,bh
0020:088F  FF					db	0FFh
0020:0890  FF					db	0FFh
0020:0891  FF 00				inc	word ptr [bx+si]
0020:0893  00 08				add	[bx+si],cl
0020:0895  02 EA				add	ch,dl
0020:0897  15 00A7				adc	ax,0A7h
0020:089A  CE					into				; Int 4 on overflow
0020:089B  00 A7 5A00				add	data_613[bx],ah		; (0020:5A00=0C0h)
0020:089F  00 70 00				add	[bx+si+0],dh
0020:08A2  24 00				and	al,0
0020:08A4  70 00				jo	loc_57			; Jump if overflow=1
0020:08A6			loc_57:
0020:08A6  80 00 00				add	byte ptr [bx+si],0
0020:08A9  00 00				add	[bx+si],al
0020:08AB  00 00				add	[bx+si],al
0020:08AD  00 7C 03				add	[si+3],bh
0020:08B0			loc_58:
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 21

0020:08B0  00 00				add	[bx+si],al
0020:08B2  72 03				jc	loc_59			; Jump if carry Set
0020:08B4  00 00				add	[bx+si],al
0020:08B6  03 03				add	ax,[bp+di]
0020:08B8  00 00				add	[bx+si],al
0020:08BA  D9 02				esc	1,[bp+si]		; coprocessor escape
0020:08BC  04 80				add	al,80h
0020:08BE  C6					db	0C6h
0020:08BF  0D 0DCC				or	ax,0DCCh
0020:08C2  4E					dec	si
0020:08C3  55					push	bp
0020:08C4  4C					dec	sp
0020:08C5  20 20				and	[bx+si],ah
0020:08C7  20 20				and	[bx+si],ah
0020:08C9  20 00				and	[bx+si],al
0020:08CB  00 00				add	[bx+si],al
0020:08CD  00 00				add	[bx+si],al
0020:08CF  00 00				add	[bx+si],al
0020:08D1  AB					stosw				; Store ax to es:[di]
0020:08D2  73 31				jnc	loc_60			; Jump if carry=0
0020:08D4  05 0000				add	ax,0
0020:08D7  00 00				add	[bx+si],al
0020:08D9  03 01				add	ax,[bx+di]
0020:08DB  00 04				add	[si],al
0020:08DD  0014[00]				db	20 dup (0)
0020:08F1  FF					db	0FFh
0020:08F2  FF 00				inc	word ptr [bx+si]
0020:08F4  00 00				add	[bx+si],al
0020:08F6  00 FE				add	dh,bh
0020:08F8  00 00				add	[bx+si],al
0020:08FA  37					aaa				; Ascii adjust
0020:08FB  14 FF				adc	al,0FFh
0020:08FD  9F					lahf				; Load ah from flags
0020:08FE  08 02				or	[bp+si],al
0020:0900  82 14 D3				adc	byte ptr [si],0D3h
0020:0903  28 2E D7FE				sub	data_672,ch		; (0020:D7FE=92h)
0020:0907  28 2E D7FE				sub	data_672,ch		; (0020:D7FE=92h)
0020:090B  28 2E D3FE				sub	data_669,ch		; (0020:D3FE=0B0h)
0020:090F  28 2E D3FE				sub	data_669,ch		; (0020:D3FE=0B0h)
0020:0913  28 2E D3FE				sub	data_669,ch		; (0020:D3FE=0B0h)
0020:0917  28 2E D3FE				sub	data_669,ch		; (0020:D3FE=0B0h)
0020:091B  28 2E D3FE				sub	data_669,ch		; (0020:D3FE=0B0h)
0020:091F  28 2E D7FE				sub	data_672,ch		; (0020:D7FE=92h)
0020:0923  28 2E D3FE				sub	data_669,ch		; (0020:D3FE=0B0h)
0020:0927  28 2E D3FE				sub	data_669,ch		; (0020:D3FE=0B0h)
0020:092B  28 2E D3FE				sub	data_669,ch		; (0020:D3FE=0B0h)
0020:092F  28 2E D7FE				sub	data_672,ch		; (0020:D7FE=92h)
0020:0933  28 2E D3FE				sub	data_669,ch		; (0020:D3FE=0B0h)
0020:0937  28 2E D3FE				sub	data_669,ch		; (0020:D3FE=0B0h)
0020:093B  28 2E 00FE				sub	data_104,ch		; (0020:00FE=0)
0020:093F  00 28				add	[bx+si],ch
0020:0941  03 05				add	ax,[di]
0020:0943  00 06 0200				add	byte ptr ds:[200h],al	; (0020:0200=0F8h)
0020:0947  00 00				add	[bx+si],al
0020:0949  C0					db	0C0h
0020:094A  00 36 7000				add	data_629,dh		; (0020:7000=61h)
0020:094E  0011[00]				db	17 dup (0)
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 22

0020:095F  F7					db	0F7h
0020:0960  8D 00				lea	ax,[bx+si]		; Load effective addr
0020:0962  00 00				add	[bx+si],al
0020:0964  00 12				add	[bp+si],dl
0020:0966  00 02				add	[bp+si],al
0020:0968  00 00				add	[bx+si],al
0020:096A  D3 00				rol	word ptr [bx+si],cl	; Rotate
0020:096C  24 00				and	al,0
0020:096E  70 00				jo	loc_61			; Jump if overflow=1
0020:0970			loc_61:
0020:0970  0010[00]				db	16 dup (0)
0020:0980  F7					db	0F7h
0020:0981  8D 58 00				lea	bx,[bx+si+0]		; Load effective addr
0020:0984  00 00				add	[bx+si],al
0020:0986  06					push	es
0020:0987  00 01				add	[bx+di],al
0020:0989  00 00				add	[bx+si],al
0020:098B  C0					db	0C0h
0020:098C  00 48 00				add	[bx+si+0],cl
0020:098F  70 00				jo	loc_64			; Jump if overflow=1
0020:0991			loc_64:
0020:0991  0010[00]				db	16 dup (0)
0020:09A1  F7					db	0F7h
0020:09A2  8D 00				lea	ax,[bx+si]		; Load effective addr
0020:09A4  0012[00]				db	18 dup (0)
0020:09B6  64					db	64h
0020:09B7  B8 0000				mov	ax,0
0020:09BA  9E					sahf				; Store ah into flags
0020:09BB  B8 0000				mov	ax,0
0020:09BE  00 00				add	[bx+si],al
0020:09C0  0000			data_204	dw	0
0020:09C2  31 05				xor	[di],ax
0020:09C4  9C					pushf				; Push flags
0020:09C5  00 00				add	[bx+si],al
0020:09C7  00 00				add	[bx+si],al
0020:09C9  00 00				add	[bx+si],al
0020:09CB  00 00				add	[bx+si],al
0020:09CD  00 00				add	[bx+si],al
0020:09CF  00 00				add	[bx+si],al
0020:09D1  00 00				add	[bx+si],al
0020:09D3  00 00				add	[bx+si],al
0020:09D5  00 00				add	[bx+si],al
0020:09D7  00 00				add	[bx+si],al
0020:09D9  00 00				add	[bx+si],al
0020:09DB  00 00				add	[bx+si],al
0020:09DD  00 00				add	[bx+si],al
0020:09DF  00 00				add	[bx+si],al
0020:09E1  00 00				add	[bx+si],al
0020:09E3  00 00				add	[bx+si],al
0020:09E5  00 00				add	[bx+si],al
0020:09E7  00 00				add	[bx+si],al
0020:09E9  00 00				add	[bx+si],al
0020:09EB  00 00				add	[bx+si],al
0020:09ED  00 00				add	[bx+si],al
0020:09EF  00 00				add	[bx+si],al
0020:09F1  00 00				add	[bx+si],al
0020:09F3  00 00				add	[bx+si],al
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 23

0020:09F5  00 00				add	[bx+si],al
0020:09F7  00 00				add	[bx+si],al
0020:09F9  00 00				add	[bx+si],al
0020:09FB  00 00				add	[bx+si],al
0020:09FD  00 00				add	[bx+si],al
0020:09FF  00 00				add	[bx+si],al
0020:0A01  00 00				add	[bx+si],al
0020:0A03  00 00				add	[bx+si],al
0020:0A05  00 00				add	[bx+si],al
0020:0A07  00 00				add	[bx+si],al
0020:0A09  00 00				add	[bx+si],al
0020:0A0B  00 00				add	[bx+si],al
0020:0A0D  00			data_208	db	0
0020:0A0E  00 00				add	[bx+si],al
0020:0A10  00 00				add	[bx+si],al
0020:0A12  00 00				add	[bx+si],al
0020:0A14  00 00				add	[bx+si],al
0020:0A16  00 00				add	[bx+si],al
0020:0A18  00 00				add	[bx+si],al
0020:0A1A  00 00				add	[bx+si],al
0020:0A1C  00 00				add	[bx+si],al
0020:0A1E  00 00				add	[bx+si],al
0020:0A20  00 00				add	[bx+si],al
0020:0A22  00 00				add	[bx+si],al
0020:0A24  00 00				add	[bx+si],al
0020:0A26  00 00				add	[bx+si],al
0020:0A28  00 00				add	[bx+si],al
0020:0A2A  00 00				add	[bx+si],al
0020:0A2C  00 00				add	[bx+si],al
0020:0A2E  00 00				add	[bx+si],al
0020:0A30  00 00				add	[bx+si],al
0020:0A32  00 00				add	[bx+si],al
0020:0A34  00 00				add	[bx+si],al
0020:0A36  00 00				add	[bx+si],al
0020:0A38  00 00				add	[bx+si],al
0020:0A3A  00 00				add	[bx+si],al
0020:0A3C  00 00				add	[bx+si],al
0020:0A3E  00 00				add	[bx+si],al
0020:0A40  00 00				add	[bx+si],al
0020:0A42  00 00				add	[bx+si],al
0020:0A44  00 00				add	[bx+si],al
0020:0A46  00 00				add	[bx+si],al
0020:0A48  00 00				add	[bx+si],al
0020:0A4A  00 00				add	[bx+si],al
0020:0A4C  00 00				add	[bx+si],al
0020:0A4E  00 00				add	[bx+si],al
0020:0A50  00 00				add	[bx+si],al
0020:0A52  00 00				add	[bx+si],al
0020:0A54  00 00				add	[bx+si],al
0020:0A56  00 00				add	[bx+si],al
0020:0A58  00 00				add	[bx+si],al
0020:0A5A  00 00				add	[bx+si],al
0020:0A5C  00 00				add	[bx+si],al
0020:0A5E  00 00				add	[bx+si],al
0020:0A60  00 00				add	[bx+si],al
0020:0A62  00 00				add	[bx+si],al
0020:0A64  00 00				add	[bx+si],al
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 24

0020:0A66  00 00				add	[bx+si],al
0020:0A68  00 00				add	[bx+si],al
0020:0A6A  00 12				add	[bp+si],dl
0020:0A6C  00 00				add	[bx+si],al
0020:0A6E  00 00				add	[bx+si],al
0020:0A70  00 00				add	[bx+si],al
0020:0A72  00 00				add	[bx+si],al
0020:0A74  00 00				add	[bx+si],al
0020:0A76  00 00				add	[bx+si],al
0020:0A78  00 00				add	[bx+si],al
0020:0A7A  00 00				add	[bx+si],al
0020:0A7C  00 00				add	[bx+si],al
0020:0A7E  00 00				add	[bx+si],al
0020:0A80  00 00				add	[bx+si],al
0020:0A82  00 00				add	[bx+si],al
0020:0A84  00 00				add	[bx+si],al
0020:0A86  00 00				add	[bx+si],al
0020:0A88  00 00				add	[bx+si],al
0020:0A8A  00 00				add	[bx+si],al
0020:0A8C  00 00				add	[bx+si],al
0020:0A8E  00 00				add	[bx+si],al
0020:0A90  00 00				add	[bx+si],al
0020:0A92  00 00				add	[bx+si],al
0020:0A94  00 00				add	[bx+si],al
0020:0A96  00 00				add	[bx+si],al
0020:0A98  00 00				add	[bx+si],al
0020:0A9A  00 00				add	[bx+si],al
0020:0A9C  00 00				add	[bx+si],al
0020:0A9E  00 00				add	[bx+si],al
0020:0AA0  00 00				add	[bx+si],al
0020:0AA2  00 00				add	[bx+si],al
0020:0AA4  00 00				add	[bx+si],al
0020:0AA6  00 00				add	[bx+si],al
0020:0AA8  00 00				add	[bx+si],al
0020:0AAA  00 00				add	[bx+si],al
0020:0AAC  00 00				add	[bx+si],al
0020:0AAE  00 00				add	[bx+si],al
0020:0AB0  00 00				add	[bx+si],al
0020:0AB2  00 00				add	[bx+si],al
0020:0AB4  00 00				add	[bx+si],al
0020:0AB6  00 00				add	[bx+si],al
0020:0AB8  00 00				add	[bx+si],al
0020:0ABA  00 00				add	[bx+si],al
0020:0ABC  00 00				add	[bx+si],al
0020:0ABE  00 00				add	[bx+si],al
0020:0AC0  00 00				add	[bx+si],al
0020:0AC2  00 00				add	[bx+si],al
0020:0AC4  00 00				add	[bx+si],al
0020:0AC6  00 00				add	[bx+si],al
0020:0AC8  00 00				add	[bx+si],al
0020:0ACA  00 00				add	[bx+si],al
0020:0ACC  00 00				add	[bx+si],al
0020:0ACE  00 00				add	[bx+si],al
0020:0AD0  00 00				add	[bx+si],al
0020:0AD2  00 00				add	[bx+si],al
0020:0AD4  00 00				add	[bx+si],al
0020:0AD6  00 00				add	[bx+si],al
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 25

0020:0AD8  00 00				add	[bx+si],al
0020:0ADA  00 00				add	[bx+si],al
0020:0ADC  00 00				add	[bx+si],al
0020:0ADE  00 00				add	[bx+si],al
0020:0AE0  00 00				add	[bx+si],al
0020:0AE2  00 00				add	[bx+si],al
0020:0AE4  00 00				add	[bx+si],al
0020:0AE6  00 00				add	[bx+si],al
0020:0AE8  00 00				add	[bx+si],al
0020:0AEA  00 00				add	[bx+si],al
0020:0AEC  00 00				add	[bx+si],al
0020:0AEE  00 00				add	[bx+si],al
0020:0AF0  00 00				add	[bx+si],al
0020:0AF2  00 00				add	[bx+si],al
0020:0AF4  00 00				add	[bx+si],al
0020:0AF6  00 00				add	[bx+si],al
0020:0AF8  00 00				add	[bx+si],al
0020:0AFA  00 00				add	[bx+si],al
0020:0AFC  00 00				add	[bx+si],al
0020:0AFE  00 00				add	[bx+si],al
0020:0B00  00 00				add	[bx+si],al
0020:0B02  00 00				add	[bx+si],al
  
				;ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
				;			       SUBROUTINE
				;‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
  
				sub_19		proc	near
0020:0B04  00 00				add	[bx+si],al
0020:0B06  00 00				add	[bx+si],al
0020:0B08  00 00				add	[bx+si],al
0020:0B0A  00 00				add	[bx+si],al
0020:0B0C  00 00				add	[bx+si],al
0020:0B0E  00 00				add	[bx+si],al
0020:0B10  00 00				add	[bx+si],al
0020:0B12  00 00				add	[bx+si],al
0020:0B14  00 00				add	[bx+si],al
0020:0B16  00 00				add	[bx+si],al
0020:0B18  00 00				add	[bx+si],al
0020:0B1A  00 00				add	[bx+si],al
0020:0B1C  00 00				add	[bx+si],al
0020:0B1E  00 00				add	[bx+si],al
0020:0B20  00 00				add	[bx+si],al
0020:0B22  00 00				add	[bx+si],al
0020:0B24  00 00				add	[bx+si],al
0020:0B26  00 00				add	[bx+si],al
0020:0B28  00 00				add	[bx+si],al
0020:0B2A  00 00				add	[bx+si],al
0020:0B2C  00 00				add	[bx+si],al
0020:0B2E  00 00				add	[bx+si],al
0020:0B30  00 00				add	[bx+si],al
0020:0B32  00 00				add	[bx+si],al
0020:0B34  00 00				add	[bx+si],al
0020:0B36  00 00				add	[bx+si],al
0020:0B38  00 00				add	[bx+si],al
0020:0B3A  00 00				add	[bx+si],al
0020:0B3C  00 00				add	[bx+si],al
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 26

0020:0B3E  00 00				add	[bx+si],al
0020:0B40  00 00				add	[bx+si],al
0020:0B42  00 00				add	[bx+si],al
0020:0B44  00 00				add	[bx+si],al
0020:0B46  00 00				add	[bx+si],al
0020:0B48  00 00				add	[bx+si],al
0020:0B4A  00 00				add	[bx+si],al
0020:0B4C  00 00				add	[bx+si],al
0020:0B4E  00 00				add	[bx+si],al
0020:0B50  00 00				add	[bx+si],al
0020:0B52  00 00				add	[bx+si],al
0020:0B54  00 00				add	[bx+si],al
0020:0B56  00 00				add	[bx+si],al
0020:0B58  00 00				add	[bx+si],al
0020:0B5A  00 00				add	[bx+si],al
0020:0B5C  00 00				add	[bx+si],al
0020:0B5E  00 00				add	[bx+si],al
0020:0B60  00 00				add	[bx+si],al
0020:0B62  00 00				add	[bx+si],al
0020:0B64  00 00				add	[bx+si],al
0020:0B66  00 00				add	[bx+si],al
0020:0B68  00 00				add	[bx+si],al
0020:0B6A  00 00				add	[bx+si],al
0020:0B6C  00 00				add	[bx+si],al
0020:0B6E  00 00				add	[bx+si],al
0020:0B70  00 00				add	[bx+si],al
0020:0B72  15 002F				adc	ax,2Fh
0020:0B75  00 01				add	[bx+di],al
0020:0B77  0010[20]				db	16 dup (20h)
0020:0B87  0E					push	cs
0020:0B88  0D 0D0E				or	ax,0D0Eh
0020:0B8B  0E					push	cs
0020:0B8C  0D 0D0E				or	ax,0D0Eh
0020:0B8F  00 00				add	[bx+si],al
0020:0B91  90					nop
0020:0B92  00 00				add	[bx+si],al
0020:0B94  FF 01				inc	word ptr [bx+di]
0020:0B96  12 00				adc	al,[bx+si]
0020:0B98  03 08				add	cx,[bx+si]
0020:0B9A  00 00				add	[bx+si],al
0020:0B9C  00 00				add	[bx+si],al
0020:0B9E  6F					db	6Fh
0020:0B9F  38 F8				cmp	al,bh
0020:0BA1  16					push	ss
0020:0BA2  31 05				xor	[di],ax
0020:0BA4  00 00				add	[bx+si],al
0020:0BA6  00 00				add	[bx+si],al
0020:0BA8  02 00				add	al,[bx+si]
0020:0BAA  00 00				add	[bx+si],al
0020:0BAC  20 40 31				and	[bx+si+31h],al
0020:0BAF  05 0000				add	ax,0
0020:0BB2  30 05				xor	[di],al
0020:0BB4  30 05				xor	[di],al
0020:0BB6  30 05				xor	[di],al
0020:0BB8  FF 9F 0000		;*		call	dword ptr [bx+0]	;*41 entries
0020:0BB8  FF 9F 00 00				db	0FFh, 9Fh, 00h, 00h
0020:0BBC  00 00				add	[bx+si],al
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 27

0020:0BBE  00 00				add	[bx+si],al
0020:0BC0  01 90 0000				add	[bx+si+0],dx
0020:0BC4  00 00				add	[bx+si],al
0020:0BC6  FF					db	0FFh
0020:0BC7  FF 00				inc	word ptr [bx+si]
0020:0BC9  00 01				add	[bx+di],al
0020:0BCB  00 0D				add	[di],cl
0020:0BCD  00 0D				add	[di],cl
0020:0BCF  00 01				add	[bx+di],al
0020:0BD1  0012[00]				db	18 dup (0)
0020:0BE3  00			data_212	db	0
0020:0BE4  00 00				add	[bx+si],al
0020:0BE6  00 00				add	[bx+si],al
0020:0BE8  00 00				add	[bx+si],al
0020:0BEA  F7 01 0070				test	word ptr [bx+di],70h
0020:0BEE  0E					push	cs
0020:0BEF  00 05				add	[di],al
0020:0BF1  30 03				xor	[bp+di],al
  
				;ﬂﬂﬂﬂ External Entry into Subroutine ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
  
				sub_21:
0020:0BF3  0008[00]				db	8 dup (0)
0020:0BFB  D000			data_214	dw	0D000h
0020:0BFD  03 A7 0100				add	sp,word ptr ds:[100h][bx]	; (0C06:0100=2600h)
0020:0C01  00 00				add	[bx+si],al
0020:0C03  00 0E 0500				add	byte ptr ds:[500h],cl	; (0C06:0500=0C5h)
0020:0C07  30 03				xor	[bp+di],al
0020:0C09  0009[00]				db	9 dup (0)
0020:0C12  D0 03				rol	byte ptr [bp+di],1	; Rotate
0020:0C14  A7					cmpsw				; Cmp [si] to es:[di]
0020:0C15  00 01				add	[bx+di],al
0020:0C17  00 00 00				db	0, 0, 0
0020:0C1A  0000			data_217	dw	0
0020:0C1C  0000			data_218	dw	0
0020:0C1E  00			data_219	db	0
0020:0C1F  00 00				add	[bx+si],al
0020:0C21  00 00				add	[bx+si],al
0020:0C23  FF					db	0FFh
0020:0C24  FF					db	0FFh
0020:0C25  FF					db	0FFh
0020:0C26  FF 00				inc	word ptr [bx+si]
0020:0C28  00 00				add	[bx+si],al
0020:0C2A  00 00				add	[bx+si],al
0020:0C2C  00 20				add	[bx+si],ah
0020:0C2E  0007[20]				db	7 dup (20h)
0020:0C35  90					nop
0020:0C36  00 00				add	[bx+si],al
0020:0C38  00 FF				add	bh,bh
0020:0C3A  0007[00]				db	7 dup (0)
0020:0C41  01 43 3A				add	[bp+di+3Ah],ax
0020:0C44  5C 44 4F 43 55 4D			db	'\DOCUME~1\xander\Desktop\SOURCE~'
0020:0C4A  45 7E 31 5C 78 61
0020:0C50  6E 64 65 72 5C 44
0020:0C56  65 73 6B 74 6F 70
0020:0C5C  5C 53 4F 55 52 43
0020:0C62  45 7E
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 28

0020:0C64  31 2E 45 4E 47 5C			db	'1.ENG\TEMP.LST', 0
0020:0C6A  54 45 4D 50 2E 4C
0020:0C70  53 54 00
0020:0C73  44 45 46				db	'DEF'
0020:0C76  000C[00]				db	12 dup (0)
0020:0C82  B8 5C42				mov	ax,5C42h
0020:0C85  BA 1430				mov	dx,1430h
0020:0C88  8C DB				mov	bx,ds
0020:0C8A  03 D8				add	bx,ax
0020:0C8C  3B 1E 0002				cmp	bx,word ptr ds:[2]	; (0C06:0002=0A10Bh)
0020:0C90  73 1D				jae	loc_67			; Jump if above or =
0020:0C92  83 EB 20				sub	bx,20h
0020:0C95  FA					cli				; Disable interrupts
0020:0C96  8E D3				mov	ss,bx
0020:0C98  BC 0200				mov	sp,200h
0020:0C9B  FB					sti				; Enable interrupts
0020:0C9C  83 EB 25				sub	bx,25h
0020:0C9F  8E C3				mov	es,bx
0020:0CA1  53					push	bx
0020:0CA2  B9 0123				mov	cx,123h
0020:0CA5  33 FF				xor	di,di			; Zero register
0020:0CA7  57					push	di
0020:0CA8  BE 0148				mov	si,148h
0020:0CAB  FC					cld				; Clear direction
0020:0CAC  F3/ A5				rep	movsw			; Rep when cx >0 Mov [si] to es:[di]
0020:0CAE  CB					retf				; Return far
0020:0CAF			loc_67:
0020:0CAF  B4 09				mov	ah,9
0020:0CB1  BA 0136				mov	dx,136h
0020:0CB4  CD 21				int	21h			; DOS Services  ah=function 09h
										;  display char string at ds:dx
0020:0CB6  CD 20				int	20h			; Program Terminate
0020:0CB8  4E					dec	si
0020:0CB9  6F					db	6Fh
0020:0CBA  74 20				jz	loc_68			; Jump if zero
0020:0CBC  65					db	65h
0020:0CBD  6E					db	6Eh
0020:0CBE  6F					db	6Fh
0020:0CBF  75 67				jnz	loc_75			; Jump if not zero
0020:0CC1  68					db	68h
0020:0CC2  20 6D 65				and	[di+65h],ch
0020:0CC5  6D					db	6Dh
0020:0CC6  6F					db	6Fh
0020:0CC7  72 79				jc	loc_80			; Jump if carry Set
0020:0CC9  24 FD				and	al,0FDh
0020:0CCB  8C DB				mov	bx,ds
0020:0CCD  53					push	bx
0020:0CCE  83 C3 39				add	bx,39h
0020:0CD1  03 DA				add	bx,dx
0020:0CD3  BE FFFE				mov	si,0FFFEh
0020:0CD6  8B FE				mov	di,si
0020:0CD8  8C CD				mov	bp,cs
0020:0CDA  8B C5				mov	ax,bp
0020:0CDC			loc_68:
0020:0CDC  2B EA				sub	bp,dx
0020:0CDE			loc_69:
0020:0CDE  8B CA				mov	cx,dx
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 29

0020:0CE0  80 FD 10				cmp	ch,10h
0020:0CE3  72 03				jb	loc_70			; Jump if below
0020:0CE5  B9 1000				mov	cx,1000h
0020:0CE8			loc_70:
0020:0CE8  2B D1				sub	dx,cx
0020:0CEA  D1 E1				shl	cx,1			; Shift w/zeros fill
0020:0CEC  D1 E1				shl	cx,1			; Shift w/zeros fill
0020:0CEE  D1 E1				shl	cx,1			; Shift w/zeros fill
0020:0CF0  80 EC 10				sub	ah,10h
0020:0CF3  80 EF 10				sub	bh,10h
0020:0CF6  8E C0				mov	es,ax
0020:0CF8  8E DB				mov	ds,bx
0020:0CFA  F3/ A5				rep	movsw			; Rep when cx >0 Mov [si] to es:[di]
0020:0CFC  85 D2				test	dx,dx
0020:0CFE  75 DE				jnz	loc_69			; Jump if not zero
0020:0D00  FC					cld				; Clear direction
0020:0D01  8E DD				mov	ds,bp
0020:0D03  07					pop	es
0020:0D04  06					push	es
0020:0D05  BF 0100				mov	di,100h
0020:0D08  33 F6				xor	si,si			; Zero register
0020:0D0A  AD					lodsw				; String [si] to ax
0020:0D0B  95					xchg	ax,bp
0020:0D0C  BA 0010				mov	dx,10h
0020:0D0F  EB 38				jmp	short loc_82		; (0D49)
0020:0D11  90					nop
0020:0D12			loc_71:
0020:0D12  AD					lodsw				; String [si] to ax
0020:0D13  95					xchg	ax,bp
0020:0D14  B2 10				mov	dl,10h
0020:0D16  EB 41				jmp	short loc_84		; (0D59)
0020:0D18			loc_72:
0020:0D18  AD					lodsw				; String [si] to ax
0020:0D19  95					xchg	ax,bp
0020:0D1A  B2 10				mov	dl,10h
0020:0D1C  EB 42				jmp	short loc_85		; (0D60)
0020:0D1E			loc_73:
0020:0D1E  AD					lodsw				; String [si] to ax
0020:0D1F  95					xchg	ax,bp
0020:0D20  B2 10				mov	dl,10h
0020:0D22  EB 48				jmp	short loc_86		; (0D6C)
0020:0D24			loc_74:
0020:0D24  AD					lodsw				; String [si] to ax
0020:0D25  95					xchg	ax,bp
0020:0D26  B2 10				mov	dl,10h
0020:0D28			loc_75:
0020:0D28  EB 4D				jmp	short loc_87		; (0D77)
0020:0D2A			loc_76:
0020:0D2A  AD					lodsw				; String [si] to ax
0020:0D2B  95					xchg	ax,bp
0020:0D2C  B2 10				mov	dl,10h
0020:0D2E  EB 53				jmp	short loc_88		; (0D83)
0020:0D30			loc_77:
0020:0D30  AD					lodsw				; String [si] to ax
0020:0D31  95					xchg	ax,bp
0020:0D32  B2 10				mov	dl,10h
0020:0D34  EB 67				jmp	short loc_91		; (0D9D)
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 30

0020:0D36			loc_78:
0020:0D36  AD					lodsw				; String [si] to ax
0020:0D37  95					xchg	ax,bp
0020:0D38  B2 10				mov	dl,10h
0020:0D3A  EB 68				jmp	short loc_92		; (0DA4)
0020:0D3C			loc_79:
0020:0D3C  AD					lodsw				; String [si] to ax
0020:0D3D  95					xchg	ax,bp
0020:0D3E  B2 10				mov	dl,10h
0020:0D40  EB 69				jmp	short loc_93		; (0DAB)
0020:0D42			loc_80:
0020:0D42  AD					lodsw				; String [si] to ax
0020:0D43  95					xchg	ax,bp
0020:0D44  B2 10				mov	dl,10h
0020:0D46  72 08				jc	loc_83			; Jump if carry Set
0020:0D48			loc_81:
0020:0D48  A4					movsb				; Mov [si] to es:[di]
0020:0D49			loc_82:
0020:0D49  D1 ED				shr	bp,1			; Shift w/zeros fill
0020:0D4B  4A					dec	dx
0020:0D4C  74 F4				jz	loc_80			; Jump if zero
0020:0D4E  73 F8				jnc	loc_81			; Jump if carry=0
0020:0D50			loc_83:
0020:0D50  33 C9				xor	cx,cx			; Zero register
0020:0D52  33 DB				xor	bx,bx			; Zero register
0020:0D54  D1 ED				shr	bp,1			; Shift w/zeros fill
0020:0D56  4A					dec	dx
0020:0D57  74 B9				jz	loc_71			; Jump if zero
0020:0D59			loc_84:
0020:0D59  D1 D3				rcl	bx,1			; Rotate thru carry
0020:0D5B  D1 ED				shr	bp,1			; Shift w/zeros fill
0020:0D5D  4A					dec	dx
0020:0D5E  74 B8				jz	loc_72			; Jump if zero
0020:0D60			loc_85:
0020:0D60  D1 D3				rcl	bx,1			; Rotate thru carry
0020:0D62  80 FB 02				cmp	bl,2
0020:0D65  73 28				jae	loc_90			; Jump if above or =
0020:0D67  D1 ED				shr	bp,1			; Shift w/zeros fill
0020:0D69  4A					dec	dx
0020:0D6A  74 B2				jz	loc_73			; Jump if zero
0020:0D6C			loc_86:
0020:0D6C  D1 D3				rcl	bx,1			; Rotate thru carry
0020:0D6E  85 DB				test	bx,bx
0020:0D70  74 18				jz	loc_89			; Jump if zero
0020:0D72  D1 ED				shr	bp,1			; Shift w/zeros fill
0020:0D74  4A					dec	dx
0020:0D75  74 AD				jz	loc_74			; Jump if zero
0020:0D77			loc_87:
0020:0D77  D1 D3				rcl	bx,1			; Rotate thru carry
0020:0D79  80 FB 05				cmp	bl,5
0020:0D7C  72 0C				jb	loc_89			; Jump if below
0020:0D7E  D1 ED				shr	bp,1			; Shift w/zeros fill
0020:0D80  4A					dec	dx
0020:0D81  74 A7				jz	loc_76			; Jump if zero
0020:0D83			loc_88:
0020:0D83  D1 D3				rcl	bx,1			; Rotate thru carry
0020:0D85  80 FB 0C				cmp	bl,0Ch
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 31

0020:0D88  77 7C				ja	loc_97			; Jump if above
0020:0D8A			loc_89:
0020:0D8A  2E: 8A 9F 0208			mov	bl,byte ptr cs:[208h][bx]	; (0020:0208=0BCh)
0020:0D8F			loc_90:
0020:0D8F  87 D9				xchg	bx,cx
0020:0D91  33 DB				xor	bx,bx			; Zero register
0020:0D93  83 F9 02				cmp	cx,2
0020:0D96  74 2A				je	loc_95			; Jump if equal
0020:0D98  D1 ED				shr	bp,1			; Shift w/zeros fill
0020:0D9A  4A					dec	dx
0020:0D9B  74 93				jz	loc_77			; Jump if zero
0020:0D9D			loc_91:
0020:0D9D  72 23				jc	loc_95			; Jump if carry Set
0020:0D9F  D1 ED				shr	bp,1			; Shift w/zeros fill
0020:0DA1  4A					dec	dx
0020:0DA2  74 92				jz	loc_78			; Jump if zero
0020:0DA4			loc_92:
0020:0DA4  D1 D3				rcl	bx,1			; Rotate thru carry
0020:0DA6  D1 ED				shr	bp,1			; Shift w/zeros fill
0020:0DA8  4A					dec	dx
0020:0DA9  74 91				jz	loc_79			; Jump if zero
0020:0DAB			loc_93:
0020:0DAB  D1 D3				rcl	bx,1			; Rotate thru carry
0020:0DAD  D1 ED				shr	bp,1			; Shift w/zeros fill
0020:0DAF  4A					dec	dx
0020:0DB0  75 04				jnz	loc_94			; Jump if not zero
0020:0DB2  AD					lodsw				; String [si] to ax
0020:0DB3  95					xchg	ax,bp
0020:0DB4  B2 10				mov	dl,10h
0020:0DB6			loc_94:
0020:0DB6  D1 D3				rcl	bx,1			; Rotate thru carry
0020:0DB8  80 FB 02				cmp	bl,2
0020:0DBB  73 16				jae	loc_96			; Jump if above or =
0020:0DBD  2E					db	2Eh
0020:0DBE  54					push	sp
0020:0DBF  45					inc	bp
0020:0DC0  4D					dec	bp
0020:0DC1  50					push	ax
0020:0DC2			loc_95:
0020:0DC2  20 20				and	[bx+si],ah
0020:0DC4  20 20				and	[bx+si],ah
0020:0DC6  4C					dec	sp
0020:0DC7  53					push	bx
0020:0DC8  54					push	sp
0020:0DC9  0018[00]				db	24 dup (0)
0020:0DE1  01 00				add	[bx+si],ax
0020:0DE3  00 FF				add	bh,bh
0020:0DE5  0008[00]				db	8 dup (0)
0020:0DED  FF 00				inc	word ptr [bx+si]
0020:0DEF  03 00				add	ax,[bx+si]
0020:0DF1  00 DE				add	dh,bl
0020:0DF3  01 09				add	[bx+di],cx
0020:0DF5  04 FA				add	al,0FAh
0020:0DF7  05 0409				add	ax,409h
0020:0DFA  0012[00]				db	18 dup (0)
0020:0E0C  48					dec	ax
0020:0E0D  00 70 00				add	[bx+si+0],dh
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 32

0020:0E10  37					aaa				; Ascii adjust
0020:0E11  01 A7 8E00				add	word ptr ds:[8E00h][bx],sp	; (FEEA:8E00=0)
0020:0E15  00 7C 03				add	[si+3],bh
0020:0E18  00 00				add	[bx+si],al
0020:0E1A  00 00				add	[bx+si],al
0020:0E1C  FF					db	0FFh
0020:0E1D  FF 05				inc	word ptr [di]
0020:0E1F  00 1D				add	[di],bl
0020:0E21  00 31				add	[bx+di],dh
0020:0E23  05 03D2				add	ax,3D2h
0020:0E26  00 00				add	[bx+si],al
0020:0E28  FA					cli				; Disable interrupts
0020:0E29  03 00				add	ax,[bx+si]
0020:0E2B  0031[00]				db	49 dup (0)
0020:0E5C  06					push	es
0020:0E5D  39 F8				cmp	ax,di
0020:0E5F  16					push	ss
0020:0E60  07					pop	es
0020:0E61  4C					dec	sp
0020:0E62  09 04				or	[si],ax
0020:0E64  FA					cli				; Disable interrupts
0020:0E65  05 0000				add	ax,0
0020:0E68  018E[00]				db	398 dup (0)
0020:0FF6  A7					cmpsw				; Cmp [si] to es:[di]
0020:0FF7  05 02D9				add	ax,2D9h
0020:0FFA  01 00				add	[bx+si],ax
0020:0FFC  D9 02				esc	1,[bp+si]		; coprocessor escape
0020:0FFE  47					inc	di
0020:0FFF  01 D9				add	cx,bx
0020:1001  02 40 02				add	al,[bx+si+2]
0020:1004  40					inc	ax
0020:1005  00 07				add	[bx],al
0020:1007  54					push	sp
0020:1008  2E: FE 02				inc	byte ptr cs:[bp+si]
0020:100B  02 0B				add	cl,[bp+di]
0020:100D  0B 31				or	si,[bx+di]
0020:100F  05 261F				add	ax,261Fh
0020:1012  002E[00]				db	46 dup (0)
0020:1040  0000 0000		data_230	dd	00000h
0020:1044  0000 0000		data_231	dd	00000h
0020:1048  0000 0000		data_232	dd	00000h
0020:104C  0000 0000		data_233	dd	00000h
0020:1050  0000 0000		data_234	dd	00000h
0020:1054  0000 0000		data_235	dd	00000h
0020:1058  0000 0000		data_236	dd	00000h
0020:105C  0000 0000		data_237	dd	00000h
0020:1060  00 00				add	[bx+si],al
0020:1062  00 00				add	[bx+si],al
0020:1064  0000			data_238	dw	0
0020:1066  0000			data_239	dw	0
0020:1068  00 00				add	[bx+si],al
0020:106A  00 00				add	[bx+si],al
0020:106C  00 00				add	[bx+si],al
0020:106E  00 00				add	[bx+si],al
0020:1070  00 00				add	[bx+si],al
0020:1072  00 00				add	[bx+si],al
0020:1074  00 00				add	[bx+si],al
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 33

0020:1076  00 00				add	[bx+si],al
0020:1078  00 00				add	[bx+si],al
0020:107A  00 00				add	[bx+si],al
0020:107C  00 00				add	[bx+si],al
0020:107E  00 00				add	[bx+si],al
0020:1080  00 00				add	[bx+si],al
0020:1082  00 00				add	[bx+si],al
0020:1084  00 00				add	[bx+si],al
0020:1086  00 00				add	[bx+si],al
0020:1088  00 00				add	[bx+si],al
0020:108A  00 00				add	[bx+si],al
0020:108C  00 00				add	[bx+si],al
0020:108E  00 00				add	[bx+si],al
0020:1090  00 00				add	[bx+si],al
0020:1092  00 00				add	[bx+si],al
0020:1094  00 00				add	[bx+si],al
0020:1096  00 00				add	[bx+si],al
0020:1098  00 00				add	[bx+si],al
0020:109A  00 00				add	[bx+si],al
0020:109C  00 00				add	[bx+si],al
0020:109E  00 00				add	[bx+si],al
0020:10A0  00 00				add	[bx+si],al
0020:10A2  00 00				add	[bx+si],al
0020:10A4  00 00				add	[bx+si],al
0020:10A6  00 00				add	[bx+si],al
0020:10A8  00 00				add	[bx+si],al
0020:10AA  00 00				add	[bx+si],al
0020:10AC  00 00				add	[bx+si],al
0020:10AE  00 00				add	[bx+si],al
0020:10B0  00 00				add	[bx+si],al
0020:10B2  00 00				add	[bx+si],al
0020:10B4  00 00				add	[bx+si],al
0020:10B6  00 00				add	[bx+si],al
0020:10B8  00 00				add	[bx+si],al
0020:10BA  00 00				add	[bx+si],al
0020:10BC  00 00				add	[bx+si],al
0020:10BE  00 00				add	[bx+si],al
0020:10C0  00 00				add	[bx+si],al
0020:10C2  00 00				add	[bx+si],al
0020:10C4  00 00				add	[bx+si],al
0020:10C6  00 00				add	[bx+si],al
0020:10C8  00 00				add	[bx+si],al
0020:10CA  00 00				add	[bx+si],al
0020:10CC  00 00				add	[bx+si],al
0020:10CE  00 00				add	[bx+si],al
0020:10D0  00 00				add	[bx+si],al
0020:10D2  00 00				add	[bx+si],al
0020:10D4  00 00				add	[bx+si],al
0020:10D6  00 00				add	[bx+si],al
0020:10D8  00 00				add	[bx+si],al
0020:10DA  00 00				add	[bx+si],al
0020:10DC  00 00				add	[bx+si],al
0020:10DE  00 00				add	[bx+si],al
0020:10E0  00 00				add	[bx+si],al
0020:10E2  00 00				add	[bx+si],al
0020:10E4  00 00				add	[bx+si],al
0020:10E6  00 00				add	[bx+si],al
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 34

0020:10E8  00 00				add	[bx+si],al
0020:10EA  00 00				add	[bx+si],al
0020:10EC  00 00				add	[bx+si],al
0020:10EE  00 00				add	[bx+si],al
0020:10F0  00 00				add	[bx+si],al
0020:10F2  00 00				add	[bx+si],al
0020:10F4  00 00				add	[bx+si],al
0020:10F6  00 00				add	[bx+si],al
0020:10F8  00 00				add	[bx+si],al
0020:10FA  00 00				add	[bx+si],al
0020:10FC  00 00				add	[bx+si],al
0020:10FE  00 00				add	[bx+si],al
0020:1100  00 00				add	[bx+si],al
0020:1102  00 00				add	[bx+si],al
0020:1104  00 00				add	[bx+si],al
0020:1106  00 00				add	[bx+si],al
0020:1108  00 00				add	[bx+si],al
0020:110A  00 00				add	[bx+si],al
0020:110C  00 00				add	[bx+si],al
0020:110E  00 00				add	[bx+si],al
0020:1110  00 00				add	[bx+si],al
0020:1112  00 00				add	[bx+si],al
0020:1114  00 00				add	[bx+si],al
0020:1116  00 00				add	[bx+si],al
0020:1118  00 00				add	[bx+si],al
0020:111A  00 00				add	[bx+si],al
0020:111C  00 00				add	[bx+si],al
0020:111E  00 00				add	[bx+si],al
0020:1120  00 00				add	[bx+si],al
0020:1122  00 00				add	[bx+si],al
0020:1124  00 00				add	[bx+si],al
0020:1126  00 70 00				add	[bx+si+0],dh
0020:1129			loc_99:
0020:1129  00 00				add	[bx+si],al
0020:112B  15 8F01				adc	ax,8F01h
0020:112E  00 5C 03				add	[si+3],bl
0020:1131  A7					cmpsw				; Cmp [si] to es:[di]
0020:1132  00 70 00				add	[bx+si+0],dh
0020:1135  1E					push	ds
0020:1136  09 5F 03				or	[bx+3],bx
0020:1139  31 05				xor	[di],ax
0020:113B  10 00				adc	[bx+si],al
0020:113D  FC					cld				; Clear direction
0020:113E  01 48 00				add	[bx+si+0],cx
0020:1141  FF 01				inc	word ptr [bx+di]
0020:1143  8B 4D 2E				mov	cx,[di+2Eh]
0020:1146  FE					db	0FEh
0020:1147  7A 06				jp	loc_100			; Jump if parity=1
0020:1149  D9 02				esc	1,[bp+si]		; coprocessor escape
0020:114B  01 00				add	[bx+si],ax
0020:114D  D9 02				esc	1,[bp+si]		; coprocessor escape
0020:114F			loc_100:
0020:114F  0147 02D9		data_244	dd	2D90147h
0020:1153  3202 197A		data_245	dd	197A3202h
0020:1157  0531 0400		data_246	dd	4000531h
0020:115B  00 01				add	[bx+di],al
0020:115D  FF 33				push	word ptr [bp+di]
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 35

0020:115F  0B 2A				or	bp,[bp+si]
0020:1161  4F					dec	di
0020:1162  00 20				add	[bx+si],ah
0020:1164  D4					db	0D4h
0020:1165  03 6C 4E				add	bp,[si+4Eh]
0020:1168  00 00				add	[bx+si],al
0020:116A  00 00				add	[bx+si],al
0020:116C  05 586A				add	ax,586Ah
0020:116F  04 FA				add	al,0FAh
0020:1171  03 A7 FD00				add	sp,word ptr ds:[0FD00h][bx]	; (FEEA:FD00=0)
0020:1175  2B F8				sub	di,ax
0020:1177  16					push	ss
0020:1178  54					push	sp
0020:1179  45					inc	bp
0020:117A  4D					dec	bp
0020:117B  50					push	ax
0020:117C  2E					db	2Eh
0020:117D  4C					dec	sp
0020:117E  53					push	bx
0020:117F  54					push	sp
0020:1180  00 00				add	[bx+si],al
0020:1182  85 19				test	bx,[bx+di]
0020:1184  01 00				add	[bx+si],ax
0020:1186  BE 0525				mov	si,525h
0020:1189  00 DD				add	ch,bl
0020:118B  27					daa				; Decimal adjust
0020:118C  2B 00				sub	ax,[bx+si]
0020:118E  AD					lodsw				; String [si] to ax
0020:118F  16					push	ss
0020:1190  AC					lodsb				; String [si] to al
0020:1191  26: 0054[00]				db	84 dup (0)
0020:11E6  00			data_248	db	0
0020:11E7  00			data_249	db	0
0020:11E8  00			data_250	db	0
0020:11E9  00 00				add	[bx+si],al
0020:11EB  00 00				add	[bx+si],al
0020:11ED  00 00				add	[bx+si],al
0020:11EF  00 00				add	[bx+si],al
0020:11F1  00 00				add	[bx+si],al
0020:11F3  00 00				add	[bx+si],al
0020:11F5  00 00				add	[bx+si],al
0020:11F7  00 00				add	[bx+si],al
0020:11F9  00 00				add	[bx+si],al
0020:11FB  00 00				add	[bx+si],al
0020:11FD  00 00				add	[bx+si],al
0020:11FF  00 00				add	[bx+si],al
0020:1201  00 00				add	[bx+si],al
0020:1203  00 00				add	[bx+si],al
0020:1205  00 00				add	[bx+si],al
0020:1207  00 00				add	[bx+si],al
0020:1209  00 00				add	[bx+si],al
0020:120B  00 00				add	[bx+si],al
0020:120D  00 00				add	[bx+si],al
0020:120F  00 00				add	[bx+si],al
0020:1211  00 00				add	[bx+si],al
0020:1213  00 00				add	[bx+si],al
0020:1215  00 00				add	[bx+si],al
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 36

0020:1217  00 00				add	[bx+si],al
0020:1219  00 00				add	[bx+si],al
0020:121B  00 00				add	[bx+si],al
0020:121D  00 00				add	[bx+si],al
0020:121F  00 00				add	[bx+si],al
0020:1221  00 00				add	[bx+si],al
0020:1223  00 00				add	[bx+si],al
0020:1225  00 00				add	[bx+si],al
0020:1227  00 00				add	[bx+si],al
0020:1229  00 00				add	[bx+si],al
0020:122B  00 00				add	[bx+si],al
0020:122D  00 00				add	[bx+si],al
0020:122F  00 00				add	[bx+si],al
0020:1231  00 00				add	[bx+si],al
0020:1233  00 00				add	[bx+si],al
0020:1235  00 00				add	[bx+si],al
0020:1237  00 00				add	[bx+si],al
0020:1239  00 00				add	[bx+si],al
0020:123B  00 00				add	[bx+si],al
0020:123D  00 00				add	[bx+si],al
0020:123F  00 00				add	[bx+si],al
0020:1241  00 00				add	[bx+si],al
0020:1243  00 00				add	[bx+si],al
0020:1245  00 00				add	[bx+si],al
0020:1247  00 00				add	[bx+si],al
0020:1249  00 00				add	[bx+si],al
0020:124B  00 00				add	[bx+si],al
0020:124D  00 00				add	[bx+si],al
0020:124F  00 00				add	[bx+si],al
0020:1251  00 00				add	[bx+si],al
0020:1253  00 00				add	[bx+si],al
0020:1255  00 00				add	[bx+si],al
0020:1257  00 00				add	[bx+si],al
0020:1259  00 00				add	[bx+si],al
0020:125B  00 00				add	[bx+si],al
0020:125D  00 00				add	[bx+si],al
0020:125F  00 00				add	[bx+si],al
0020:1261  00 00				add	[bx+si],al
0020:1263  00 00				add	[bx+si],al
0020:1265  00 00				add	[bx+si],al
0020:1267  00 00				add	[bx+si],al
0020:1269  00 00				add	[bx+si],al
0020:126B  00 00				add	[bx+si],al
0020:126D  00 00				add	[bx+si],al
0020:126F  00 00				add	[bx+si],al
0020:1271  00 00				add	[bx+si],al
0020:1273  00 00				add	[bx+si],al
0020:1275  00 00				add	[bx+si],al
0020:1277  00 00				add	[bx+si],al
0020:1279  00 00				add	[bx+si],al
0020:127B  00 00				add	[bx+si],al
0020:127D  00 00				add	[bx+si],al
0020:127F  00 00				add	[bx+si],al
0020:1281  00 00				add	[bx+si],al
0020:1283  00 00				add	[bx+si],al
0020:1285  00 00				add	[bx+si],al
0020:1287  00 00				add	[bx+si],al
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 37

0020:1289  00 00				add	[bx+si],al
0020:128B  00 00				add	[bx+si],al
0020:128D  00 00				add	[bx+si],al
0020:128F  00 00				add	[bx+si],al
0020:1291  00 00				add	[bx+si],al
0020:1293  00 00				add	[bx+si],al
0020:1295  00 00				add	[bx+si],al
0020:1297  00 00				add	[bx+si],al
0020:1299  00 00				add	[bx+si],al
0020:129B  00 00				add	[bx+si],al
0020:129D  00 00				add	[bx+si],al
0020:129F  00 00				add	[bx+si],al
0020:12A1  00 00				add	[bx+si],al
0020:12A3  00 00				add	[bx+si],al
0020:12A5  00 00				add	[bx+si],al
0020:12A7  00 00				add	[bx+si],al
0020:12A9  00 00				add	[bx+si],al
0020:12AB  00 00				add	[bx+si],al
0020:12AD  00 00				add	[bx+si],al
0020:12AF  00 00				add	[bx+si],al
0020:12B1  00 00				add	[bx+si],al
0020:12B3  00 00				add	[bx+si],al
0020:12B5  00 00				add	[bx+si],al
0020:12B7  00 46 00				add	[bp],al
0020:12BA  40					inc	ax
0020:12BB  00 46 00				add	[bp],al
0020:12BE  40					inc	ax
0020:12BF  00 A8 4607				add	byte ptr ds:[4607h][bx+si],ch	; (FEEA:4607=2Eh)
0020:12C3  00 40 00				add	[bx+si+0],al
0020:12C6  46					inc	si
0020:12C7  00 40 00				add	[bx+si+0],al
0020:12CA  30 46 30				xor	[bp+30h],al
0020:12CD  0B 30				or	si,[bx+si]
0020:12CF  0B 30				or	si,[bx+si]
0020:12D1  46					inc	si
0020:12D2  30 0B				xor	[bp+di],cl
0020:12D4  7E 03				jle	loc_102			; Jump if < or =
0020:12D6  70 00				jo	loc_101			; Jump if overflow=1
0020:12D8			loc_101:
0020:12D8  AC					lodsb				; String [si] to al
0020:12D9			loc_102:
0020:12D9  01 FF				add	di,di
0020:12DB  FF 46 32				inc	word ptr [bp+32h]
0020:12DE  8F 00				pop	word ptr [bx+si]
0020:12E0  7E 03				jle	loc_103			; Jump if < or =
0020:12E2  A7					cmpsw				; Cmp [si] to es:[di]
0020:12E3  00 70 00				add	[bx+si+0],dh
0020:12E6  DE 27				esc	6,[bx]			; coprocessor escape
0020:12E8  A1 A727				mov	ax,word ptr ds:[0A727h]	; (FEEA:A727=0)
0020:12EB  00 86 F705				add	[bp-8FBh],al
0020:12EF  01 24				add	[si],sp
0020:12F1  00 FA				add	dl,bh
0020:12F3  01 C3				add	bx,ax
0020:12F5  F5					cmc				; Complement carry
0020:12F6  F5					cmc				; Complement carry
0020:12F7  00 00				add	[bx+si],al
0020:12F9  00 F8				add	al,bh
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 38

0020:12FB  A716			data_252	dw	0A716h
0020:12FD  5F00			data_253	dw	5F00h
0020:12FF  0211			data_254	dw	211h
0020:1301  F432			data_255	dw	0F432h
0020:1303  2A10			data_256	dw	2A10h
0020:1305  50					push	ax
				sub_19		endp
  
  
				;ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
				;			       SUBROUTINE
				;‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
  
				sub_24		proc	near
0020:1306  FE2E			data_257	dw	0FE2Eh
0020:1308  01			data_258	db	1
0020:1309  00			data_259	db	0
0020:130A  00 46 00				add	[bp],al
0020:130D  01 A7 AC00				add	word ptr ds:[0AC00h][bx],sp	; (0C06:AC00=4040h)
0020:1311  26: 00 00				add	es:[bx+si],al
0020:1314  00 00				add	[bx+si],al
0020:1316  00 00				add	[bx+si],al
0020:1318  00 00				add	[bx+si],al
0020:131A  00 00				add	[bx+si],al
0020:131C  86 93 8000				xchg	dl,[bp+di-8000h]
0020:1320  00 80 459A				add	byte ptr ds:[459Ah][bx+si],al	; (0C06:459A=10h)
0020:1324  41					inc	cx
0020:1325  8E 41 8F				mov	es,[bx+di-71h]
0020:1328  80 45 45 45				add	byte ptr [di+45h],45h	; 'E'
0020:132C  49					dec	cx
0020:132D  49					dec	cx
0020:132E  49					dec	cx
0020:132F  8E					db	8Eh
0020:1330  8F					db	8Fh
0020:1331  90					nop
0020:1332  92					xchg	ax,dx
0020:1333  92					xchg	ax,dx
0020:1334  4F					dec	di
0020:1335  99					cwd				; Word to double word
0020:1336  4F					dec	di
0020:1337  55					push	bp
0020:1338  55					push	bp
0020:1339  59					pop	cx
0020:133A  99					cwd				; Word to double word
0020:133B  9A 9E9D:9C9B		;*		call	far ptr sub_352		;*(9E9D:9C9B)
0020:133B  9A 9B 9C 9D 9E			db	 9Ah, 9Bh, 9Ch, 9Dh, 9Eh
0020:1340  9F					lahf				; Load ah from flags
0020:1341  41					inc	cx
0020:1342  49					dec	cx
0020:1343  4F					dec	di
0020:1344  55					push	bp
0020:1345  A5					movsw				; Mov [si] to es:[di]
0020:1346  A5					movsw				; Mov [si] to es:[di]
0020:1347  A6					cmpsb				; Cmp [si] to es:[di]
0020:1348  A7					cmpsw				; Cmp [si] to es:[di]
0020:1349  A8 A9				test	al,0A9h
0020:134B  AA					stosb				; Store al to es:[di]
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 39

0020:134C  AB					stosw				; Store ax to es:[di]
0020:134D  AC					lodsb				; String [si] to al
0020:134E  AD					lodsw				; String [si] to ax
0020:134F  AE					scasb				; Scan es:[di] for al
0020:1350  AF					scasw				; Scan es:[di] for ax
0020:1351  B0 B1				mov	al,0B1h
0020:1353  B2 B3				mov	dl,0B3h
0020:1355  B4 B5				mov	ah,0B5h
0020:1357  B6 B7				mov	dh,0B7h
0020:1359  B8 BAB9				mov	ax,0BAB9h
0020:135C  BB BDBC				mov	bx,0BDBCh
0020:135F  BE C0BF				mov	si,0C0BFh
0020:1362  C1					db	0C1h
0020:1363  C2 C4C3				retn	0C4C3h
				sub_24		endp
  
0020:1366  C5					db	0C5h
0020:1367  C6 C7 C8				mov	bh,0C8h
0020:136A  C9					db	0C9h
0020:136B  CA CCCB				retf	0CCCBh
0020:136E  CD CE				int	0CEh
0020:1370  CF					iret				; Interrupt return
0020:1371  D0 D1				rcl	cl,1			; Rotate thru carry
0020:1373  D2 D3				rcl	bl,cl			; Rotate thru carry
0020:1375  D4					db	0D4h
0020:1376  D5					db	0D5h
0020:1377  D6					db	0D6h
0020:1378  D7					xlat				; al=[al+[bx]] table
0020:1379  D8 D9				esc	0,cl			; coprocessor escape
0020:137B  DA DB				esc	2,bl			; coprocessor escape
0020:137D  DC DD				esc	4,ch			; coprocessor escape
0020:137F  DE DF				esc	6,bh			; coprocessor escape
0020:1381  E0 E1		;*		loopnz	locloop_104		;*Loop if zf=0, cx>0
  
0020:1381  E0 E1				db	0E0h,0E1h
0020:1383  E2 E3		;*		loop	locloop_105		;*Loop if cx > 0
  
0020:1383  E2 E3				db	0E2h,0E3h
0020:1385  E4 E5				in	al,0E5h			; port 0E5h
0020:1387  E6 E7				out	0E7h,al			; port 0E7h
0020:1389  E8 EAE9				call	sub_214			; (FE75)
0020:138C  EB EC		;*		jmp	short loc_106		;*(137A)
0020:138C  EB EC				db	0EBh,0ECh
0020:138E  ED					in	ax,dx			; port 0, DMA-1 bas&add ch 0
0020:138F  EE					out	dx,al			; port 0, DMA-1 bas&add ch 0
0020:1390  EF					out	dx,ax			; port 0, DMA-1 bas&add ch 0
0020:1391  F0					db	0F0h
0020:1392  F1					db	0F1h
0020:1393  F2					db	0F2h
0020:1394  F3					db	0F3h
0020:1395  F4					hlt				; Halt processor
0020:1396  F5					cmc				; Complement carry
0020:1397  F6 F7				div	bh			; al, ah rem = ax/reg
0020:1399  F8					clc				; Clear carry flag
0020:139A  F9					stc				; Set carry flag
0020:139B  FA					cli				; Disable interrupts
0020:139C  FB					sti				; Enable interrupts
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 40

0020:139D  FC					cld				; Clear direction
0020:139E  FD			data_261	db	0FDh
0020:139F  FFFE			data_262	dw	0FFFEh
0020:13A1  80 00 80				add	byte ptr [bx+si],80h
0020:13A4  9A 418E:4145		;*		call	far ptr sub_319		;*(418E:4145)
0020:13A4  9A 45 41 8E 41			db	 9Ah, 45h, 41h, 8Eh, 41h
0020:13A9  8F 80 4545				pop	data_564[bx+si]		; (0020:4545=3125h)
0020:13AD  45					inc	bp
0020:13AE  49					dec	cx
0020:13AF  49					dec	cx
0020:13B0  49					dec	cx
0020:13B1  8E					db	8Eh
0020:13B2  8F					db	8Fh
0020:13B3  90					nop
0020:13B4  92					xchg	ax,dx
0020:13B5  92					xchg	ax,dx
0020:13B6  4F					dec	di
0020:13B7  99					cwd				; Word to double word
0020:13B8  4F					dec	di
0020:13B9  55					push	bp
0020:13BA  55					push	bp
0020:13BB  59					pop	cx
0020:13BC  99					cwd				; Word to double word
0020:13BD  9A 9E9D:9C9B		;*		call	far ptr sub_352		;*(9E9D:9C9B)
0020:13BD  9A 9B 9C 9D 9E			db	 9Ah, 9Bh, 9Ch, 9Dh, 9Eh
0020:13C2  9F					lahf				; Load ah from flags
0020:13C3  41					inc	cx
0020:13C4  49					dec	cx
0020:13C5  4F					dec	di
0020:13C6  55					push	bp
0020:13C7  A5					movsw				; Mov [si] to es:[di]
0020:13C8  A5					movsw				; Mov [si] to es:[di]
0020:13C9  A6					cmpsb				; Cmp [si] to es:[di]
0020:13CA  A7					cmpsw				; Cmp [si] to es:[di]
0020:13CB  A8 A9				test	al,0A9h
0020:13CD  AA					stosb				; Store al to es:[di]
0020:13CE  AB					stosw				; Store ax to es:[di]
0020:13CF  AC					lodsb				; String [si] to al
0020:13D0  AD					lodsw				; String [si] to ax
0020:13D1  AE					scasb				; Scan es:[di] for al
0020:13D2  AF					scasw				; Scan es:[di] for ax
0020:13D3  B0 B1				mov	al,0B1h
0020:13D5  B2 B3				mov	dl,0B3h
0020:13D7  B4 B5				mov	ah,0B5h
0020:13D9  B6 B7				mov	dh,0B7h
0020:13DB  B8 BAB9				mov	ax,0BAB9h
0020:13DE  BB BDBC				mov	bx,0BDBCh
0020:13E1  BE C0BF				mov	si,0C0BFh
0020:13E4  C1					db	0C1h
0020:13E5  C2 C4C3				retn	0C4C3h
0020:13E8  C5					db	0C5h
0020:13E9  C6 C7 C8				mov	bh,0C8h
0020:13EC  C9					db	0C9h
0020:13ED  CA CCCB				retf	0CCCBh
0020:13F0  CD CE				int	0CEh
0020:13F2  CF					iret				; Interrupt return
0020:13F3  D0 D1				rcl	cl,1			; Rotate thru carry
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 41

0020:13F5  D2 D3				rcl	bl,cl			; Rotate thru carry
0020:13F7  D4					db	0D4h
0020:13F8  D5					db	0D5h
0020:13F9  D6					db	0D6h
0020:13FA  D7					xlat				; al=[al+[bx]] table
0020:13FB  D8 D9				esc	0,cl			; coprocessor escape
0020:13FD  DA DB				esc	2,bl			; coprocessor escape
0020:13FF  DC DD				esc	4,ch			; coprocessor escape
0020:1401  DE DF				esc	6,bh			; coprocessor escape
0020:1403  E0 E1		;*		loopnz	locloop_107		;*Loop if zf=0, cx>0
  
0020:1403  E0 E1				db	0E0h,0E1h
0020:1405  E2 E3		;*		loop	locloop_108		;*Loop if cx > 0
  
0020:1405  E2 E3				db	0E2h,0E3h
0020:1407  E4 E5				in	al,0E5h			; port 0E5h
0020:1409  E6 E7				out	0E7h,al			; port 0E7h
0020:140B  E8 EAE9				call	sub_215			; (FEF7)
0020:140E  EB EC		;*		jmp	short loc_109		;*(13FC)
0020:140E  EB EC				db	0EBh,0ECh
0020:1410  ED					in	ax,dx			; port 0, DMA-1 bas&add ch 0
0020:1411  EE					out	dx,al			; port 0, DMA-1 bas&add ch 0
0020:1412  EF					out	dx,ax			; port 0, DMA-1 bas&add ch 0
0020:1413  F0					db	0F0h
0020:1414  F1					db	0F1h
0020:1415  F2					db	0F2h
0020:1416  F3					db	0F3h
0020:1417  F4					hlt				; Halt processor
0020:1418  F5					cmc				; Complement carry
0020:1419  F6 F7				div	bh			; al, ah rem = ax/reg
0020:141B  F8					clc				; Clear carry flag
0020:141C  F9					stc				; Set carry flag
0020:141D  FA					cli				; Disable interrupts
0020:141E  FB					sti				; Enable interrupts
0020:141F  FC					cld				; Clear direction
0020:1420  FD					std				; Set direction flag
0020:1421  FE					db	0FEh
0020:1422  FF 16 0100				call	word ptr ds:[100h]	; (0020:0100=0)
0020:1426  00 FF				add	bh,bh
0020:1428  00 00				add	[bx+si],al
0020:142A  20 02				and	[bp+si],al
0020:142C  0E					push	cs
0020:142D  2E: 22 2F				and	ch,cs:[bx]
0020:1430  5C					pop	sp
0020:1431  5B					pop	bx
0020:1432  5D					pop	bp
0020:1433  3A 7C 3C				cmp	bh,[si+3Ch]
0020:1436  3E					db	3Eh
0020:1437  2B 3D				sub	di,[di]
0020:1439  3B 2C				cmp	bp,[si]
0020:143B  0019[00]				db	25 dup (0)
0020:1454  01 00				add	[bx+si],ax
0020:1456  01 02				add	[bp+si],ax
0020:1458  03 04				add	ax,[si]
0020:145A  05 0706				add	ax,706h
0020:145D  08 09				or	[bx+di],cl
0020:145F  0A 0B				or	cl,[bp+di]
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 42

0020:1461  0C 0D				or	al,0Dh
0020:1463  0E					push	cs
0020:1464  0F					pop	cs			; Dangerous 8088 only
0020:1465  10 11				adc	[bx+di],dl
0020:1467  12 13				adc	dl,[bp+di]
0020:1469  14 15				adc	al,15h
0020:146B  16					push	ss
0020:146C  17					pop	ss
0020:146D  18 19				sbb	[bx+di],bl
0020:146F  1A 1B				sbb	bl,[bp+di]
0020:1471  1C 1D				sbb	al,1Dh
0020:1473  1E					push	ds
0020:1474  1F					pop	ds
0020:1475  20 21 22 23 24	data_264	db	' !"#$'
0020:147A  25 26 27 28 29 2A			db	'%&', 27h, '()*+,-./0123456789:;<'
0020:1480  2B 2C 2D 2E 2F 30
0020:1486  31 32 33 34 35 36
0020:148C  37 38 39 3A 3B 3C
0020:1492  3D 3E 3F 40 41 42			db	'=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\'
0020:1498  43 44 45 46 47 48
0020:149E  49 4A 4B 4C 4D 4E
0020:14A4  4F 50 51 52 53 54
0020:14AA  55 56 57 58 59 5A
0020:14B0  5B 5C
0020:14B2  5D 5E 5F 60 41 42			db	']^_`ABCDEFGHIJKLMNOPQRSTUVWXYZ{|'
0020:14B8  43 44 45 46 47 48
0020:14BE  49 4A 4B 4C 4D 4E
0020:14C4  4F 50 51 52 53 54
0020:14CA  55 56 57 58 59 5A
0020:14D0  7B 7C
0020:14D2  7D 7E				db	'}~'
0020:14D4  7F 43				jg	loc_110			; Jump if >
0020:14D6  55 45 41 41 41 41			db	'UEAAAACEEEIIIAAEAAOOOUUYOU$$$$$'
0020:14DC  43 45 45 45 49 49
0020:14E2  49 41 41 45 41 41
0020:14E8  4F 4F 4F 55 55 59
0020:14EE  4F 55 24 24 24 24
0020:14F4  24
0020:14F5  41 49 4F 55 4E 4E			db	'AIOUNN'
0020:14FB  A6					cmpsb				; Cmp [si] to es:[di]
0020:14FC  A7					cmpsw				; Cmp [si] to es:[di]
0020:14FD  3F					aas				; Ascii adjust
0020:14FE  A9 ABAA				test	ax,0ABAAh
0020:1501  AC					lodsb				; String [si] to al
0020:1502  21 22				and	[bp+si],sp
0020:1504  22 B0 B2B1				and	dh,data_661[bx+si]	; (0020:B2B1=50h)
0020:1508  B3 B4				mov	bl,0B4h
0020:150A  B5 B6				mov	ch,0B6h
0020:150C  B7 B8				mov	bh,0B8h
0020:150E  B9 BBBA				mov	cx,0BBBAh
0020:1511  BC BEBD				mov	sp,0BEBDh
0020:1514  BF C1C0				mov	di,0C1C0h
0020:1517  C2 C4C3				retn	0C4C3h
0020:151A  C5					db	0C5h
0020:151B  C6 C7 C8				mov	bh,0C8h
0020:151E  C9					db	0C9h
0020:151F  CA CCCB				retf	0CCCBh
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 43

0020:1522  CD CE				int	0CEh
0020:1524  CF					iret				; Interrupt return
0020:1525  D0 D1				rcl	cl,1			; Rotate thru carry
0020:1527  D2 D3				rcl	bl,cl			; Rotate thru carry
0020:1529  D4					db	0D4h
0020:152A  D5			data_268	db	0D5h
  
				;ƒƒƒƒƒ Indexed Entry Point ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ
  
0020:152B			loc_112:
0020:152B  D6			data_269	db	0D6h
  
				;ƒƒƒƒƒ Indexed Entry Point ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ
  
0020:152C			loc_113:
0020:152C  D7					xlat				; al=[al+[bx]] table
0020:152D  D8 D9				esc	0,cl			; coprocessor escape
0020:152F  DA DB				esc	2,bl			; coprocessor escape
0020:1531  DC DD				esc	4,ch			; coprocessor escape
0020:1533  DE DF				esc	6,bh			; coprocessor escape
0020:1535  E0 53				loopnz	locloop_116		; Loop if zf=0, cx>0
  
0020:1537  E2 E3		;*		loop	locloop_111		;*Loop if cx > 0
  
0020:1537  E2 E3				db	0E2h,0E3h
0020:1539  E4 E5				in	al,0E5h			; port 0E5h
0020:153B  E6 E7				out	0E7h,al			; port 0E7h
0020:153D  E8 EAE9		;*		call	sub_3			;*(0029)
0020:153D  E8 E9 EA				db	0E8h,0E9h,0EAh
0020:1540  EB EC		;*		jmp	short loc_114		;*(152E)
0020:1540  EB EC				db	0EBh,0ECh
0020:1542  ED					in	ax,dx			; port 8F7h
0020:1543  EE					out	dx,al			; port 8F7h
0020:1544  EF					out	dx,ax			; port 8F7h
0020:1545  F0					db	0F0h
0020:1546  F1					db	0F1h
0020:1547  F2					db	0F2h
0020:1548  F3					db	0F3h
0020:1549  F4					hlt				; Halt processor
0020:154A  F5					cmc				; Complement carry
0020:154B  F6 F7				div	bh			; al, ah rem = ax/reg
0020:154D  F8					clc				; Clear carry flag
0020:154E  F9					stc				; Set carry flag
0020:154F  FA					cli				; Disable interrupts
0020:1550  FB					sti				; Enable interrupts
0020:1551  FC					cld				; Clear direction
0020:1552  FD					std				; Set direction flag
0020:1553  FE					db	0FEh
0020:1554  FF 00				inc	word ptr [bx+si]
0020:1556  0011[00]				db	17 dup (0)
0020:1567  3C 80				cmp	al,80h
0020:1569  73 01				jae	loc_115			; Jump if above or =
0020:156B  CB					retf				; Return far
0020:156C			loc_115:
0020:156C  2C 80				sub	al,80h
0020:156E  1E					push	ds
0020:156F  53					push	bx
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 44

0020:1570  BB 0AB1				mov	bx,0AB1h
0020:1573  0E					push	cs
0020:1574  1F					pop	ds
0020:1575  D7					xlat				; al=[al+[bx]] table
0020:1576  5B					pop	bx
0020:1577  1F					pop	ds
0020:1578  CB					retf
0020:1579  00 00				add	[bx+si],al
0020:157B  00 09				add	[bx+di],cl
0020:157D  04 00				add	al,0
0020:157F  00 00				add	[bx+si],al
0020:1581  00 05				add	[di],al
0020:1583  00 C8				add	al,cl
0020:1585  A6					cmpsb				; Cmp [si] to es:[di]
0020:1586  C8					db	0C8h
0020:1587  A5					movsw				; Mov [si] to es:[di]
0020:1588  C8					db	0C8h
0020:1589  A5					movsw				; Mov [si] to es:[di]
  
0020:158A			locloop_116:
0020:158A  C8					db	0C8h
0020:158B  A5					movsw				; Mov [si] to es:[di]
0020:158C  1F					pop	ds
0020:158D  1C 1F				sbb	al,1Fh
0020:158F  1E					push	ds
0020:1590  1F					pop	ds
0020:1591  1E					push	ds
0020:1592  1F					pop	ds
0020:1593  1F					pop	ds
0020:1594  1E					push	ds
0020:1595  1F					pop	ds
0020:1596  1E					push	ds
0020:1597  1F					pop	ds
0020:1598  26: 00 A7 2A00			add	es:data_308[bx],ah	; (0020:2A00=58h)
0020:159D  12 A7 0200				adc	ah,byte ptr ds:[200h][bx]	; (0000:0200=0)
0020:15A1  00 AF 2E34				add	byte ptr ds:[2E34h][bx],ch	; (0000:2E34=0A0h)
0020:15A5  FE					db	0FEh
0020:15A6  AF					scasw				; Scan es:[di] for ax
0020:15A7  34 00				xor	al,0
0020:15A9  0031[00]				db	49 dup (0)
0020:15DA  6C					db	6Ch
0020:15DB  0D 0000				or	ax,0
0020:15DE  003B[00]				db	59 dup (0)
0020:1619  FF					db	0FFh
0020:161A  FF					db	0FFh
0020:161B  FF					db	0FFh
0020:161C  FF 00				inc	word ptr [bx+si]
0020:161E  00 00				add	[bx+si],al
0020:1620  FF 00				inc	word ptr [bx+si]
0020:1622  0008[00]				db	8 dup (0)
0020:162A  4E					dec	si
0020:162B  4F					dec	di
0020:162C  20 4E 41				and	[bp+41h],cl
0020:162F  4D					dec	bp
0020:1630  45					inc	bp
0020:1631  20 20				and	[bx+si],ah
0020:1633  20 20				and	[bx+si],ah
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 45

0020:1635  00 26 4F81				add	byte ptr ds:[4F81h],ah	; (0000:4F81=4Fh)
0020:1639  03 00				add	ax,[bx+si]
0020:163B  01 CB				add	bx,cx
0020:163D  000E[00]				db	14 dup (0)
0020:164B  01 07				add	[bx],ax
0020:164D  04 FF				add	al,0FFh
0020:164F  02 08				add	cl,[bx+si]
0020:1651  03 02				add	ax,[bp+si]
0020:1653  03 08				add	cx,[bx+si]
0020:1655  03 02				add	ax,[bp+si]
0020:1657  04 01				add	al,1
0020:1659  04 01				add	al,1
0020:165B  05 0303				add	ax,303h
0020:165E  FF 06 0407				inc	word ptr ds:[407h]	; (0000:0407=0BC02h)
0020:1662  01 07				add	[bx],ax
0020:1664  07					pop	es
0020:1665  05 0805				add	ax,805h
0020:1668  01 04				add	[si],ax
0020:166A  05 0709				add	ax,709h
0020:166D  04 05				add	al,5
0020:166F  0A 07				or	al,[bx]
0020:1671  04 05				add	al,5
0020:1673  0B 09				or	cx,[bx+di]
0020:1675  03 01				add	ax,[bx+di]
0020:1677  0C 07				or	al,7
0020:1679  04 01				add	al,1
0020:167B  0D 0409				or	ax,409h
0020:167E  01 0F				add	[bx],cx
0020:1680  08 03				or	[bp+di],al
0020:1682  02 10				add	dl,[bx+si]
0020:1684  03 03				add	ax,[bp+di]
0020:1686  02 11				add	dl,[bx+di]
0020:1688  0D 0203				or	ax,203h
0020:168B  12 08				adc	cl,[bx+si]
0020:168D  03 02				add	ax,[bp+si]
0020:168F  50					push	ax
0020:1690  0C 03				or	al,3
0020:1692  02 20				add	ah,[bx+si]
0020:1694  0A 02				or	al,[bp+si]
0020:1696  02 21				add	ah,[bx+di]
0020:1698  0A 02				or	al,[bp+si]
0020:169A  02 54 01				add	dl,[si+1]
0020:169D  04 FF				add	al,0FFh
0020:169F  56					push	si
0020:16A0  03 03				add	ax,[bp+di]
0020:16A2  01 52 01				add	[bp+si+1],dx
0020:16A5  04 02				add	al,2
0020:16A7  32 09				xor	cl,[bx+di]
0020:16A9  03 03				add	ax,[bp+di]
0020:16AB  55					push	bp
0020:16AC  0C 03				or	al,3
0020:16AE  03 57 09				add	dx,[bx+9]
0020:16B1  03 01				add	ax,[bx+di]
0020:16B3  53					push	bx
0020:16B4  0D 0104				or	ax,104h
0020:16B7  24 01				and	al,1
0020:16B9  04 05				add	al,5
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 46

0020:16BB  26: 01 04				add	es:[si],ax
0020:16BE  01 27				add	[bx],sp
0020:16C0  01 04				add	[si],ax
0020:16C2  01 5A 0D				add	[bp+si+0Dh],bx
0020:16C5  04 02				add	al,2
0020:16C7  FF					db	0FFh
0020:16C8  FF					db	0FFh
0020:16C9  FF					db	0FFh
0020:16CA  FF 13				call	word ptr [bp+di]
0020:16CC  0B 07				or	ax,[bx]
0020:16CE  02 14				add	dl,[si]
0020:16D0  04 05				add	al,5
0020:16D2  01 15				add	[di],dx
0020:16D4  05 FF07				add	ax,0FF07h
0020:16D7  16					push	ss
0020:16D8  04 05				add	al,5
0020:16DA  01 17				add	[bx],dx
0020:16DC  0B 04				or	ax,[si]
0020:16DE  02 18				add	bl,[bx+si]
0020:16E0  04 05				add	al,5
0020:16E2  01 19				add	[bx+di],bx
0020:16E4  05 0201				add	ax,201h
0020:16E7  1A 0B				sbb	cl,[bp+di]
0020:16E9  07					pop	es
0020:16EA  02 1B				add	bl,[bp+di]
0020:16EC  0B 04				or	ax,[si]
0020:16EE  02 1C				add	bl,[si]
0020:16F0  02 07				add	al,[bx]
0020:16F2  04 1D				add	al,1Dh
0020:16F4  05 FF04				add	ax,0FF04h
0020:16F7  1E					push	ds
0020:16F8  05 FF04				add	ax,0FF04h
0020:16FB  1F					pop	ds
0020:16FC  0D FF04				or	ax,0FF04h
0020:16FF  20 0A				and	[bp+si],cl
0020:1701  02 02				add	al,[bp+si]
0020:1703  21 0A				and	[bp+si],cx
0020:1705  02 02				add	al,[bp+si]
0020:1707  22 0B				and	cl,[bp+di]
0020:1709  07					pop	es
0020:170A  02 32				add	dh,[bp+si]
0020:170C  09 03				or	[bp+di],ax
0020:170E  03 23				add	sp,[bp+di]
0020:1710  07					pop	es
0020:1711  04 01				add	al,1
0020:1713  24 01				and	al,1
0020:1715  04 05				add	al,5
0020:1717  FF 0D				dec	word ptr [di]
0020:1719  05 13FF				add	ax,13FFh
0020:171C  14 15				adc	al,15h
0020:171E  16					push	ss
0020:171F  17					pop	ss
0020:1720  18 19				sbb	[bx+di],bl
0020:1722  1A 1B				sbb	bl,[bp+di]
0020:1724  1C 1D				sbb	al,1Dh
0020:1726  1E					push	ds
0020:1727  1F					pop	ds
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 47

0020:1728  1F					pop	ds
0020:1729  1F					pop	ds
0020:172A  22 00				and	al,[bx+si]
0020:172C  00 05				add	[di],al
0020:172E  0102[00]				db	258 dup (0)
0020:1830  03 00				add	ax,[bx+si]
0020:1832  000C[00]				db	12 dup (0)
0020:183E  D2 0F				ror	byte ptr [bx],cl	; Rotate
0020:1840  A7					cmpsw				; Cmp [si] to es:[di]
0020:1841  00 22				add	[bp+si],ah
0020:1843  00 A7 0200				add	byte ptr ds:[200h][bx],ah	; (160B:0200=74h)
0020:1847  00 32				add	[bp+si],dh
0020:1849  00 A7 0400				add	byte ptr ds:[400h][bx],ah	; (160B:0400=25h)
0020:184D  00 FB				add	bl,bh
0020:184F  01 A7 0600				add	word ptr ds:[600h][bx],sp	; (160B:0600=0BE06h)
0020:1853  01 02				add	[bp+si],ax
0020:1855  03 A7 0100				add	sp,word ptr ds:[100h][bx]	; (160B:0100=0EF72h)
0020:1859  00 3A				add	[bp+si],bh
0020:185B  14 A7				adc	al,0A7h
0020:185D  00 18				add	[bx+si],bl
0020:185F  00 89 A700				add	byte ptr ds:[0A700h][bx+di],cl	; (160B:A700=0FFh)
0020:1863  00 01				add	[bx+di],al
0020:1865  00 8C A700				add	byte ptr ds:[0A700h][si],cl	; (160B:A700=0FFh)
0020:1869  00 02				add	[bp+si],al
0020:186B  00 00				add	[bx+si],al
0020:186D  00 00				add	[bx+si],al
0020:186F  00 05				add	[di],al
0020:1871  00 EE				add	dh,ch
0020:1873  05 05EC				add	ax,5ECh
0020:1876  23 03				and	ax,[bp+di]
0020:1878  40					inc	ax
0020:1879  03 17				add	dx,[bx]
0020:187B  03 8C 0000				add	cx,[si+0]
0020:187F  63					db	63h
0020:1880  3A 5C 77				cmp	bl,[si+77h]
0020:1883  69					db	69h
0020:1884  6E					db	6Eh
0020:1885  61					db	61h
0020:1886  32 30				xor	dh,[bx+si]
0020:1888  2E: 33 38				xor	di,cs:[bx+si]
0020:188B  36: 00 01				add	ss:[bx+di],al
0020:188E  64					db	64h
0020:188F  03 70 00				add	si,[bx+si+0]
0020:1892  36: F6 06 0320 FF			test	ss:data_154,0FFh	; (0020:0320=0)
0020:1898  75 0C				jnz	loc_117			; Jump if not zero
0020:189A  36: FF 36 0358			push	word ptr ss:[358h]	; (0020:0358=0)
0020:189F  CD 28				int	28h			; DOS access often, undocumented
0020:18A1  80 3E 0320 00			cmp	byte ptr ds:[320h],0	; (160B:0320=5Bh)
0020:18A6			loc_117:
0020:18A6  75 37				jne	loc_118			; Jump if not equal
0020:18A8  BC 0AA0				mov	sp,0AA0h
0020:18AB  00 00				add	[bx+si],al
0020:18AD  00 00				add	[bx+si],al
0020:18AF  90					nop
0020:18B0  57					push	di
0020:18B1  51					push	cx
0020:18B2  2E: FE 4D 25				dec	byte ptr cs:[di+25h]
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 48

0020:18B6  2E					db	2Eh
0020:18B7  FE					db	0FEh
0020:18B8  7D 25				jge	loc_118			; Jump if > or =
0020:18BA  2E					db	2Eh
0020:18BB  FE					db	0FEh
0020:18BC  58					pop	ax
0020:18BD  27					daa				; Decimal adjust
0020:18BE  2E					db	2Eh
0020:18BF  FE					db	0FEh
0020:18C0  D7					xlat				; al=[al+[bx]] table
0020:18C1  27					daa				; Decimal adjust
0020:18C2  2E					db	2Eh
0020:18C3  FE					db	0FEh
0020:18C4  95					xchg	ax,bp
0020:18C5  5B					pop	bx
0020:18C6  2E					db	2Eh
0020:18C7  FE					db	0FEh
0020:18C8  D9 28				esc	1,[bx+si]		; coprocessor escape
0020:18CA  2E					db	2Eh
0020:18CB  FE					db	0FEh
0020:18CC  56					push	si
0020:18CD  25 FE2E				and	ax,0FE2Eh
0020:18D0  53					push	bx
0020:18D1  25 FE2E				and	ax,0FE2Eh
0020:18D4  AD					lodsw				; String [si] to ax
0020:18D5  16					push	ss
0020:18D6  80 04 90				add	byte ptr [si],90h
0020:18D9  90					nop
0020:18DA  E8 00EE				call	sub_26			; (19CB)
0020:18DD  2E: FF 2E 1040			jmp	cs:data_230		; (0020:1040=0)
0020:18E2  90					nop
0020:18E3  90					nop
0020:18E4  E8 00E4				call	sub_26			; (19CB)
0020:18E7  2E: FF 2E 1044			jmp	cs:data_231		; (0020:1044=0)
0020:18EC  90					nop
0020:18ED  90					nop
0020:18EE  E8 00E0				call	sub_27			; (19D1)
0020:18F1  2E: FF 2E 1048			jmp	cs:data_232		; (0020:1048=0)
0020:18F6  90					nop
0020:18F7  90					nop
0020:18F8  E8 00D0				call	sub_26			; (19CB)
0020:18FB  2E: FF 2E 104C			jmp	cs:data_233		; (0020:104C=0)
0020:1900  90					nop
0020:1901  90					nop
0020:1902  E8 00C6				call	sub_26			; (19CB)
0020:1905  2E: FF 2E 1050			jmp	cs:data_234		; (0020:1050=0)
0020:190A  90					nop
0020:190B  90					nop
0020:190C  E8 00BC				call	sub_26			; (19CB)
0020:190F  2E: FF 2E 1054			jmp	cs:data_235		; (0020:1054=0)
0020:1914  90					nop
0020:1915  90					nop
0020:1916  E8 00B2				call	sub_26			; (19CB)
0020:1919  2E: FF 2E 1058			jmp	cs:data_236		; (0020:1058=0)
0020:191E  90					nop
0020:191F  90					nop
0020:1920  E8 00A8				call	sub_26			; (19CB)
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 49

0020:1923  2E: FF 2E 105C			jmp	cs:data_237		; (0020:105C=0)
0020:1928  E9 043B				jmp	loc_138			; (1D66)
0020:192B  000C[00]				db	12 dup (0)
0020:1937  2E: 8F 06 10BB			pop	word ptr cs:[10BBh]	; (0020:10BB=0)
0020:193C  2E: 8F 06 10BD			pop	word ptr cs:data_240+2	; (0020:10BD=0)
0020:1941  CD 23				int	23h			; Cntrl-C & Cntrl-Break handler
0020:1943  E8 0085				call	sub_26			; (19CB)
0020:1946  2E: FF 2E 10BB			jmp	dword ptr cs:[10BBh]	; (0020:10BB=0)
0020:194B  2E: 8F 06 10BF			pop	word ptr cs:[10BFh]	; (0020:10BF=0)
0020:1950  2E: 8F 06 10C1			pop	word ptr cs:data_242+2	; (0020:10C1=0)
0020:1955  CD 24				int	24h			; DOS Critical error handler
0020:1957  E8 0071				call	sub_26			; (19CB)
0020:195A  2E: FF 2E 10BF			jmp	dword ptr cs:[10BFh]	; (0020:10BF=0)
0020:195F  CD 28				int	28h			; DOS access often, undocumented
0020:1961  E8 0067				call	sub_26			; (19CB)
0020:1964  CB					retf
0020:1965  E8 004B				call	sub_25			; (19B3)
0020:1968  C4					db	0C4h
0020:1969  C4 50 36				les	dx,dword ptr [bx+si+36h]	; Load 32 bit ptr
0020:196C  E8 03AF				call	sub_28			; (1D1E)
0020:196F  2E: C6 06 0323 00			mov	cs:data_155,0		; (0020:0323=0)
0020:1975  8E D0				mov	ss,ax
0020:1977  8B E7				mov	sp,di
0020:1979  FB					sti				; Enable interrupts
0020:197A  1E					push	ds
0020:197B  56					push	si
0020:197C  8E C2				mov	es,dx
0020:197E  8E DA				mov	ds,dx
0020:1980  8B C3				mov	ax,bx
0020:1982  CB					retf
0020:1983  E8 002D				call	sub_25			; (19B3)
0020:1986  FE 0E 0323				dec	data_155		; (0020:0323=0)
0020:198A  8E 16 0588				mov	ss,word ptr ds:[588h]	; (0020:0588=504Ch)
0020:198E  8B 26 0586				mov	sp,word ptr ds:[586h]	; (0020:0586=203h)
0020:1992  8B EC				mov	bp,sp
0020:1994  88 46 00				mov	[bp],al
0020:1997  A1 05F4				mov	ax,data_170		; (0020:05F4=0F219h)
0020:199A  A3 0586				mov	word ptr ds:[586h],ax	; (0020:0586=203h)
0020:199D  A1 05F2				mov	ax,data_168		; (0020:05F2=0F000h)
0020:19A0  A3 0588				mov	word ptr ds:[588h],ax	; (0020:0588=504Ch)
0020:19A3  58					pop	ax
0020:19A4  5B					pop	bx
0020:19A5  59					pop	cx
0020:19A6  5A					pop	dx
0020:19A7  5E					pop	si
0020:19A8  5F					pop	di
0020:19A9  5D					pop	bp
0020:19AA  1F					pop	ds
0020:19AB  07					pop	es
0020:19AC  C4					db	0C4h
0020:19AD  C4 50 38				les	dx,dword ptr [bx+si+38h]	; Load 32 bit ptr
0020:19B0  E9 03B3				jmp	loc_138			; (1D66)
  
				;ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
				;			       SUBROUTINE
				;‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
  
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 50

				sub_25		proc	near
0020:19B3  53					push	bx
0020:19B4  50					push	ax
0020:19B5  B4 06				mov	ah,6
0020:19B7  2E: FF 1E 114F			call	cs:data_244		; (0020:114F=147h)
0020:19BC  58					pop	ax
0020:19BD  5B					pop	bx
0020:19BE  C3					retn
				sub_25		endp
  
0020:19BF  AF					scasw				; Scan es:[di] for ax
0020:19C0  00 D9				add	cl,bl
0020:19C2  02 80 0000				add	al,[bx+si+0]
0020:19C6  00 90 FF00				add	data_698[bx+si],dl	; (0020:FF00=45h)
0020:19CA  FF 9C 02E8				call	data_150[si]		;*(0020:02E8=0)
0020:19CE  00 9D 1EC3				add	data_284[di],bl		; (0020:1EC3=0)
0020:19D2  06					push	es
0020:19D3  51					push	cx
0020:19D4  56					push	si
0020:19D5  57					push	di
0020:19D6  2E: C5 36 1153			lds	si,cs:data_245		; (0020:1153=3202h) Load 32 bit ptr
0020:19DB  2E: C4 3E 1157			les	di,cs:data_246		; (0020:1157=531h) Load 32 bit ptr
0020:19E0  B9 0004				mov	cx,4
0020:19E3  FC					cld				; Clear direction
0020:19E4  F3/ A7				repe	cmpsw			; Rep zf=1+cx >0 Cmp [si] to es:[di]
0020:19E6  74 06				jz	loc_120			; Jump if zero
0020:19E8			loc_119:
0020:19E8  5F					pop	di
0020:19E9  5E					pop	si
0020:19EA  59					pop	cx
0020:19EB  07					pop	es
0020:19EC  1F					pop	ds
0020:19ED  C3					retn
0020:19EE			loc_120:
0020:19EE  53					push	bx
0020:19EF  50					push	ax
0020:19F0  8C D0				mov	ax,ss
0020:19F2  2E: A3 1064				mov	cs:data_238,ax		; (0020:1064=0)
0020:19F6  2E: 89 26 1066			mov	cs:data_239,sp		; (0020:1066=0)
0020:19FB  8C C8				mov	ax,cs
0020:19FD  8E D0				mov	ss,ax
0020:19FF  BC 07A2				mov	sp,7A2h
0020:1A02  B4 05				mov	ah,5
0020:1A04  2E: FF 1E 114F			call	cs:data_244		; (0020:114F=147h)
0020:1A09  0B C0				or	ax,ax			; Zero ?
0020:1A0B  74 0F				jz	loc_121			; Jump if zero
0020:1A0D  2E: A1 1064				mov	ax,cs:data_238		; (0020:1064=0)
0020:1A11  8E D0				mov	ss,ax
0020:1A13  2E: 8B 26 1066			mov	sp,cs:data_239		; (0020:1066=0)
0020:1A18  58					pop	ax
0020:1A19  5B					pop	bx
0020:1A1A  EB CC				jmp	short loc_119		; (19E8)
0020:1A1C			loc_121:
0020:1A1C  B4 0F				mov	ah,0Fh
0020:1A1E  CD 10				int	10h			; Video display   ah=functn 0Fh
										;  get state, al=mode, bh=page
0020:1A20  3C 07				cmp	al,7
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 51

0020:1A22  74 06				je	loc_122			; Jump if equal
0020:1A24  32 E4				xor	ah,ah			; Zero register
0020:1A26  B0 02				mov	al,2
0020:1A28  CD 10				int	10h			; Video display   ah=functn 00h
										;  set display mode in al
0020:1A2A			loc_122:
0020:1A2A  B4 05				mov	ah,5
0020:1A2C  32 C0				xor	al,al			; Zero register
0020:1A2E  CD 10				int	10h			; Video display   ah=functn 05h
										;  set display page al
0020:1A30  BE 12E2				mov	si,12E2h
0020:1A33  0E					push	cs
0020:1A34  1F					pop	ds
0020:1A35  FC					cld				; Clear direction
0020:1A36			loc_123:
0020:1A36  AC					lodsb				; String [si] to al
0020:1A37  3C 24				cmp	al,24h			; '$'
0020:1A39  74 09				je	loc_124			; Jump if equal
0020:1A3B  B4 0E				mov	ah,0Eh
0020:1A3D  BB 0007				mov	bx,7
0020:1A40  CD 10				int	10h			; Video display   ah=functn 0Eh
										;  write char al, teletype mode
0020:1A42  EB F2				jmp	short loc_123		; (1A36)
0020:1A44			loc_124:
0020:1A44  E8 02F7				call	sub_29			; (1D3E)
0020:1A47  EB FB				jmp	short loc_124		; (1A44)
0020:1A49  01 A7 3271				add	data_421[bx],sp		; (0020:3271=0)
0020:1A4D  5C					pop	sp
0020:1A4E  51					push	cx
0020:1A4F  8B 0E 0010				mov	cx,word ptr data_73+2	; (0020:0010=0)
  
0020:1A53			locloop_125:
0020:1A53  E2 FE				loop	locloop_125		; Loop if cx > 0
  
0020:1A55  59					pop	cx
0020:1A56  CB					retf				; Return far
0020:1A57  004B[00]				db	75 dup (0)
0020:1AA2  43					inc	bx
0020:1AA3  3A 5C 57				cmp	bl,[si+57h]
0020:1AA6  49					dec	cx
0020:1AA7  4E					dec	si
0020:1AA8  44					inc	sp
0020:1AA9  4F					dec	di
0020:1AAA  57					push	di
0020:1AAB  53					push	bx
0020:1AAC  5C					pop	sp
0020:1AAD  53					push	bx
0020:1AAE  59					pop	cx
0020:1AAF  53					push	bx
0020:1AB0  54					push	sp
0020:1AB1  45					inc	bp
0020:1AB2  4D					dec	bp
0020:1AB3  33 32				xor	si,[bp+si]
0020:1AB5  5C					pop	sp
0020:1AB6  43					inc	bx
0020:1AB7  4F					dec	di
0020:1AB8  55					push	bp
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 52

0020:1AB9  4E					dec	si
0020:1ABA  54					push	sp
0020:1ABB  52					push	dx
0020:1ABC  59					pop	cx
0020:1ABD  2E					db	2Eh
0020:1ABE  53					push	bx
0020:1ABF  59					pop	cx
0020:1AC0  53					push	bx
0020:1AC1  0021[00]				db	33 dup (0)
0020:1AE2  B5 01				mov	ch,1
0020:1AE4  06					push	es
0020:1AE5  00 02				add	[bp+si],al
0020:1AE7  AF					scasw				; Scan es:[di] for ax
0020:1AE8  0A A7 0400				or	ah,byte ptr ds:[400h][bx]	; (0020:0400=0)
0020:1AEC  31 0B				xor	[bp+di],cx
0020:1AEE  A7					cmpsw				; Cmp [si] to es:[di]
0020:1AEF  00 05				add	[di],al
0020:1AF1  B3 0B				mov	bl,0Bh
0020:1AF3  A7					cmpsw				; Cmp [si] to es:[di]
0020:1AF4  00 06 0BE3				add	data_212,al		; (0020:0BE3=0)
0020:1AF8  A7					cmpsw				; Cmp [si] to es:[di]
0020:1AF9  00 07				add	[bx],al
0020:1AFB  E5 0C				in	ax,0Ch			; port 0Ch
0020:1AFD  A7					cmpsw				; Cmp [si] to es:[di]
0020:1AFE  00 01				add	[bx+di],al
0020:1B00  26: 00 01				add	es:[bx+di],al
0020:1B03  00 B5 0001				add	[di+1],dh
0020:1B07  00 24				add	[si],ah
0020:1B09  00 00				add	[bx+si],al
0020:1B0B  00 00				add	[bx+si],al
0020:1B0D  2C 00				sub	al,0
0020:1B0F  2E: 00 2F				add	cs:[bx],ch
0020:1B12  00 3A				add	[bp+si],bh
0020:1B14  00 00				add	[bx+si],al
0020:1B16  02 00				add	al,[bx+si]
0020:1B18  F7					db	0F7h
0020:1B19  0C A7				or	al,0A7h
0020:1B1B  00 2C				add	[si],ch
0020:1B1D  000B[00]				db	11 dup (0)
0020:1B28  70 00				jo	loc_126			; Jump if overflow=1
0020:1B2A			loc_126:
0020:1B2A  00 00				add	[bx+si],al
0020:1B2C  06					push	es
0020:1B2D  00 A7 2200				add	data_292[bx],ah		; (0020:2200=0FFh)
0020:1B31  00 02				add	[bp+si],al
0020:1B33  00 A7 3200				add	byte ptr data_420[bx],ah	; (0020:3200=0)
0020:1B37  00 04				add	[si],al
0020:1B39  00 A7 FB00				add	data_697[bx],ah		; (0020:FB00=86h)
0020:1B3D  01 06 A701				add	data_656,ax		; (0020:A701=1E8Bh)
0020:1B41  00 02				add	[bp+si],al
0020:1B43  03 01				add	ax,[bx+di]
0020:1B45  00 A7 3A00				add	data_462[bx],ah		; (0020:3A00=0)
0020:1B49  14 18				adc	al,18h
0020:1B4B  00 70 00				add	[bx+si+0],dh
0020:1B4E  0C 00				or	al,0
0020:1B50  01 00				add	[bx+si],ax
0020:1B52  0D 410A				or	ax,410Ah
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 53

0020:1B55  32 30				xor	dh,[bx+si]
0020:1B57  20 48 61				and	[bx+si+61h],cl
0020:1B5A  72 64				jc	loc_129			; Jump if carry Set
0020:1B5C  77 61				ja	loc_128			; Jump if above
0020:1B5E  72 65				jc	loc_130			; Jump if carry Set
0020:1B60  20 45 72				and	[di+72h],al
0020:1B63  72 6F				jc	loc_131			; Jump if carry Set
0020:1B65  72 0D				jc	loc_127			; Jump if carry Set
0020:1B67  0A 24				or	ah,[si]
0020:1B69  00D6[00]				db	214 dup (0)
0020:1C3F  90					nop
0020:1C40  0067[00]				db	103 dup (0)
0020:1CA7  0C 00				or	al,0
0020:1CA9  00 00				add	[bx+si],al
0020:1CAB  04 7A				add	al,7Ah			; 'z'
0020:1CAD  19 00				sbb	[bx+si],ax
0020:1CAF  01 31				add	[bx+di],si
0020:1CB1  05 5A4D				add	ax,5A4Dh
0020:1CB4  8A 01				mov	al,[bx+di]
0020:1CB6  A2 0000				mov	byte ptr data_66,al	; (0020:0000=0)
0020:1CB9  00 09				add	[bx+di],cl
0020:1CBB  00 12				add	[bp+si],dl
0020:1CBD  48					dec	ax
0020:1CBE  FF					db	0FFh
0020:1CBF  FF					db	0FFh
0020:1CC0  39 14				cmp	[si],dx
0020:1CC2  00 04				add	[si],al
0020:1CC4  00 00				add	[bx+si],al
0020:1CC6  00 01				add	[bx+di],al
0020:1CC8  F0> FF 50 00		           lock	call	word ptr [bx+si+0]
0020:1CCC  00 00				add	[bx+si],al
0020:1CCE  01 00				add	[bx+si],ax
0020:1CD0  02 69 00				add	ch,[bx+di+0]
0020:1CD3  00 06 0069				add	data_97,al		; (0020:0069=0)
0020:1CD7  00 0A				add	[bp+si],cl
0020:1CD9  69					db	69h
0020:1CDA  00 00				add	[bx+si],al
0020:1CDC  0B 00				or	ax,[bx+si]
0020:1CDE  8F 07				pop	word ptr [bx]
0020:1CE0  22 16 078F				and	dl,byte ptr ds:[78Fh]	; (0020:078F=6Ch)
0020:1CE4  40					inc	ax
0020:1CE5  16					push	ss
0020:1CE6  8F 07				pop	word ptr [bx]
0020:1CE8  87 17				xchg	dx,[bx]
0020:1CEA  8F 07				pop	word ptr [bx]
0020:1CEC  56					push	si
0020:1CED  1A 8F 0007				sbb	cl,[bx+7]
0020:1CF1  90					nop
0020:1CF2  47					inc	di
0020:1CF3  00 A7 3C00				add	data_470[bx],ah		; (0020:3C00=0)
0020:1CF7  00 A7 F300				add	data_691[bx],ah		; (0020:F300=2Eh)
0020:1CFB  13 A7 3800				adc	sp,data_442[bx]		; (0020:3800=1426h)
0020:1CFF  03 A7 3200				add	sp,data_420[bx]		; (0020:3200=0)
0020:1D03  03 A7 1200				add	sp,word ptr ds:[1200h][bx]	; (0020:1200=0)
0020:1D07  06					push	es
0020:1D08  A7					cmpsw				; Cmp [si] to es:[di]
0020:1D09  00 25				add	[di],ah
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 54

0020:1D0B  03 A7 CA00				add	sp,data_666[bx]		; (0020:CA00=3B26h)
0020:1D0F  13 A7 CE00				adc	sp,data_668[bx]		; (0020:CE00=448Ah)
0020:1D13  00 A7 2600				add	data_295[bx],ah		; (0020:2600=83h)
0020:1D17  03 A7 2800				add	sp,data_307[bx]		; (0020:2800=0BB53h)
0020:1D1B  03 A7 1E00				add	sp,data_283[bx]		; (0020:1E00=0C033h)
0020:1D1F  50					push	ax
0020:1D20  B8 0040				mov	ax,40h
0020:1D23  8E D8				mov	ds,ax
0020:1D25  9F					lahf				; Load ah from flags
0020:1D26  F7 06 0314 2400			test	word ptr ds:[314h],2400h	; (0040:0314=3200h)
0020:1D2C  75 0C				jnz	loc_133			; Jump if not zero
0020:1D2E  F0> 81 26 0314 FDFF	           lock	and	word ptr ds:[314h],0FDFFh	; (0040:0314=3200h)
0020:1D35			loc_132:
0020:1D35  9E					sahf				; Store ah into flags
0020:1D36  58					pop	ax
0020:1D37  1F					pop	ds
0020:1D38  EB 03				jmp	short loc_134		; (1D3D)
0020:1D3A			loc_133:
0020:1D3A  FA					cli				; Disable interrupts
0020:1D3B  EB F8				jmp	short loc_132		; (1D35)
0020:1D3D			loc_134:
0020:1D3D  C3					retn
  
				;ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
				;			       SUBROUTINE
				;‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
  
				sub_29		proc	near
0020:1D3E  1E					push	ds
0020:1D3F  50					push	ax
0020:1D40  B8 0040				mov	ax,40h
0020:1D43  8E D8				mov	ds,ax
0020:1D45  9F					lahf				; Load ah from flags
0020:1D46  F7 06 0314 0003			test	word ptr ds:[314h],3	; (0040:0314=3200h)
0020:1D4C  75 14				jnz	loc_136			; Jump if not zero
0020:1D4E  F7 06 0314 2400			test	word ptr ds:[314h],2400h	; (0040:0314=3200h)
0020:1D54  75 0C				jnz	loc_136			; Jump if not zero
0020:1D56  F0> 81 0E 0314 0200	           lock	or	word ptr ds:[314h],200h	; (0040:0314=3200h)
0020:1D5D			loc_135:
0020:1D5D  9E					sahf				; Store ah into flags
0020:1D5E  58					pop	ax
0020:1D5F  1F					pop	ds
0020:1D60  EB 03				jmp	short loc_137		; (1D65)
0020:1D62			loc_136:
0020:1D62  FB					sti				; Enable interrupts
0020:1D63  EB F8				jmp	short loc_135		; (1D5D)
0020:1D65			loc_137:
0020:1D65  C3					retn
				sub_29		endp
  
0020:1D66			loc_138:
0020:1D66  1E					push	ds
0020:1D67  50					push	ax
0020:1D68  B8 0040				mov	ax,40h
0020:1D6B  8E D8				mov	ds,ax
0020:1D6D  F7 06 0314 2400			test	word ptr ds:[314h],2400h	; (0040:0314=3200h)
0020:1D73  75 4F				jnz	loc_146			; Jump if not zero
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 55

0020:1D75  55					push	bp
0020:1D76  8B EC				mov	bp,sp
0020:1D78  8B 46 0A				mov	ax,[bp+0Ah]
0020:1D7B  5D					pop	bp
0020:1D7C  A9 0100				test	ax,100h
0020:1D7F  75 43				jnz	loc_146			; Jump if not zero
0020:1D81  A9 0200				test	ax,200h
0020:1D84  74 22				jz	loc_142			; Jump if zero
0020:1D86  F0> 81 0E 0314 0200	           lock	or	word ptr ds:[314h],200h	; (0040:0314=3200h)
0020:1D8D  F7 06 0314 0003			test	word ptr ds:[314h],3	; (0040:0314=3200h)
0020:1D93  75 2F				jnz	loc_146			; Jump if not zero
0020:1D95			loc_139:
0020:1D95  86 E0				xchg	ah,al
0020:1D97  FC					cld				; Clear direction
0020:1D98  A8 04				test	al,4
0020:1D9A  75 25				jnz	loc_145			; Jump if not zero
0020:1D9C			loc_140:
0020:1D9C  A8 08				test	al,8
0020:1D9E  75 11				jnz	loc_143			; Jump if not zero
0020:1DA0  70 19				jo	loc_144			; Jump if overflow=1
0020:1DA2			loc_141:
0020:1DA2  9E					sahf				; Store ah into flags
0020:1DA3  58					pop	ax
0020:1DA4  1F					pop	ds
0020:1DA5  CA 0002				retf	2			; Return far
0020:1DA8			loc_142:
0020:1DA8  F0> 81 26 0314 FDFF	           lock	and	data_153,0FDFFh		; (0020:0314=0)
0020:1DAF  EB E4				jmp	short loc_139		; (1D95)
0020:1DB1			loc_143:
0020:1DB1  70 EF				jo	loc_141			; Jump if overflow=1
0020:1DB3  50					push	ax
0020:1DB4  B0 7F				mov	al,7Fh
0020:1DB6  04 02				add	al,2
0020:1DB8  58					pop	ax
0020:1DB9  EB E7				jmp	short loc_141		; (1DA2)
0020:1DBB			loc_144:
0020:1DBB  50					push	ax
0020:1DBC  32 C0				xor	al,al			; Zero register
0020:1DBE  58					pop	ax
0020:1DBF  EB E1				jmp	short loc_141		; (1DA2)
0020:1DC1			loc_145:
0020:1DC1  FD					std				; Set direction flag
0020:1DC2  EB D8				jmp	short loc_140		; (1D9C)
0020:1DC4			loc_146:
0020:1DC4  58					pop	ax
0020:1DC5  1F					pop	ds
0020:1DC6  CF					iret				; Interrupt return
0020:1DC7  36: C5 36 0536			lds	si,dword ptr ss:[536h]	; (0020:0536=48h) Load 32 bit ptr
0020:1DCC  C5 74 07				lds	si,dword ptr [si+7]	; Load 32 bit ptr
0020:1DCF  E8 9090				call	sub_174			; (AE62)
0020:1DD2  36: C5 36 0536			lds	si,dword ptr ss:[536h]	; (0020:0536=48h) Load 32 bit ptr
0020:1DD7  C5 74 07				lds	si,dword ptr [si+7]	; Load 32 bit ptr
0020:1DDA  E8 0651				call	sub_34			; (242E)
0020:1DDD  57					push	di
0020:1DDE  BA 0229				mov	dx,229h
0020:1DE1  E8 E39A		;*		call	sub_7			;*(017E)
0020:1DE1  E8 9A E3				db	0E8h, 9Ah,0E3h
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 56

0020:1DE4  5F					pop	di
0020:1DE5  07					pop	es
0020:1DE6  59					pop	cx
0020:1DE7  51					push	cx
0020:1DE8  AC					lodsb				; String [si] to al
0020:1DE9  3C 1A				cmp	al,1Ah
0020:1DEB  74 05				je	loc_147			; Jump if equal
0020:1DED  E8 8C2E				call	sub_172			; (AA1E)
0020:1DF0  1E					push	ds
0020:1DF1  7E 05				jle	loc_148			; Jump if < or =
0020:1DF3  2E: 89 1E 057C			mov	word ptr cs:[57Ch],bx	; (0020:057C=2020h)
0020:1DF8			loc_148:
0020:1DF8  8C CB				mov	bx,cs
0020:1DFA  8E DB				mov	ds,bx
0020:1DFC  FE 06 02CF				inc	data_149		; (0020:02CF=0)
0020:1E00  C033			data_283	dw	0C033h			; Data table (indexed access)
0020:1E02  50					push	ax
0020:1E03  36: A1 02EA				mov	ax,word ptr ss:data_150+2	; (0020:02EA=0)
0020:1E07  26: 3B 45 2F				cmp	ax,es:[di+2Fh]
0020:1E0B  58					pop	ax
0020:1E0C  06					push	es
0020:1E0D  1F					pop	ds
0020:1E0E			loc_149:
0020:1E0E  8B DF				mov	bx,di
0020:1E10  33 C0				xor	ax,ax			; Zero register
0020:1E12  8B D0				mov	dx,ax
0020:1E14  E8 0EDF				call	sub_59			; (2CF6)
0020:1E17  1E					push	ds
0020:1E18  36: C5 36 0536			lds	si,dword ptr ss:[536h]	; (0020:0536=48h) Load 32 bit ptr
0020:1E1D  E8 0EAF				call	sub_56			; (2CCF)
0020:1E20  8B D7				mov	dx,di
0020:1E22  B4 86				mov	ah,86h
0020:1E24  36: 8B 3E 0309			mov	di,word ptr ss:[309h]	; (0020:0309=0)
0020:1E29  F7 C7 8000				test	di,8000h
0020:1E2D  74 19				jz	loc_151			; Jump if zero
0020:1E2F  E8 1747				call	sub_68			; (3579)
0020:1E32  8B FA				mov	di,dx
0020:1E34  0A C0				or	al,al			; Zero ?
0020:1E36  74 10				jz	loc_151			; Jump if zero
0020:1E38  3C 03				cmp	al,3
0020:1E3A  74 03				je	loc_150			; Jump if equal
0020:1E3C  1F					pop	ds
0020:1E3D  EB CF				jmp	short loc_149		; (1E0E)
0020:1E3F			loc_150:
0020:1E3F  5F					pop	di
0020:1E40  36: C4 3E 0536			les	di,dword ptr ss:[536h]	; (0020:0536=48h) Load 32 bit ptr
0020:1E45  E9 04A1				jmp	loc_170			; (22E9)
0020:1E48			loc_151:
0020:1E48  5F					pop	di
0020:1E49  8B FA				mov	di,dx
0020:1E4B			loc_152:
0020:1E4B  AC					lodsb				; String [si] to al
0020:1E4C  3C 24				cmp	al,24h			; '$'
0020:1E4E  74 08				je	loc_153			; Jump if equal
0020:1E50  B3 07				mov	bl,7
0020:1E52  B4 0E				mov	ah,0Eh
0020:1E54  CD 10				int	10h			; Video display   ah=functn 0Eh
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 57

										;  write char al, teletype mode
0020:1E56  EB F3				jmp	short loc_152		; (1E4B)
0020:1E58			loc_153:
0020:1E58  EB FE				jmp	short loc_153		; (1E58)
0020:1E5A  02 02				add	al,[bp+si]
0020:1E5C  E8 E8D1		;*		call	sub_15			;*(0730)
0020:1E5C  E8 D1 E8				db	0E8h,0D1h,0E8h
0020:1E5F  C3					retn
0020:1E60  2E: 8C 16 0061			mov	cs:data_95,ss		; (0020:0061=0)
0020:1E65  2E: 89 26 0063			mov	cs:data_96,sp		; (0020:0063=0)
0020:1E6A  CD 21				int	21h			; DOS Services  ah=function 00h
										;  terminate, cs=progm seg prefx
0020:1E6C  2E: 8E 16 0061			mov	ss,cs:data_95		; (0020:0061=0)
0020:1E71  2E					db	2Eh
0020:1E72  8B FF				mov	di,di
0020:1E74  FF					db	0FFh
0020:1E75  FF					db	0FFh
0020:1E76  FF 07				inc	word ptr [bx]
0020:1E78  72 15				jc	loc_154			; Jump if carry Set
0020:1E7A  E8 0017				call	sub_32			; (1E94)
0020:1E7D  26: 39 06 084D			cmp	word ptr es:[84Dh],ax	; (032E:084D=3C00h)
0020:1E82  00 FF				add	bh,bh
0020:1E84  01 09				add	[bx+di],cx
0020:1E86  0E					push	cs
0020:1E87  1F					pop	ds
0020:1E88  53					push	bx
  
				;ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
				;			       SUBROUTINE
				;‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
  
				sub_30		proc	near
0020:1E89  44					inc	sp
0020:1E8A  00 CD				add	ch,cl
0020:1E8C  21 EB				and	bx,bp
0020:1E8E  FE					db	0FEh
0020:1E8F			loc_154:
0020:1E8F  26					db	26h
0020:1E90  51					push	cx
0020:1E91  0A 02				or	al,[bp+si]
0020:1E93  CE					into				; Int 4 on overflow
  
				;ﬂﬂﬂﬂ External Entry into Subroutine ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
  
				sub_32:
0020:1E94  00 9A FEF0				add	[bp+si-110h],bl
0020:1E98  4B					dec	bx
0020:1E99  42					inc	dx
0020:1E9A  44					inc	sp
0020:1E9B  00 08				add	[bx+si],cl
0020:1E9D  02 53 25				add	dl,[bp+di+25h]
0020:1EA0  28 18				sub	[bx+si],bl
0020:1EA2  10 00				adc	[bx+si],al
0020:1EA4  08 08				or	[bx+si],cl
0020:1EA6  03 00				add	ax,[bx+si]
0020:1EA8  02 67 2D				add	ah,[bx+2Dh]
0020:1EAB  27					daa				; Decimal adjust
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 58

0020:1EAC  28 90 A02B				sub	data_652[bx+si],dl	; (0020:A02B=0E8h)
0020:1EB0  BF 001F				mov	di,1Fh
0020:1EB3  4F					dec	di
0020:1EB4  0D 000E				or	ax,0Eh
0020:1EB7  00 00				add	[bx+si],al
0020:1EB9  00 9C 8FAE				add	data_646[si],bl		; (0020:8FAE=16h)
0020:1EBD  14 1F				adc	al,1Fh
0020:1EBF  96					xchg	ax,si
0020:1EC0  B9 FFA3				mov	cx,0FFA3h
0020:1EC3  00			data_284	db	0			; Data table (indexed access)
0020:1EC4  01 02				add	[bp+si],ax
0020:1EC6  03 04				add	ax,[si]
0020:1EC8  05 0714				add	ax,714h
0020:1ECB  38 39				cmp	[bx+di],bh
0020:1ECD  3A 3B				cmp	bh,[bp+di]
0020:1ECF  3C 3D				cmp	al,3Dh			; '='
0020:1ED1  3E					db	3Eh
0020:1ED2  3F					aas				; Ascii adjust
0020:1ED3  0C 00				or	al,0
0020:1ED5  0F					pop	cs			; Dangerous 8088 only
0020:1ED6  08 00				or	[bx+si],al
0020:1ED8  00 00				add	[bx+si],al
0020:1EDA  00 00				add	[bx+si],al
0020:1EDC  10 0E FF00				adc	data_698,cl		; (0020:FF00=45h)
0020:1EE0  50					push	ax
0020:1EE1  18 10				sbb	[bx+si],dl
0020:1EE3  00 10				add	[bx+si],dl
0020:1EE5  00 03				add	[bp+di],al
0020:1EE7  00 02				add	[bp+si],al
0020:1EE9  67					db	67h
0020:1EEA  5F					pop	di
0020:1EEB  4F					dec	di
0020:1EEC  50					push	ax
0020:1EED  82 55 81 BF				adc	byte ptr [di-7Fh],0BFh
0020:1EF1  1F					pop	ds
0020:1EF2  00 4F 0D				add	[bx+0Dh],cl
0020:1EF5  0E					push	cs
0020:1EF6  00 00				add	[bx+si],al
0020:1EF8  00 00				add	[bx+si],al
0020:1EFA  9C					pushf				; Push flags
0020:1EFB  8E					db	8Eh
0020:1EFC  8F					db	8Fh
0020:1EFD  28 1F				sub	[bx],bl
0020:1EFF  96					xchg	ax,si
0020:1F00  B9 FFA3				mov	cx,0FFA3h
0020:1F03  00 01				add	[bx+di],al
0020:1F05  02 03				add	al,[bp+di]
0020:1F07  04 05				add	al,5
0020:1F09  14 07				adc	al,7
0020:1F0B  38 39				cmp	[bx+di],bh
0020:1F0D  3A 3B				cmp	bh,[bp+di]
0020:1F0F  3C 3D				cmp	al,3Dh			; '='
0020:1F11  3E					db	3Eh
0020:1F12  3F					aas				; Ascii adjust
0020:1F13  0C 00				or	al,0
0020:1F15  0F					pop	cs			; Dangerous 8088 only
0020:1F16  08 00				or	[bx+si],al
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 59

0020:1F18  00 00				add	[bx+si],al
0020:1F1A  00 00				add	[bx+si],al
0020:1F1C  10 0E FF00				adc	byte ptr ds:[0FF00h],cl	; (0704:FF00=4)
0020:1F20  50					push	ax
0020:1F21  18 10				sbb	[bx+si],dl
0020:1F23  00 10				add	[bx+si],dl
0020:1F25  00 03				add	[bp+di],al
0020:1F27  00 03				add	[bp+di],al
0020:1F29  A6					cmpsb				; Cmp [si] to es:[di]
0020:1F2A  5F					pop	di
0020:1F2B  4F					dec	di
0020:1F2C  50					push	ax
0020:1F2D  82 55 81 BF				adc	byte ptr [di-7Fh],0BFh
0020:1F31  1F					pop	ds
0020:1F32  00 4D 0B				add	[di+0Bh],cl
0020:1F35  0C 00				or	al,0
0020:1F37  00 00				add	[bx+si],al
0020:1F39  00 83 5DA5				add	[bp+di+5DA5h],al
0020:1F3D  28 0D				sub	[di],cl
0020:1F3F  63					db	63h
0020:1F40  BA FFA3				mov	dx,0FFA3h
0020:1F43  00 08				add	[bx+si],cl
0020:1F45  08 08				or	[bx+si],cl
0020:1F47  08 08				or	[bx+si],cl
0020:1F49  08 08				or	[bx+si],cl
0020:1F4B  10 18				adc	[bx+si],bl
0020:1F4D  18 18				sbb	[bx+si],bl
0020:1F4F  18 18				sbb	[bx+si],bl
0020:1F51  18 18				sbb	[bx+si],bl
0020:1F53  0E					push	cs
0020:1F54  00 0F				add	[bx],cl
0020:1F56  08 00				or	[bx+si],al
0020:1F58  00 00				add	[bx+si],al
0020:1F5A  00 00				add	[bx+si],al
0020:1F5C  10 0A				adc	[bp+si],cl
0020:1F5E  00 FF				add	bh,bh
0020:1F60  5E					pop	si
0020:1F61  32 08				xor	cl,[bx+si]
0020:1F63  00 97 0F01				add	byte ptr ds:[0F01h][bx],dl	; (0000:0F01=8Eh)
0020:1F67  00 06 6DE7				add	byte ptr ds:[6DE7h],al	; (0000:6DE7=3)
0020:1F6B  5D					pop	bp
0020:1F6C  5E					pop	si
0020:1F6D  90					nop
0020:1F6E  61					db	61h
0020:1F6F  8F					db	8Fh
0020:1F70  BF 001F				mov	di,1Fh
0020:1F73  40					inc	ax
0020:1F74  00 00				add	[bx+si],al
0020:1F76  00 00				add	[bx+si],al
0020:1F78  00 00				add	[bx+si],al
0020:1F7A  A2 998E				mov	byte ptr ds:[998Eh],al	; (0000:998E=4)
0020:1F7D  2F					das				; Decimal adjust
0020:1F7E  00 A1 E3B9				add	byte ptr ds:[0E3B9h][bx+di],ah	; (0000:E3B9=90h)
0020:1F82  FF 00				inc	word ptr [bx+si]
0020:1F84  01 02				add	[bp+si],ax
0020:1F86  03 04				add	ax,[si]
0020:1F88  05 0714				add	ax,714h
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 60

0020:1F8B  38 39				cmp	[bx+di],bh
0020:1F8D  3A 3B				cmp	bh,[bp+di]
0020:1F8F  3C 3D				cmp	al,3Dh			; '='
0020:1F91  3E					db	3Eh
0020:1F92  3F					aas				; Ascii adjust
0020:1F93  01 00				add	[bx+si],ax
0020:1F95  0F					pop	cs			; Dangerous 8088 only
0020:1F96  0007[00]				db	7 dup (0)
0020:1F9D  05 FF0F				add	ax,0FF0Fh
0020:1FA0  28 18				sub	[bx+si],bl
0020:1FA2  0E					push	cs
0020:1FA3  00 08				add	[bx+si],cl
0020:1FA5  09 03				or	[bp+di],ax
0020:1FA7  00 02				add	[bp+si],al
0020:1FA9  A3 272D				mov	word ptr ds:[272Dh],ax	; (0000:272D=0F000h)
0020:1FAC  28 90 A02B				sub	byte ptr ds:[0A02Bh][bx+si],dl	; (0000:A02B=2Eh)
0020:1FB0  BF 001F				mov	di,1Fh
0020:1FB3  4D					dec	bp
0020:1FB4  0B 0C				or	cx,[si]
0020:1FB6  00 00				add	[bx+si],al
0020:1FB8  00 00				add	[bx+si],al
0020:1FBA  83 A5 145D 1F			and	word ptr ds:[145Dh][di],1Fh	; (0000:145D=0)
0020:1FBF  63					db	63h
0020:1FC0  BA FFA3				mov	dx,0FFA3h
0020:1FC3  00 01				add	[bx+di],al
0020:1FC5  02 03				add	al,[bp+di]
0020:1FC7  04 05				add	al,5
0020:1FC9  14 07				adc	al,7
0020:1FCB  38 39				cmp	[bx+di],bh
0020:1FCD  3A 3B				cmp	bh,[bp+di]
0020:1FCF  3C 3D				cmp	al,3Dh			; '='
0020:1FD1  3E					db	3Eh
0020:1FD2  3F					aas				; Ascii adjust
0020:1FD3  08 00				or	[bx+si],al
0020:1FD5  0F					pop	cs			; Dangerous 8088 only
0020:1FD6  00 00				add	[bx+si],al
0020:1FD8  00 00				add	[bx+si],al
0020:1FDA  00 00				add	[bx+si],al
0020:1FDC  10 0E FF00				adc	byte ptr ds:[0FF00h],cl	; (0000:FF00=15h)
0020:1FE0  50					push	ax
0020:1FE1  18 0E 1000				sbb	byte ptr ds:[1000h],cl	; (0000:1000=0)
0020:1FE5  01 03				add	[bp+di],ax
0020:1FE7  00 02				add	[bp+si],al
0020:1FE9  A3 4F5F				mov	word ptr ds:[4F5Fh],ax	; (0000:4F5F=1E8Bh)
0020:1FEC  50					push	ax
0020:1FED  82 55 81 BF				adc	byte ptr [di-7Fh],0BFh
0020:1FF1  1F					pop	ds
0020:1FF2  00 4D 0B				add	[di+0Bh],cl
0020:1FF5  0C 00				or	al,0
0020:1FF7  00 00				add	[bx+si],al
0020:1FF9  00 83 5DA5				add	[bp+di+5DA5h],al
0020:1FFD  28 1F				sub	[bx],bl
0020:1FFF  63					db	63h
0020:2000  BA FFA3				mov	dx,0FFA3h
0020:2003  00 01				add	[bx+di],al
0020:2005  02 03				add	al,[bp+di]
0020:2007  04 05				add	al,5
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 61

0020:2009  14 07				adc	al,7
0020:200B  38 39				cmp	[bx+di],bh
0020:200D  3A 3B				cmp	bh,[bp+di]
0020:200F  3C 3D				cmp	al,3Dh			; '='
0020:2011  3E					db	3Eh
0020:2012  3F					aas				; Ascii adjust
0020:2013  08 00				or	[bx+si],al
0020:2015  0F					pop	cs			; Dangerous 8088 only
0020:2016  00 00				add	[bx+si],al
0020:2018  00 00				add	[bx+si],al
0020:201A  00 00				add	[bx+si],al
0020:201C  10 0E FF00				adc	byte ptr ds:[0FF00h],cl	; (0C06:FF00=3Bh)
0020:2020  7F 60				jg	loc_155			; Jump if >
0020:2022  0F					pop	cs			; Dangerous 8088 only
0020:2023  00 00				add	[bx+si],al
0020:2025  00 00				add	[bx+si],al
0020:2027  07					pop	es
0020:2028  02 08				add	cl,[bx+si]
0020:202A  FF 0E 0000				dec	word ptr ds:[0]		; (0C06:0000=0F71Eh)
0020:202E  3F					aas				; Ascii adjust
0020:202F  00 08				add	[bx+si],cl
0020:2031  00 FC				add	ah,bh
0020:2033  02 74 70				add	dh,[si+70h]
0020:2036  00 00				add	[bx+si],al
0020:2038  00 00				add	[bx+si],al
0020:203A  DF DF				esc	7,bh			; coprocessor escape
0020:203C  DF 00				esc	7,[bx+si]		; coprocessor escape
0020:203E  00 00				add	[bx+si],al
0020:2040  EC					in	al,dx			; port 25A3h
0020:2041  EC					in	al,dx			; port 25A3h
0020:2042  EC					in	al,dx			; port 25A3h
0020:2043  00 00				add	[bx+si],al
0020:2045  00 FF				add	bh,bh
0020:2047  0053[00]				db	83 dup (0)
0020:209A  00			data_287	db	0
0020:209B  00 00				add	[bx+si],al
0020:209D  00 00				add	[bx+si],al
0020:209F  00 00				add	[bx+si],al
0020:20A1  00 00				add	[bx+si],al
0020:20A3  00 00				add	[bx+si],al
0020:20A5  00 00				add	[bx+si],al
0020:20A7  00 00				add	[bx+si],al
0020:20A9  00 00				add	[bx+si],al
0020:20AB  00 00				add	[bx+si],al
0020:20AD  00 00				add	[bx+si],al
0020:20AF  00 00				add	[bx+si],al
0020:20B1  00 00				add	[bx+si],al
0020:20B3  00 00				add	[bx+si],al
0020:20B5  00 00				add	[bx+si],al
0020:20B7  00 00				add	[bx+si],al
0020:20B9  00 00				add	[bx+si],al
0020:20BB  00 00				add	[bx+si],al
0020:20BD  0000			data_288	dw	0
0020:20BF  00 00				add	[bx+si],al
0020:20C1  0000			data_289	dw	0
0020:20C3  0000			data_290	dw	0
0020:20C5  00 00				add	[bx+si],al
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 62

0020:20C7  00 00				add	[bx+si],al
0020:20C9  00 00				add	[bx+si],al
0020:20CB  00 00				add	[bx+si],al
0020:20CD  0000			data_291	dw	0
0020:20CF  00 00				add	[bx+si],al
0020:20D1  00 00				add	[bx+si],al
0020:20D3  00 00				add	[bx+si],al
0020:20D5  00 00				add	[bx+si],al
0020:20D7  00 00				add	[bx+si],al
0020:20D9  00 00				add	[bx+si],al
0020:20DB  00 00				add	[bx+si],al
0020:20DD  00 00				add	[bx+si],al
0020:20DF  00 00				add	[bx+si],al
0020:20E1  00 00				add	[bx+si],al
0020:20E3  00 00				add	[bx+si],al
0020:20E5  00 00				add	[bx+si],al
0020:20E7  00 00				add	[bx+si],al
0020:20E9  00 00				add	[bx+si],al
0020:20EB  00 00				add	[bx+si],al
0020:20ED  00 00				add	[bx+si],al
0020:20EF  00 00				add	[bx+si],al
0020:20F1  00 00				add	[bx+si],al
0020:20F3  00 00				add	[bx+si],al
0020:20F5  00 00				add	[bx+si],al
0020:20F7  00 00				add	[bx+si],al
0020:20F9  00 00				add	[bx+si],al
0020:20FB  00 00				add	[bx+si],al
0020:20FD  00 00				add	[bx+si],al
0020:20FF  00 00				add	[bx+si],al
0020:2101  00 00				add	[bx+si],al
0020:2103  00 00				add	[bx+si],al
0020:2105  00 00				add	[bx+si],al
0020:2107  00 00				add	[bx+si],al
0020:2109  00 00				add	[bx+si],al
0020:210B  00 00				add	[bx+si],al
0020:210D  00 00				add	[bx+si],al
0020:210F  00 00				add	[bx+si],al
0020:2111  00 00				add	[bx+si],al
0020:2113  00 00				add	[bx+si],al
0020:2115  00 00				add	[bx+si],al
0020:2117  00 00				add	[bx+si],al
0020:2119  00 00				add	[bx+si],al
0020:211B  00 00				add	[bx+si],al
0020:211D  00 00				add	[bx+si],al
0020:211F  00 00				add	[bx+si],al
0020:2121  00 00				add	[bx+si],al
0020:2123  00 00				add	[bx+si],al
0020:2125  00 00				add	[bx+si],al
0020:2127  00 00				add	[bx+si],al
0020:2129  00 00				add	[bx+si],al
0020:212B  00 00				add	[bx+si],al
0020:212D  00 00				add	[bx+si],al
0020:212F  00 00				add	[bx+si],al
0020:2131  00 00				add	[bx+si],al
0020:2133  00 00				add	[bx+si],al
0020:2135  00 00				add	[bx+si],al
0020:2137  00 00				add	[bx+si],al
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 63

0020:2139			loc_157:
0020:2139  00 00				add	[bx+si],al
0020:213B  00 00				add	[bx+si],al
0020:213D  00 00				add	[bx+si],al
0020:213F			loc_159:
0020:213F  00 00				add	[bx+si],al
0020:2141  00 00				add	[bx+si],al
0020:2143  00 00				add	[bx+si],al
0020:2145  00 00				add	[bx+si],al
0020:2147  FF 00				inc	word ptr [bx+si]
0020:2149  00 00				add	[bx+si],al
0020:214B  52					push	dx
0020:214C  3A 45 46				cmp	al,[di+46h]
0020:214F  38 1D				cmp	[di],bl
0020:2151  2A 36 4080				sub	dh,byte ptr ds:[4080h]	; (0C06:4080=0D0h)
0020:2155  20 10				and	[bx+si],dl
0020:2157  08 04				or	[si],al
0020:2159  02 01				add	al,[bx+di]
0020:215B  1B FF				sbb	di,di
0020:215D  00 FF				add	bh,bh
0020:215F  FF					db	0FFh
0020:2160  FF 1E FFFF				call	dword ptr ds:[0FFFFh]	; (0C06:FFFF)
0020:2164  FF					db	0FFh
0020:2165  FF 1F		;*		call	dword ptr [bx]		;*50 entries
0020:2165  FF 1F				db	0FFh, 1Fh
0020:2167  FF					db	0FFh
0020:2168  7F 94		;*		jg	loc_156			;*Jump if >
0020:2168  7F 94				db	 7Fh, 94h
0020:216A  11 17				adc	[bx],dx
0020:216C  05 1412				add	ax,1412h
0020:216F  19 15				sbb	[di],dx
0020:2171  09 0F				or	[bx],cx
0020:2173  10 1B				adc	[bp+di],bl
0020:2175  1D FF0A				sbb	ax,0FF0Ah
0020:2178  01 13				add	[bp+di],dx
0020:217A  04 06				add	al,6
0020:217C  07					pop	es
0020:217D  08 0A				or	[bp+si],cl
0020:217F  0B 0C				or	cx,[si]
0020:2181  FF					db	0FFh
0020:2182  FF					db	0FFh
0020:2183  FF					db	0FFh
0020:2184  FF 1C				call	dword ptr [si]		;*
0020:2186  1A 18				sbb	bl,[bx+si]
0020:2188  03 16 0E02				add	dx,word ptr ds:[0E02h]	; (0C06:0E02=8133h)
0020:218C  0D FFFF				or	ax,0FFFFh
0020:218F  FF					db	0FFh
0020:2190  FF 96 20FF				call	word ptr [bp+20FFh]
0020:2194  FF 5E 5F				call	dword ptr [bp+5Fh]
0020:2197  60					db	60h
0020:2198  61					db	61h
0020:2199  62					db	62h
0020:219A  63					db	63h
0020:219B  64					db	64h
0020:219C  65					db	65h
0020:219D  66					db	66h
0020:219E  67					db	67h
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 64

0020:219F  FF					db	0FFh
0020:21A0  FF 77 8D				push	word ptr [bx-73h]
0020:21A3  84 8E 8F73				test	cl,[bp-708Dh]
0020:21A7  74 90				jz	loc_157			; Jump if zero
0020:21A9  75 91		;*		jnz	loc_158			;*Jump if not zero
0020:21A9  75 91				db	 75h, 91h
0020:21AB  76 92				jbe	loc_159			; Jump if below or =
0020:21AD  93					xchg	ax,bx
0020:21AE  FF					db	0FFh
0020:21AF  FF					db	0FFh
0020:21B0  FF 89 1B8A				dec	word ptr ds:[1B8Ah][bx+di]	; (0C06:1B8A=267Bh)
0020:21B4  31 32				xor	[bp+si],si
0020:21B6  33 34				xor	si,[si]
0020:21B8  35 3736				xor	ax,3736h
0020:21BB  38 39				cmp	[bx+di],bh
0020:21BD  30 2D				xor	[di],ch
0020:21BF  3D 0908				cmp	ax,908h
0020:21C2  71 77				jno	loc_164			; Jump if not overflw
0020:21C4  65					db	65h
0020:21C5  72 74				jc	loc_164			; Jump if carry Set
0020:21C7  79 75				jns	loc_165			; Jump if not sign
0020:21C9  69					db	69h
0020:21CA  6F					db	6Fh
0020:21CB  70 5B				jo	loc_161			; Jump if overflow=1
0020:21CD  5D					pop	bp
0020:21CE  0D 61FF				or	ax,61FFh
0020:21D1  73 64				jnc	loc_163			; Jump if carry=0
0020:21D3  66					db	66h
0020:21D4  67					db	67h
0020:21D5  68					db	68h
0020:21D6  6A					db	6Ah
0020:21D7  6B					db	6Bh
0020:21D8  6C					db	6Ch
0020:21D9  3B 27				cmp	sp,[bx]
0020:21DB  60					db	60h
0020:21DC  FF 5C 7A		;*		call	dword ptr [si+7Ah]	;*50 entries
0020:21DC  FF 5C 7A				db	0FFh, 5Ch, 7Ah
0020:21DF  78 63				js	loc_166			; Jump if sign=1
0020:21E1  76 62				jbe	loc_167			; Jump if below or =
0020:21E3  6E					db	6Eh
0020:21E4  6D					db	6Dh
0020:21E5  2C 2E				sub	al,2Eh			; '.'
0020:21E7  2F					das				; Decimal adjust
0020:21E8  FF 2A				jmp	dword ptr [bp+si]
0020:21EA  FF 20				jmp	word ptr [bx+si]
0020:21EC  FF					db	0FFh
0020:21ED  3B 3C				cmp	di,[si]
0020:21EF  3D 3F3E				cmp	ax,3F3Eh
0020:21F2  40					inc	ax
0020:21F3  41					inc	cx
0020:21F4  42					inc	dx
0020:21F5  43					inc	bx
0020:21F6  44					inc	sp
0020:21F7  FF					db	0FFh
0020:21F8  FF 47 48				inc	word ptr [bx+48h]
0020:21FB  49					dec	cx
0020:21FC  FF 4B FF				dec	word ptr [bp+di-1]
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 65

0020:21FF  4D					dec	bp
0020:2200  FF			data_292	db	0FFh			; Data table (indexed access)
0020:2201  4F					dec	di
0020:2202  50					push	ax
0020:2203  51					push	cx
0020:2204  52					push	dx
0020:2205  53					push	bx
0020:2206  FF					db	0FFh
0020:2207  FF 5C 85				call	dword ptr [si-7Bh]
0020:220A  86 1B				xchg	bl,[bp+di]
0020:220C  21 40 23				and	[bx+si+23h],ax
0020:220F  24 25				and	al,25h			; '%'
0020:2211  5E					pop	si
0020:2212  26: 2A 28				sub	ch,es:[bx+si]
0020:2215  29 5F 2B				sub	[bx+2Bh],bx
0020:2218  08 00				or	[bx+si],al
0020:221A  51					push	cx
0020:221B  57					push	di
0020:221C  45					inc	bp
0020:221D  52					push	dx
0020:221E  54					push	sp
0020:221F  59					pop	cx
0020:2220  55					push	bp
0020:2221  49					dec	cx
0020:2222  4F					dec	di
0020:2223  50					push	ax
0020:2224  7B 7D				jnp	loc_169			; Jump if not parity
0020:2226  0D 41FF				or	ax,41FFh
0020:2229  53					push	bx
0020:222A  44					inc	sp
0020:222B  46					inc	si
0020:222C  47					inc	di
0020:222D  48					dec	ax
0020:222E  4A					dec	dx
0020:222F  4B					dec	bx
0020:2230  4C					dec	sp
0020:2231  3A 22				cmp	ah,[bp+si]
0020:2233  7E FF				jle	loc_162			; Jump if < or =
0020:2235  7C 5A				jl	loc_168			; Jump if <
0020:2237			loc_163:
0020:2237  58					pop	ax
0020:2238  43					inc	bx
0020:2239  56					push	si
0020:223A  42					inc	dx
0020:223B			loc_164:
0020:223B  4E					dec	si
0020:223C  4D					dec	bp
0020:223D  3C 3E				cmp	al,3Eh			; '>'
0020:223F  3F					aas				; Ascii adjust
0020:2240  FF 00				inc	word ptr [bx+si]
0020:2242  FF 20				jmp	word ptr [bx+si]	;*
0020:2244			loc_166:
0020:2244  FF 54 55				call	word ptr [si+55h]	;*50 entries
0020:2247  56					push	si
0020:2248  57					push	di
0020:2249  58					pop	ax
0020:224A  59					pop	cx
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 66

0020:224B  5A					pop	dx
0020:224C  5B					pop	bx
0020:224D  5C					pop	sp
0020:224E  5D					pop	bp
0020:224F  FF					db	0FFh
0020:2250  FF 37				push	word ptr [bx]
0020:2252  38 39				cmp	[bx+di],bh
0020:2254  2D 3534				sub	ax,3534h
0020:2257  36: 2B 31				sub	si,ss:[bx+di]
0020:225A  32 33				xor	dh,[bp+di]
0020:225C  30 2E FFFF				xor	byte ptr ds:[0FFFFh],ch	; (0C06:FFFF=65h)
0020:2260  7C 87		;*		jl	loc_160			;*Jump if <
0020:2260  7C 87				db	 7Ch, 87h
0020:2262  88 52 4F				mov	[bp+si+4Fh],dl
0020:2265  50					push	ax
0020:2266  51					push	cx
0020:2267  4B					dec	bx
0020:2268  4C					dec	sp
0020:2269  4D					dec	bp
0020:226A  47					inc	di
0020:226B  48					dec	ax
0020:226C  49					dec	cx
0020:226D  10 11				adc	[bx+di],dl
0020:226F  12 13				adc	dl,[bp+di]
0020:2271  14 15				adc	al,15h
0020:2273  16					push	ss
0020:2274  17					pop	ss
0020:2275  18 19				sbb	[bx+di],bl
0020:2277  1E					push	ds
0020:2278  1F					pop	ds
0020:2279  20 21				and	[bx+di],ah
0020:227B  22 23				and	ah,[bp+di]
0020:227D  24 25				and	al,25h			; '%'
0020:227F  26					db	26h
0020:2280  2C 2D				sub	al,2Dh			; '-'
0020:2282  2E					db	2Eh
0020:2283  2F					das				; Decimal adjust
0020:2284  30 31				xor	[bx+di],dh
0020:2286  32 CD				xor	cl,ch
0020:2288  1B C4				sbb	ax,sp
0020:228A  C4					db	0C4h
0020:228B  FE CD				dec	ch
0020:228D  05 C4C4				add	ax,0C4C4h
0020:2290  FE CD				dec	ch
0020:2292  15 01EB				adc	ax,1EBh
0020:2295  90					nop
0020:2296  EB 01				jmp	short $+3		; delay for I/O
0020:2298  90					nop
0020:2299  EB 01				jmp	short $+3		; delay for I/O
0020:229B  90					nop
0020:229C  C4					db	0C4h
0020:229D  C4					db	0C4h
0020:229E  FE C4				inc	ah
0020:22A0  C4 02				les	ax,dword ptr [bp+si]	; Load 32 bit ptr
0020:22A2  E9 0247				jmp	loc_191			; (24EC)
0020:22A5  CD 13				int	13h			; Disk  dl=drive 4  ah=func 3Eh
0020:22A7  C4					db	0C4h
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 67

0020:22A8  C4					db	0C4h
0020:22A9  FE					db	0FEh
0020:22AA  50					push	ax
0020:22AB  33 C0				xor	ax,ax			; Zero register
0020:22AD  C4					db	0C4h
0020:22AE  C4 09				les	cx,dword ptr [bx+di]	; Load 32 bit ptr
0020:22B0  58					pop	ax
0020:22B1  E9 0238				jmp	loc_191			; (24EC)
0020:22B4  90					nop
0020:22B5  90					nop
0020:22B6  E4 60				in	al,60h			; port 60h, keybd scan or sw1
0020:22B8  90					nop
0020:22B9  90					nop
0020:22BA  C4					db	0C4h
0020:22BB  C4					db	0C4h
0020:22BC  FE C4				inc	ah
0020:22BE  C4 5D 00				les	bx,dword ptr [di+0]	; Load 32 bit ptr
0020:22C1  C4					db	0C4h
0020:22C2  C4 5D 01				les	bx,dword ptr [di+1]	; Load 32 bit ptr
0020:22C5  C4					db	0C4h
0020:22C6  C4 5D 02				les	bx,dword ptr [di+2]	; Load 32 bit ptr
0020:22C9  C4					db	0C4h
0020:22CA  C4 5D 03				les	bx,dword ptr [di+3]	; Load 32 bit ptr
0020:22CD  C4					db	0C4h
0020:22CE  C4 5D 04				les	bx,dword ptr [di+4]	; Load 32 bit ptr
0020:22D1  C4					db	0C4h
0020:22D2  C4 5D 05				les	bx,dword ptr [di+5]	; Load 32 bit ptr
0020:22D5  C4					db	0C4h
0020:22D6  C4 5D 06				les	bx,dword ptr [di+6]	; Load 32 bit ptr
0020:22D9  C4					db	0C4h
0020:22DA  C4 5D 07				les	bx,dword ptr [di+7]	; Load 32 bit ptr
0020:22DD  C4					db	0C4h
0020:22DE  C4 5D 08				les	bx,dword ptr [di+8]	; Load 32 bit ptr
0020:22E1  C4					db	0C4h
0020:22E2  C4 5D 09				les	bx,dword ptr [di+9]	; Load 32 bit ptr
0020:22E5  C4					db	0C4h
0020:22E6  C4 5D 0A				les	bx,dword ptr [di+0Ah]	; Load 32 bit ptr
0020:22E9			loc_170:
0020:22E9  C4					db	0C4h
0020:22EA  C4 5D 0B				les	bx,dword ptr [di+0Bh]	; Load 32 bit ptr
0020:22ED  C4					db	0C4h
0020:22EE  C4 5D 0C				les	bx,dword ptr [di+0Ch]	; Load 32 bit ptr
0020:22F1  C4					db	0C4h
0020:22F2  C4 5D 0D				les	bx,dword ptr [di+0Dh]	; Load 32 bit ptr
0020:22F5  C4					db	0C4h
0020:22F6  C4 5D 0E				les	bx,dword ptr [di+0Eh]	; Load 32 bit ptr
0020:22F9  C4					db	0C4h
0020:22FA  C4 5D 0F				les	bx,dword ptr [di+0Fh]	; Load 32 bit ptr
0020:22FD  80 FA 80				cmp	dl,80h
0020:2300  72 28				jb	loc_173			; Jump if below
0020:2302  80 FC 02				cmp	ah,2
0020:2305  72 1D				jb	loc_172			; Jump if below
0020:2307  80 FC 05				cmp	ah,5
0020:230A  76 0A				jbe	loc_171			; Jump if below or =
0020:230C  80 FC 0A				cmp	ah,0Ah
0020:230F  72 13				jb	loc_172			; Jump if below
0020:2311  80 FC 0C				cmp	ah,0Ch
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 68

0020:2314  77 0E				ja	loc_172			; Jump if above
0020:2316			loc_171:
0020:2316  50					push	ax
0020:2317  B8 0001				mov	ax,1
0020:231A  C4					db	0C4h
0020:231B  C4 59 58				les	bx,dword ptr [bx+di+58h]	; Load 32 bit ptr
0020:231E  B4 80				mov	ah,80h
0020:2320  F9					stc				; Set carry flag
0020:2321  CA 0002				retf	2			; Return far
0020:2324			loc_172:
0020:2324  C4					db	0C4h
0020:2325  C4 13				les	dx,dword ptr [bp+di]	; Load 32 bit ptr
0020:2327  CA 0002				retf	2			; Return far
0020:232A			loc_173:
0020:232A  C4					db	0C4h
0020:232B  C4 40 CA				les	ax,dword ptr [bx+si-36h]	; Load 32 bit ptr
0020:232E  02 00				add	al,[bx+si]
0020:2330  1E					push	ds
0020:2331  50					push	ax
0020:2332  51					push	cx
0020:2333  B8 0040				mov	ax,40h
0020:2336  8E D8				mov	ds,ax
0020:2338  B9 0010				mov	cx,10h
  
0020:233B			locloop_174:
0020:233B  B0 3E				mov	al,3Eh			; '>'
0020:233D  A8 80				test	al,80h
0020:233F  E1 FA				loopz	locloop_174		; Loop if zf=1, cx>0
  
0020:2341  59					pop	cx
0020:2342  58					pop	ax
0020:2343  1F					pop	ds
0020:2344  C4					db	0C4h
0020:2345  C4					db	0C4h
0020:2346  FE 01				inc	byte ptr [bx+di]
0020:2348  C2 8204				retn	8204h
0020:234B  CF					iret				; Interrupt return
0020:234C  04 02				add	al,2
0020:234E  DC 04				esc	4,[si]			; coprocessor escape
0020:2350  03 E9				add	bp,cx
0020:2352  04 84				add	al,84h
0020:2354  F6 04 04				test	byte ptr [si],4
0020:2357  03 05				add	ax,[di]
0020:2359  85 10				test	dx,[bx+si]
0020:235B  05 1D85				add	ax,1D85h
0020:235E  05 2A05				add	ax,2A05h
0020:2361  05 02DF				add	ax,2DFh
0020:2364  25 0902				and	ax,902h
0020:2367  2A FF				sub	bh,bh
0020:2369  50					push	ax
0020:236A  F6					db	0F6h
0020:236B  0F					pop	cs			; Dangerous 8088 only
0020:236C  08 27				or	[bx],ah
0020:236E  80 DF 02				sbb	bh,2
0020:2371  25 0902				and	ax,902h
0020:2374  2A FF				sub	bh,bh
0020:2376  50					push	ax
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 69

0020:2377  F6					db	0F6h
0020:2378  0F					pop	cs			; Dangerous 8088 only
0020:2379  08 27				or	[bx],ah
0020:237B  40					inc	ax
0020:237C  DF 02				esc	7,[bp+si]		; coprocessor escape
0020:237E  25 0F02				and	ax,0F02h
0020:2381  1B FF				sbb	di,di
0020:2383  54					push	sp
0020:2384  F6					db	0F6h
0020:2385  0F					pop	cs			; Dangerous 8088 only
0020:2386  08 4F 00				or	[bx+0],cl
0020:2389  DF 02				esc	7,[bp+si]		; coprocessor escape
0020:238B  25 0902				and	ax,902h
0020:238E  2A FF				sub	bh,bh
0020:2390  50					push	ax
0020:2391  F6					db	0F6h
0020:2392  0F					pop	cs			; Dangerous 8088 only
0020:2393  08 4F 80				or	[bx-80h],cl
0020:2396  DF 02				esc	7,[bp+si]		; coprocessor escape
0020:2398  25 0902				and	ax,902h
0020:239B  2A FF				sub	bh,bh
0020:239D  50					push	ax
0020:239E  F6					db	0F6h
0020:239F  0F					pop	cs			; Dangerous 8088 only
0020:23A0  08 4F 80				or	[bx-80h],cl
0020:23A3  AF					scasw				; Scan es:[di] for ax
0020:23A4  02 25				add	ah,[di]
0020:23A6  02 12				add	dl,[bp+si]
0020:23A8  1B FF				sbb	di,di
0020:23AA  6C					db	6Ch
0020:23AB  F6					db	0F6h
0020:23AC  0F					pop	cs			; Dangerous 8088 only
0020:23AD  08 4F 00				or	[bx+0],cl
0020:23B0  E1 02				loopz	locloop_175		; Loop if zf=1, cx>0
  
0020:23B2  25 0902				and	ax,902h
0020:23B5  2A FF				sub	bh,bh
0020:23B7  50					push	ax
0020:23B8  F6					db	0F6h
0020:23B9  0F					pop	cs			; Dangerous 8088 only
0020:23BA  08 4F 80				or	[bx-80h],cl
0020:23BD  D1 02				rol	word ptr [bp+si],1	; Rotate
0020:23BF  25 1202				and	ax,1202h
0020:23C2  1B FF				sbb	di,di
0020:23C4  65					db	65h
0020:23C5  F6					db	0F6h
0020:23C6  0F					pop	cs			; Dangerous 8088 only
0020:23C7  08 4F 00				or	[bx+0],cl
0020:23CA  A1 2502				mov	ax,word ptr ds:[2502h]	; (0C06:2502=54BBh)
0020:23CD  02 24				add	ah,[si]
0020:23CF  38 FF				cmp	bh,bh
0020:23D1  53					push	bx
0020:23D2  F6					db	0F6h
0020:23D3  0F					pop	cs			; Dangerous 8088 only
0020:23D4  08 4F C0				or	[bx-40h],cl
0020:23D7  DF 02				esc	7,[bp+si]		; coprocessor escape
0020:23D9  25 1202				and	ax,1202h
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 70

0020:23DC  1B FF				sbb	di,di
0020:23DE  54					push	sp
0020:23DF  F6					db	0F6h
0020:23E0  0F					pop	cs			; Dangerous 8088 only
0020:23E1  08 E8				or	al,ch
0020:23E3  94					xchg	ax,sp
0020:23E4  02 80 88FC				add	al,byte ptr ds:[88FCh][bx+si]	; (0C06:88FC=75h)
0020:23E8  74 10				jz	loc_176			; Jump if zero
0020:23EA  80 FC 91				cmp	ah,91h
0020:23ED  74 0B				je	loc_176			; Jump if equal
0020:23EF  80 FC 86				cmp	ah,86h
0020:23F2  74 0C				je	loc_177			; Jump if equal
0020:23F4  C4					db	0C4h
0020:23F5  C4 15				les	dx,dword ptr [di]	; Load 32 bit ptr
0020:23F7  CA 0002				retf	2			; Return far
0020:23FA			loc_176:
0020:23FA  C4					db	0C4h
0020:23FB  C4 15				les	dx,dword ptr [di]	; Load 32 bit ptr
0020:23FD  E9 00EC				jmp	loc_191			; (24EC)
0020:2400			loc_177:
0020:2400  C4					db	0C4h
0020:2401  C4 15				les	dx,dword ptr [di]	; Load 32 bit ptr
0020:2403  72 23				jc	loc_180			; Jump if carry Set
0020:2405  51					push	cx
0020:2406  52					push	dx
0020:2407  06					push	es
0020:2408  B8 0040				mov	ax,40h
0020:240B  8E C0				mov	es,ax
0020:240D  87 D1				xchg	dx,cx
  
0020:240F			locloop_178:
0020:240F  26: F6 06 00A0 80			test	byte ptr es:[0A0h],80h	; (0040:00A0=0)
0020:2415  E1 F8				loopz	locloop_178		; Loop if zf=1, cx>0
  
0020:2417  75 05				jnz	loc_179			; Jump if not zero
0020:2419  83 EA 01				sub	dx,1
0020:241C  73 F1				jnc	locloop_178		; Jump if carry=0
0020:241E			loc_179:
0020:241E  26: C6 06 00A0 00			mov	byte ptr es:[0A0h],0	; (0040:00A0=0)
0020:2424  07					pop	es
0020:2425  5A					pop	dx
0020:2426  59					pop	cx
0020:2427  F8					clc				; Clear carry flag
0020:2428			loc_180:
0020:2428  CA 0002				retf	2			; Return far
0020:242B  56					push	si
0020:242C  52					push	dx
0020:242D  50					push	ax
  
				;ﬂﬂﬂﬂ External Entry into Subroutine ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
  
				sub_34:
0020:242E  8B C2				mov	ax,dx
0020:2430  33 D2				xor	dx,dx			; Zero register
0020:2432  BE 0003				mov	si,3
0020:2435  F7 F6				div	si			; ax,dx rem=dx:ax/reg
0020:2437  8B F2				mov	si,dx
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 71

0020:2439  58					pop	ax
0020:243A  80 FC 02				cmp	ah,2
0020:243D  74 07				je	loc_181			; Jump if equal
0020:243F  0A E4				or	ah,ah			; Zero ?
0020:2441  74 15				jz	loc_182			; Jump if zero
0020:2443  E9 0082				jmp	loc_187			; (24C8)
0020:2446			loc_181:
0020:2446  2E: 80 BC 019D 00			cmp	cs:data_124[si],0	; (0020:019D=0)
0020:244C  75 7A				jne	loc_187			; Jump if not equal
0020:244E  2E: F6 84 01A0 10			test	cs:data_125[si],10h	; (0020:01A0=0)
0020:2454  74 7B				jz	loc_188			; Jump if zero
0020:2456  EB 70				jmp	short loc_187		; (24C8)
0020:2458			loc_182:
0020:2458  2E: 80 3E 02A7 FF			cmp	byte ptr cs:data_142,0FFh	; (0020:02A7=0)
0020:245E  75 14				jne	loc_183			; Jump if not equal
0020:2460  2E: 88 16 02A7			mov	byte ptr cs:data_142,dl	; (0020:02A7=0)
0020:2465  2E: C7 06 02A8 0000			mov	word ptr cs:data_142+1,0	; (0020:02A8=5551h)
0020:246C  2E: C6 06 02AA FF			mov	cs:data_144,0FFh	; (0020:02AA=0)
0020:2472  EB 54				jmp	short loc_187		; (24C8)
0020:2474			loc_183:
0020:2474  2E: 38 16 02A7			cmp	byte ptr cs:data_142,dl	; (0020:02A7=0)
0020:2479  74 15				je	loc_184			; Jump if equal
0020:247B  56					push	si
0020:247C  33 F6				xor	si,si			; Zero register
0020:247E  C4					db	0C4h
0020:247F  C4 17				les	dx,dword ptr [bx]	; Load 32 bit ptr
0020:2481  5E					pop	si
0020:2482  2E: C7 06 02A8 0000			mov	word ptr cs:data_142+1,0	; (0020:02A8=5551h)
0020:2489  2E: 88 16 02A7			mov	byte ptr cs:data_142,dl	; (0020:02A7=0)
0020:248E  EB 38				jmp	short loc_187		; (24C8)
0020:2490			loc_184:
0020:2490  2E: 8B 16 02A8			mov	dx,word ptr cs:data_142+1	; (0020:02A8=5551h)
0020:2495  8B F2				mov	si,dx
0020:2497  2E: 88 84 01A8			mov	cs:data_127[si],al	; (0020:01A8=0)
0020:249C  2E: FF 06 02A8			inc	word ptr cs:data_142+1	; (0020:02A8=5551h)
0020:24A1  2E: 81 3E 02A8 00FF			cmp	word ptr cs:data_142+1,0FFh	; (0020:02A8=5551h)
0020:24A8  75 18				jne	loc_186			; Jump if not equal
0020:24AA  33 F6				xor	si,si			; Zero register
0020:24AC  C4					db	0C4h
0020:24AD  C4 17				les	dx,dword ptr [bx]	; Load 32 bit ptr
0020:24AF  F6 C4 08				test	ah,8
0020:24B2  74 07				jz	loc_185			; Jump if zero
0020:24B4  2E: FF 0E 02A8			dec	word ptr cs:data_142+1	; (0020:02A8=5551h)
0020:24B9  EB 2F				jmp	short loc_190		; (24EA)
0020:24BB			loc_185:
0020:24BB  2E: C7 06 02A8 0000			mov	word ptr cs:data_142+1,0	; (0020:02A8=5551h)
0020:24C2			loc_186:
0020:24C2  B4 90				mov	ah,90h
0020:24C4  EB 24				jmp	short loc_190		; (24EA)
0020:24C6  56					push	si
0020:24C7  52					push	dx
0020:24C8			loc_187:
0020:24C8  BE FFFF				mov	si,0FFFFh
0020:24CB  C4					db	0C4h
0020:24CC  C4 17				les	dx,dword ptr [bx]	; Load 32 bit ptr
0020:24CE  EB 1A				jmp	short loc_190		; (24EA)
0020:24D0  90					nop
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 72

0020:24D1			loc_188:
0020:24D1  2E: F6 84 01A3 01			test	cs:data_126[si],1	; (0020:01A3=0)
0020:24D7  75 06				jnz	loc_189			; Jump if not zero
0020:24D9  2E: 80 8C 019A 80			or	byte ptr cs:[19Ah][si],80h	; (0020:019A=0)
0020:24DF			loc_189:
0020:24DF  2E: 8A A4 019A			mov	ah,byte ptr cs:[19Ah][si]	; (0020:019A=0)
0020:24E4  80 E4 F8				and	ah,0F8h
0020:24E7  80 F4 48				xor	ah,48h			; 'H'
0020:24EA			loc_190:
0020:24EA  5A					pop	dx
0020:24EB  5E					pop	si
0020:24EC			loc_191:
0020:24EC  1E					push	ds
0020:24ED  50					push	ax
0020:24EE  B8 0040				mov	ax,40h
0020:24F1  8E D8				mov	ds,ax
0020:24F3  F7 06 0314 2400			test	word ptr ds:[314h],2400h	; (0040:0314=3200h)
0020:24F9  75 4F				jnz	loc_199			; Jump if not zero
0020:24FB  55					push	bp
0020:24FC  8B EC				mov	bp,sp
0020:24FE  8B 46 0A				mov	ax,[bp+0Ah]
0020:2501  5D					pop	bp
0020:2502  00A9			data_293	dw	0A9h
0020:2504  01 75 43				add	[di+43h],si
0020:2507  A9 0200				test	ax,200h
0020:250A  74 22				jz	loc_195			; Jump if zero
0020:250C  F0> 81 0E 0314 0200	           lock	or	word ptr ds:[314h],200h	; (0040:0314=3200h)
0020:2513  F7 06 0314 0003			test	word ptr ds:[314h],3	; (0040:0314=3200h)
0020:2519  75 2F				jnz	loc_199			; Jump if not zero
0020:251B			loc_192:
0020:251B  86 E0				xchg	ah,al
0020:251D  FC					cld				; Clear direction
0020:251E  A8 04				test	al,4
0020:2520  75			data_294	db	75h
0020:2521  25 08A8				and	ax,8A8h
0020:2524  75 11				jnz	loc_196			; Jump if not zero
0020:2526  70 19				jo	loc_197			; Jump if overflow=1
0020:2528			loc_194:
0020:2528  9E					sahf				; Store ah into flags
0020:2529  58					pop	ax
0020:252A  1F					pop	ds
0020:252B  CA 0002				retf	2			; Return far
0020:252E			loc_195:
0020:252E  F0> 81 26 0314 FDFF	           lock	and	word ptr ds:[314h],0FDFFh	; (5001:0314=7FA2h)
0020:2535  EB E4				jmp	short loc_192		; (251B)
0020:2537			loc_196:
0020:2537  70 EF				jo	loc_194			; Jump if overflow=1
0020:2539  50					push	ax
0020:253A  B0 7F				mov	al,7Fh
0020:253C  04 02				add	al,2
0020:253E  58					pop	ax
0020:253F  EB E7				jmp	short loc_194		; (2528)
0020:2541			loc_197:
0020:2541  50					push	ax
0020:2542  32 C0				xor	al,al			; Zero register
0020:2544  58					pop	ax
0020:2545  EB E1				jmp	short loc_194		; (2528)
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 73

0020:2547			loc_198:
0020:2547  FD					std				; Set direction flag
0020:2548  EB D8		;*		jmp	short loc_193		;*(2522)
0020:2548  EB D8				db	0EBh,0D8h
0020:254A			loc_199:
0020:254A  58					pop	ax
0020:254B  1F					pop	ds
0020:254C  CF					iret				; Interrupt return
				sub_30		endp
  
0020:254D  EB 9D				jmp	short loc_191		; (24EC)
0020:254F  C4					db	0C4h
0020:2550  C4 72 EB				les	si,dword ptr [bp+si-15h]	; Load 32 bit ptr
0020:2553  98					cbw				; Convrt byte to word
0020:2554  C4					db	0C4h
0020:2555  C4 72 EB				les	si,dword ptr [bp+si-15h]	; Load 32 bit ptr
0020:2558  93					xchg	ax,bx
0020:2559  E8 011D				call	sub_43			; (2679)
0020:255C  50					push	ax
0020:255D  53					push	bx
0020:255E  51					push	cx
0020:255F  52					push	dx
0020:2560  1E					push	ds
0020:2561  B8 0040				mov	ax,40h
0020:2564  8E D8				mov	ds,ax
0020:2566  80 3E 0100 01			cmp	byte ptr ds:[100h],1	; (0040:0100=0)
0020:256B  74 5A				je	loc_205			; Jump if equal
0020:256D  C6 06 0100 01			mov	byte ptr ds:[100h],1	; (0040:0100=0)
0020:2572  8A 2E 004A				mov	ch,byte ptr ds:[4Ah]	; (0040:004A=50h)
0020:2576  8A 0E 0084				mov	cl,byte ptr ds:[84h]	; (0040:0084=18h)
0020:257A  8A 3E 0062				mov	bh,byte ptr ds:[62h]	; (0040:0062=0)
0020:257E  E8 004E				call	sub_35			; (25CF)
0020:2581  51					push	cx
0020:2582  B4 03				mov	ah,3
0020:2584  CD 10				int	10h			; Video display   ah=functn 03h
										;  get cursor loc in dx, mode cx
0020:2586  59					pop	cx
0020:2587  52					push	dx
0020:2588  32 F6				xor	dh,dh			; Zero register
0020:258A			loc_200:
0020:258A  32 D2				xor	dl,dl			; Zero register
0020:258C			loc_201:
0020:258C  52					push	dx
0020:258D  B4 02				mov	ah,2
0020:258F  CD 10				int	10h			; Video display   ah=functn 02h
										;  set cursor location in dx
0020:2591  B4 08				mov	ah,8
0020:2593  CD 10				int	10h			; Video display   ah=functn 08h
										;  get char al & attrib ah @curs
0020:2595  0A C0				or	al,al			; Zero ?
0020:2597  75 02				jnz	loc_202			; Jump if not zero
0020:2599  B0 20				mov	al,20h			; ' '
0020:259B			loc_202:
0020:259B  33 D2				xor	dx,dx			; Zero register
0020:259D  32 E4				xor	ah,ah			; Zero register
0020:259F  CD 17				int	17h			; Printer  dx=prn1, ah=func 00h
										;  print char in al
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 74

0020:25A1  5A					pop	dx
0020:25A2  80 E4 25				and	ah,25h			; '%'
0020:25A5  74 07				jz	loc_203			; Jump if zero
0020:25A7  C6 06 0100 FF			mov	byte ptr ds:[100h],0FFh	; (0040:0100=0)
0020:25AC  EB 14				jmp	short loc_204		; (25C2)
0020:25AE			loc_203:
0020:25AE  FE C2				inc	dl
0020:25B0  3A D5				cmp	dl,ch
0020:25B2  72 D8				jb	loc_201			; Jump if below
0020:25B4  E8 0018				call	sub_35			; (25CF)
0020:25B7  FE C6				inc	dh
0020:25B9  3A F1				cmp	dh,cl
0020:25BB  76 CD				jbe	loc_200			; Jump if below or =
0020:25BD  C6 06 0100 00			mov	byte ptr ds:[100h],0	; (0040:0100=0)
0020:25C2			loc_204:
0020:25C2  5A					pop	dx
0020:25C3  B4 02				mov	ah,2
0020:25C5  CD 10				int	10h			; Video display   ah=functn 02h
										;  set cursor location in dx
0020:25C7			loc_205:
0020:25C7  1F					pop	ds
0020:25C8  5A					pop	dx
0020:25C9  59					pop	cx
0020:25CA  5B					pop	bx
0020:25CB  58					pop	ax
0020:25CC  E9 FF1D				jmp	loc_191			; (24EC)
  
				;ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
				;			       SUBROUTINE
				;‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
  
				sub_35		proc	near
0020:25CF  52					push	dx
0020:25D0  33 D2				xor	dx,dx			; Zero register
0020:25D2  B8 000D				mov	ax,0Dh
0020:25D5  CD 17				int	17h			; Printer  dx=prn1, ah=func 00h
										;  print char in al
0020:25D7  33 D2				xor	dx,dx			; Zero register
0020:25D9  B8 000A				mov	ax,0Ah
0020:25DC  CD 17				int	17h			; Printer  dx=prn1, ah=func 00h
										;  print char in al
0020:25DE  5A					pop	dx
0020:25DF  C3					retn
				sub_35		endp
  
0020:25E0  C4					db	0C4h
0020:25E1  C4 06 06E9				les	ax,data_178		; (0020:06E9=1F58h) Load 32 bit ptr
0020:25E5  FF					db	0FFh
0020:25E6  E8 0070				call	sub_42			; (2659)
0020:25E9  06					push	es
0020:25EA  1E					push	ds
0020:25EB  50					push	ax
0020:25EC  52					push	dx
0020:25ED  B8 0040				mov	ax,40h
0020:25F0  8E D8				mov	ds,ax
0020:25F2  33 C0				xor	ax,ax			; Zero register
0020:25F4  8E C0				mov	es,ax
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 75

0020:25F6  FF 06 006C				inc	word ptr ds:[6Ch]	; (0040:006C=0AAEFh)
0020:25FA  75 04				jnz	loc_206			; Jump if not zero
0020:25FC  FF 06 006E				inc	word ptr ds:[6Eh]	; (0040:006E=17h)
0020:2600			loc_206:
0020:2600  83			data_295	db	83h			; Data table (indexed access)
0020:2601  3E					db	3Eh
0020:2602  6E					db	6Eh
0020:2603  00 18				add	[bx+si],bl
0020:2605  75 15				jnz	loc_207			; Jump if not zero
0020:2607  81 3E 006C 00B0			cmp	word ptr ds:[6Ch],0B0h	; (0040:006C=0AAEFh)
0020:260D  75 0D				jne	loc_207			; Jump if not equal
0020:260F  A3 006E				mov	word ptr ds:[6Eh],ax	; (0040:006E=17h)
0020:2612  A3 006C				mov	word ptr ds:[6Ch],ax	; (0040:006C=0AAEFh)
  
				;ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
				;			       SUBROUTINE
				;‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
  
				sub_38		proc	near
0020:2615  C6 06 0070 01			mov	byte ptr ds:[70h],1	; (0C06:0070=43h)
0020:261A  0C 08				or	al,8
0020:261C			loc_207:
0020:261C  50					push	ax
0020:261D  FE 0E 0040				dec	byte ptr ds:[40h]	; (0C06:0040=0B4h)
0020:2621  75 0B				jnz	loc_208			; Jump if not zero
						assume	ds:0C06h                        ;*
0020:2623  80 26 003F F0			and	byte ptr data_920+3,0F0h	; (0C06:003F=52h)
0020:2628  B0 0C				mov	al,0Ch
  
				;ﬂﬂﬂﬂ External Entry into Subroutine ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
  
				sub_39:
0020:262A  BA 03F2				mov	dx,3F2h
0020:262D  EE					out	dx,al			; port 3F2h, dsk0 contrl output
0020:262E			loc_208:
0020:262E  58					pop	ax
0020:262F  F7 06 0314 0004			test	word ptr ds:[314h],4	; (0C06:0314=800Ah)
0020:2635  75 0C				jnz	loc_209			; Jump if not zero
0020:2637  9F					lahf				; Load ah from flags
  
				;ﬂﬂﬂﬂ External Entry into Subroutine ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
  
				sub_40:
0020:2638  86			data_297	db	86h
0020:2639  E0 50				loopnz	$+52h			; Loop if zf=0, cx>0
  
  
				;ﬂﬂﬂﬂ External Entry into Subroutine ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
  
				sub_41:
0020:263B  26			data_299	db	26h
0020:263C  FF 1E 0070				call	dword ptr ds:[70h]	; (0C06:0070=2243h)
0020:2640  EB 03				jmp	short loc_210		; (2645)
0020:2642  90			data_304	db	90h
0020:2643			loc_209:
0020:2643  CD 1C				int	1Ch			; Timer break (call each 18.2ms)
0020:2645			loc_210:
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 76

0020:2645  E8 0011				call	sub_42			; (2659)
0020:2648  B0 20				mov	al,20h			; ' '
0020:264A  E6 20				out	20h,al			; port 20h, 8259-1 int command
										;  al = 20h, end of interrupt
0020:264C  5A					pop	dx
0020:264D  58					pop	ax
0020:264E  1F					pop	ds
0020:264F  07					pop	es
0020:2650  E9 FE99				jmp	loc_191			; (24EC)
				sub_38		endp
  
0020:2653  C4					db	0C4h
0020:2654  C4 0E 93E9				les	cx,dword ptr ds:[93E9h]	; (0020:93E9=75C0h) Load 32 bit ptr
0020:2658  FE					db	0FEh
  
				;ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
				;			       SUBROUTINE
				;‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
  
				sub_42		proc	near
0020:2659  1E					push	ds
0020:265A  50					push	ax
0020:265B  B8 0040				mov	ax,40h
0020:265E  8E D8				mov	ds,ax
0020:2660  9F					lahf				; Load ah from flags
0020:2661  F7 06 0314 2400			test	word ptr ds:[314h],2400h	; (0040:0314=3200h)
0020:2667  75 0C				jnz	loc_212			; Jump if not zero
0020:2669  F0> 81 26 0314 FDFF	           lock	and	word ptr ds:[314h],0FDFFh	; (0040:0314=3200h)
0020:2670			loc_211:
0020:2670  9E					sahf				; Store ah into flags
0020:2671  58					pop	ax
0020:2672  1F					pop	ds
0020:2673  EB 03				jmp	short loc_213		; (2678)
0020:2675			loc_212:
0020:2675  FA					cli				; Disable interrupts
0020:2676  EB F8				jmp	short loc_211		; (2670)
0020:2678			loc_213:
0020:2678  C3					retn
				sub_42		endp
  
  
				;ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
				;			       SUBROUTINE
				;‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
  
				sub_43		proc	near
0020:2679  1E					push	ds
0020:267A  50					push	ax
0020:267B  B8 0040				mov	ax,40h
0020:267E  8E D8				mov	ds,ax
0020:2680  9F					lahf				; Load ah from flags
0020:2681  F7 06 0314 0003			test	word ptr ds:[314h],3	; (0040:0314=3200h)
0020:2687  75 14				jnz	loc_215			; Jump if not zero
0020:2689  F7 06 0314 2400			test	word ptr ds:[314h],2400h	; (0040:0314=3200h)
0020:268F  75 0C				jnz	loc_215			; Jump if not zero
0020:2691  F0> 81 0E 0314 0200	           lock	or	word ptr ds:[314h],200h	; (0040:0314=3200h)
0020:2698			loc_214:
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 77

0020:2698  9E					sahf				; Store ah into flags
0020:2699  58					pop	ax
0020:269A  1F					pop	ds
0020:269B  EB 03				jmp	short loc_216		; (26A0)
0020:269D			loc_215:
0020:269D  FB					sti				; Enable interrupts
0020:269E  EB F8				jmp	short loc_214		; (2698)
0020:26A0			loc_216:
0020:26A0  C3					retn
				sub_43		endp
  
0020:26A1  00 00				add	[bx+si],al
0020:26A3  00 00				add	[bx+si],al
						assume	ds:seg_a
0020:26A5  00 2E 06FF				add	data_179,ch		; (0020:06FF=0FBh)
0020:26A9  04 08				add	al,8
0020:26AB  3D 13FF				cmp	ax,13FFh
0020:26AE  75 5B				jne	loc_219			; Jump if not equal
0020:26B0  83 F9 01				cmp	cx,1
0020:26B3  74 40				je	loc_217			; Jump if equal
0020:26B5  56					push	si
0020:26B6  BE 00A4				mov	si,0A4h
0020:26B9  2E: 2B 36 0802			sub	si,cs:data_188		; (0020:0802=3CBh)
0020:26BE  3B CE				cmp	cx,si
0020:26C0  73 3E				jae	loc_218			; Jump if above or =
0020:26C2  57					push	di
0020:26C3  51					push	cx
0020:26C4  52					push	dx
0020:26C5  1E					push	ds
0020:26C6  06					push	es
0020:26C7  8C C2				mov	dx,es
0020:26C9  8E DA				mov	ds,dx
0020:26CB  BA B000				mov	dx,0B000h
0020:26CE  8E C2				mov	es,dx
0020:26D0  8B D1				mov	dx,cx
0020:26D2  8B F7				mov	si,di
0020:26D4  2E: 8B 3E 0802			mov	di,cs:data_188		; (0020:0802=3CBh)
0020:26D9  FC					cld				; Clear direction
0020:26DA  D1 E9				shr	cx,1			; Shift w/zeros fill
0020:26DC  F3/ A5				rep	movsw			; Rep when cx >0 Mov [si] to es:[di]
0020:26DE  80 D1 00				adc	cl,0
0020:26E1  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
0020:26E3  2E: 01 16 0802			add	cs:data_188,dx		; (0020:0802=3CBh)
0020:26E8  07					pop	es
0020:26E9  1F					pop	ds
0020:26EA  5A					pop	dx
0020:26EB  59					pop	cx
0020:26EC  5F					pop	di
0020:26ED  5E					pop	si
0020:26EE  F9					stc				; Set carry flag
0020:26EF  2E: FF 0E 0804			dec	cs:data_189		; (0020:0804=0)
0020:26F4  C3					retn
0020:26F5			loc_217:
0020:26F5  50					push	ax
0020:26F6  B4 0E				mov	ah,0Eh
0020:26F8  26: 8A 05				mov	al,es:[di]
0020:26FB  E8 0012				call	sub_45			; (2710)
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 78

0020:26FE  58					pop	ax
0020:26FF  C3					retn
0020:2700			loc_218:
0020:2700  5E					pop	si
0020:2701  2E: FF 0E 0804			dec	cs:data_189		; (0020:0804=0)
0020:2706  C4					db	0C4h
0020:2707  C4 42 F9				les	ax,dword ptr [bp+si-7]	; Load 32 bit ptr
0020:270A  C3					retn
0020:270B			loc_219:
0020:270B  80 FC 0E				cmp	ah,0Eh
0020:270E  75 28				jne	loc_220			; Jump if not equal
  
				;ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
				;			       SUBROUTINE
				;‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
  
				sub_45		proc	near
0020:2710  56					push	si
0020:2711  2E: 8B 36 0802			mov	si,cs:data_188		; (0020:0802=3CBh)
0020:2716  81 FE 00A4				cmp	si,0A4h
0020:271A  73 E4				jae	loc_218			; Jump if above or =
0020:271C  1E					push	ds
0020:271D  BE B000				mov	si,0B000h
0020:2720  8E DE				mov	ds,si
0020:2722  2E: 8B 36 0802			mov	si,cs:data_188		; (0020:0802=3CBh)
0020:2727  88 04				mov	[si],al
0020:2729  46					inc	si
0020:272A  2E: 89 36 0802			mov	cs:data_188,si		; (0020:0802=3CBh)
0020:272F  1F					pop	ds
0020:2730  5E					pop	si
0020:2731  F9					stc				; Set carry flag
0020:2732  2E: FF 0E 0804			dec	cs:data_189		; (0020:0804=0)
0020:2737  C3					retn
				sub_45		endp
  
0020:2738			loc_220:
0020:2738  50					push	ax
0020:2739  B8 13FE				mov	ax,13FEh
0020:273C  C4					db	0C4h
0020:273D  C4 42 58				les	ax,dword ptr [bp+si+58h]	; Load 32 bit ptr
0020:2740  F8					clc				; Clear carry flag
0020:2741  2E: FF 0E 0804			dec	cs:data_189		; (0020:0804=0)
0020:2746  C3					retn
0020:2747  00 00				add	[bx+si],al
0020:2749  2E: 80 3E 08A7 02			cmp	byte ptr cs:[8A7h],2	; (0020:08A7=0)
0020:274F  75 05				jne	loc_221			; Jump if not equal
0020:2751  E8 FF52		;*		call	sub_44			;*(26A6)
0020:2751  E8 52 FF				db	0E8h, 52h,0FFh
0020:2754  72 5F				jc	loc_227			; Jump if carry Set
0020:2756			loc_221:
0020:2756  2E: 80 3E 08A7 01			cmp	byte ptr cs:[8A7h],1	; (0020:08A7=0)
0020:275C  74 5D				je	loc_229			; Jump if equal
0020:275E  80 FC 00				cmp	ah,0
0020:2761  74 30				je	loc_225			; Jump if equal
0020:2763  80 FC 1C				cmp	ah,1Ch
0020:2766  77 0B				ja	loc_222			; Jump if above
0020:2768  80 FC 04				cmp	ah,4
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 79

0020:276B  74 20				je	loc_224			; Jump if equal
0020:276D  C4					db	0C4h
0020:276E  C4 42 EB				les	ax,dword ptr [bp+si-15h]	; Load 32 bit ptr
0020:2771  43					inc	bx
0020:2772  90					nop
0020:2773			loc_222:
0020:2773  80 FC 4F				cmp	ah,4Fh			; 'O'
0020:2776  75 06				jne	loc_223			; Jump if not equal
0020:2778  C4					db	0C4h
0020:2779  C4 BE 73EB				les	di,dword ptr [bp+73EBh]	; Load 32 bit ptr
0020:277D  90					nop
0020:277E			loc_223:
0020:277E  80 FC F0				cmp	ah,0F0h
0020:2781  72 35				jb	loc_228			; Jump if below
0020:2783  80 FC F7				cmp	ah,0F7h
0020:2786  76 05				jbe	loc_224			; Jump if below or =
0020:2788  80 FC FA				cmp	ah,0FAh
0020:278B  75 2B				jne	loc_228			; Jump if not equal
0020:278D			loc_224:
0020:278D  C4					db	0C4h
0020:278E  C4 BE 23EB				les	di,dword ptr [bp+23EBh]	; Load 32 bit ptr
0020:2792  90					nop
0020:2793			loc_225:
0020:2793  2E: C6 06 08A8 01			mov	byte ptr cs:[8A8h],1	; (0020:08A8=0)
0020:2799  C4					db	0C4h
0020:279A  C4 BE 9090				les	di,dword ptr [bp-6F70h]	; Load 32 bit ptr
0020:279E  50					push	ax
0020:279F  25 007F				and	ax,7Fh
0020:27A2  3C 03				cmp	al,3
0020:27A4  76 08				jbe	loc_226			; Jump if below or =
0020:27A6  3C 07				cmp	al,7
0020:27A8  74 04				je	loc_226			; Jump if equal
0020:27AA  58					pop	ax
0020:27AB  EB 0E				jmp	short loc_229		; (27BB)
0020:27AD  90					nop
0020:27AE			loc_226:
0020:27AE  58					pop	ax
0020:27AF  2E: C6 06 08A8 00			mov	byte ptr cs:[8A8h],0	; (0020:08A8=0)
0020:27B5			loc_227:
0020:27B5  E9 FD34				jmp	loc_191			; (24EC)
0020:27B8			loc_228:
0020:27B8  F9					stc				; Set carry flag
0020:27B9  EB FA				jmp	short loc_227		; (27B5)
0020:27BB			loc_229:
0020:27BB  2E: C6 06 08A8 00			mov	byte ptr cs:[8A8h],0	; (0020:08A8=0)
0020:27C1  3D 13FF				cmp	ax,13FFh
0020:27C4  74 2F				je	loc_233			; Jump if equal
0020:27C6  80 FC F0				cmp	ah,0F0h
0020:27C9  72 0D				jb	loc_230			; Jump if below
0020:27CB  80 FC F7				cmp	ah,0F7h
0020:27CE  76 BD				jbe	loc_224			; Jump if below or =
0020:27D0  80 FC FA				cmp	ah,0FAh
0020:27D3  74 B8				je	loc_224			; Jump if equal
0020:27D5  EB 19				jmp	short loc_232		; (27F0)
0020:27D7  90					nop
0020:27D8			loc_230:
0020:27D8  80 FC 04				cmp	ah,4
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 80

0020:27DB  74 B0				je	loc_224			; Jump if equal
0020:27DD  80 FC 00				cmp	ah,0
0020:27E0  75 06				jne	loc_231			; Jump if not equal
0020:27E2  C4					db	0C4h
0020:27E3  C4 BE 09EB				les	di,dword ptr [bp+9EBh]	; Load 32 bit ptr
0020:27E7  90					nop
0020:27E8			loc_231:
0020:27E8  80 FC 11				cmp	ah,11h
0020:27EB  75 03				jne	loc_232			; Jump if not equal
0020:27ED  C4					db	0C4h
0020:27EE  C4 BE 22EA				les	di,dword ptr [bp+22EAh]	; Load 32 bit ptr
0020:27F2  00 00				add	[bx+si],al
0020:27F4  C0					db	0C0h
0020:27F5			loc_233:
0020:27F5  56					push	si
0020:27F6  57					push	di
0020:27F7  55					push	bp
  
0020:27F8			locloop_234:
0020:27F8  BA 0046				mov	dx,46h
0020:27FB  0E52			data_306	dw	0E52h
0020:27FD  BB 096C				mov	bx,96Ch
0020:2800  BB53			data_307	dw	0BB53h			; Data table (indexed access)
0020:2802  07					pop	es
0020:2803  00 B4 260E				add	byte ptr ds:[260Eh][si],dh	; (0020:260E=0Dh)
0020:2807  8A 05				mov	al,[di]
0020:2809  47					inc	di
0020:280A  EB E4		;*		jmp	short loc_232		;*(27F0)
0020:280A  EB E4				db	0EBh,0E4h
0020:280C  E2 EA				loop	locloop_234		; Loop if cx > 0
  
0020:280E  5D					pop	bp
0020:280F  5F					pop	di
0020:2810  5E					pop	si
0020:2811  B8 0001				mov	ax,1
0020:2814			loc_235:
0020:2814  EB 9F				jmp	short loc_227		; (27B5)
0020:2816  2E: 80 3E 08A7 02			cmp	byte ptr cs:[8A7h],2	; (0020:08A7=0)
0020:281C  75 05				jne	loc_236			; Jump if not equal
0020:281E  E8 FE85		;*		call	sub_44			;*(26A6)
0020:281E  E8 85 FE				db	0E8h, 85h,0FEh
0020:2821  72 F1				jc	loc_235			; Jump if carry Set
0020:2823			loc_236:
0020:2823  2E: 80 3E 08A7 01			cmp	byte ptr cs:[8A7h],1	; (0020:08A7=0)
0020:2829  74 06				je	loc_237			; Jump if equal
0020:282B  C4					db	0C4h
0020:282C  C4 10				les	dx,dword ptr [bx+si]	; Load 32 bit ptr
0020:282E  E9 FCBB				jmp	loc_191			; (24EC)
0020:2831			loc_237:
0020:2831  80 FC 13				cmp	ah,13h
0020:2834  75 04				jne	loc_238			; Jump if not equal
0020:2836  3C FF				cmp	al,0FFh
0020:2838  74 BB				je	loc_233			; Jump if equal
0020:283A			loc_238:
0020:283A  EA F000:FF53		;*		jmp	far ptr loc_2646	;*(F000:FF53)
0020:283A  EA 53 FF 00 F0			db	0EAh, 53h,0FFh, 00h,0F0h
0020:283F  CD 10				int	10h			; Video display   ah=functn 00h
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 81

										;  set display mode in al
0020:2841  C4					db	0C4h
0020:2842  C4					db	0C4h
0020:2843  FE C4				inc	ah
0020:2845  C4 11				les	dx,dword ptr [bx+di]	; Load 32 bit ptr
0020:2847  E9 FCA2				jmp	loc_191			; (24EC)
0020:284A  C4					db	0C4h
0020:284B  C4 12				les	dx,dword ptr [bp+si]	; Load 32 bit ptr
0020:284D  E9 FC9C				jmp	loc_191			; (24EC)
0020:2850  C4					db	0C4h
0020:2851  C4 14				les	dx,dword ptr [si]	; Load 32 bit ptr
0020:2853  E9 FC96				jmp	loc_191			; (24EC)
0020:2856  87 DB				xchg	bx,bx
0020:2858  00 00				add	[bx+si],al
0020:285A  00 00				add	[bx+si],al
0020:285C  B6 15				mov	dh,15h
0020:285E  00 00				add	[bx+si],al
0020:2860  32 00				xor	al,[bx+si]
0020:2862  00 00				add	[bx+si],al
0020:2864  1E					push	ds
0020:2865  53					push	bx
0020:2866  BB 0040				mov	bx,40h
0020:2869  8E DB				mov	ds,bx
0020:286B  80 FC 10				cmp	ah,10h
0020:286E  E8 FDE8				call	sub_42			; (2659)
0020:2871  72 03				jc	locloop_239		; Jump if carry Set
0020:2873  E9 00E0				jmp	$+0E3h
  
0020:2876			locloop_239:
0020:2876  0A E4				or	ah,ah			; Zero ?
0020:2878  74 3E				jz	loc_244			; Jump if zero
0020:287A  FE CC				dec	ah
0020:287C  74 74				jz	loc_248			; Jump if zero
0020:287E  FE CC				dec	ah
0020:2880  74 11				jz	loc_241			; Jump if zero
0020:2882  FE CC				dec	ah
0020:2884  74 08				jz	loc_240			; Jump if zero
0020:2886  FE CC				dec	ah
0020:2888  74 04				jz	loc_240			; Jump if zero
0020:288A  FE CC				dec	ah
0020:288C  74 0A				jz	loc_242			; Jump if zero
0020:288E			loc_240:
0020:288E  5B					pop	bx
0020:288F  1F					pop	ds
0020:2890  E9 FC59				jmp	loc_191			; (24EC)
0020:2893			loc_241:
0020:2893  A0 0017				mov	al,byte ptr data_76+1	; (0020:0017=0)
0020:2896  EB F6				jmp	short loc_240		; (288E)
0020:2898			loc_242:
0020:2898  56					push	si
0020:2899  8B 1E 001C				mov	bx,data_80		; (0020:001C=0)
0020:289D  8B F3				mov	si,bx
0020:289F  E8 01B9				call	sub_53			; (2A5B)
0020:28A2  3B 1E 001A				cmp	bx,data_79		; (0020:001A=0)
0020:28A6  74 0B				je	loc_243			; Jump if equal
0020:28A8  89 0C				mov	[si],cx
0020:28AA  89 1E 001C				mov	data_80,bx		; (0020:001C=0)
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 82

0020:28AE  B0 00				mov	al,0
0020:28B0  5E					pop	si
0020:28B1  EB DB				jmp	short loc_240		; (288E)
0020:28B3			loc_243:
0020:28B3  B0 01				mov	al,1
0020:28B5  5E					pop	si
0020:28B6  EB D6				jmp	short loc_240		; (288E)
0020:28B8			loc_244:
0020:28B8  8B 1E 001A				mov	bx,data_79		; (0020:001A=0)
0020:28BC  3B 1E 001C				cmp	bx,data_80		; (0020:001C=0)
0020:28C0  75 13				jne	loc_246			; Jump if not equal
0020:28C2  E8 FDB4				call	sub_43			; (2679)
0020:28C5  B8 9002				mov	ax,9002h
0020:28C8  CD 15				int	15h			; General services, ah=func 90h
										;  device busy, al=type
0020:28CA			loc_245:
0020:28CA  E8 FD8C				call	sub_42			; (2659)
0020:28CD  8B 1E 001A				mov	bx,data_79		; (0020:001A=0)
0020:28D1  3B 1E 001C				cmp	bx,data_80		; (0020:001C=0)
0020:28D5			loc_246:
0020:28D5  E8 0190				call	sub_54			; (2A68)
0020:28D8  75 05				jnz	loc_247			; Jump if not zero
0020:28DA  E8 00E3				call	sub_46			; (29C0)
0020:28DD  EB EB				jmp	short loc_245		; (28CA)
0020:28DF			loc_247:
0020:28DF  8B 07				mov	ax,[bx]
0020:28E1  E8 0177				call	sub_53			; (2A5B)
0020:28E4  89 1E 001A				mov	data_79,bx		; (0020:001A=0)
0020:28E8  E8 0129				call	sub_49			; (2A14)
0020:28EB  72 DD				jc	loc_245			; Jump if carry Set
0020:28ED  E8 00FC				call	sub_47			; (29EC)
0020:28F0  EB 9C				jmp	short loc_240		; (288E)
0020:28F2			loc_248:
0020:28F2  8B 1E 001A				mov	bx,word ptr ds:[1Ah]	; (0C06:001A=4175h)
0020:28F6  3B 1E 001C				cmp	bx,word ptr ds:[1Ch]	; (0C06:001C=8E06h)
0020:28FA  8B 07				mov	ax,[bx]
0020:28FC  E8 0169				call	sub_54			; (2A68)
0020:28FF  74 2F				jz	loc_250			; Jump if zero
0020:2901  E8 00E8				call	sub_47			; (29EC)
0020:2904  E8 010D				call	sub_49			; (2A14)
0020:2907  E8 FD6F				call	sub_43			; (2679)
0020:290A  73 45				jnc	loc_252			; Jump if carry=0
0020:290C  E8 014C				call	sub_53			; (2A5B)
0020:290F  89 1E 001A				mov	word ptr ds:[1Ah],bx	; (0C06:001A=4175h)
0020:2913  EB DD				jmp	short loc_248		; (28F2)
0020:2915			loc_249:
0020:2915  8B 1E 001A				mov	bx,word ptr ds:[1Ah]	; (0C06:001A=4175h)
0020:2919  3B 1E 001C				cmp	bx,word ptr ds:[1Ch]	; (0C06:001C=8E06h)
0020:291D  8B 07				mov	ax,[bx]
0020:291F  E8 0146				call	sub_54			; (2A68)
0020:2922  74 0C				jz	loc_250			; Jump if zero
0020:2924  E8 00C5				call	sub_47			; (29EC)
0020:2927  E8 00D1				call	sub_48			; (29FB)
0020:292A  E8 FD4C				call	sub_43			; (2679)
0020:292D  EB 22				jmp	short loc_252		; (2951)
0020:292F  90					nop
0020:2930			loc_250:
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 83

0020:2930  E8 FD46				call	sub_43			; (2679)
0020:2933  50					push	ax
0020:2934  9F					lahf				; Load ah from flags
0020:2935  50					push	ax
0020:2936  2E: A1 09B8				mov	ax,word ptr cs:[9B8h]	; (0020:09B8=2)
0020:293A  2E: 3B 06 09C0			cmp	ax,cs:data_204		; (0020:09C0=0)
0020:293F  72 08				jb	loc_251			; Jump if below
0020:2941  B4 01				mov	ah,1
0020:2943  C4					db	0C4h
0020:2944  C4 16 06EB				les	dx,dword ptr ds:[6EBh]	; (0C06:06EB=8090h) Load 32 bit ptr
0020:2948  90					nop
0020:2949			loc_251:
0020:2949  2E: FF 06 09BC			inc	word ptr cs:[9BCh]	; (0020:09BC=2)
0020:294E  58					pop	ax
0020:294F  9E					sahf				; Store ah into flags
0020:2950  58					pop	ax
0020:2951			loc_252:
0020:2951  5B					pop	bx
0020:2952  1F					pop	ds
0020:2953  CA 0002				retf	2
0020:2956  80 EC 10				sub	ah,10h
0020:2959  74 2C				jz	loc_254			; Jump if zero
0020:295B  FE CC				dec	ah
0020:295D  74 B6				jz	loc_249			; Jump if zero
0020:295F  FE CC				dec	ah
0020:2961  74 03				jz	loc_253			; Jump if zero
0020:2963  E9 FF28				jmp	loc_240			; (288E)
0020:2966			loc_253:
0020:2966  A0 0018				mov	al,byte ptr data_76+2	; (0020:0018=0)
0020:2969  8A E0				mov	ah,al
0020:296B  24 04				and	al,4
0020:296D  51					push	cx
0020:296E  B1 05				mov	cl,5
0020:2970  D2 E0				shl	al,cl			; Shift w/zeros fill
0020:2972  59					pop	cx
0020:2973  80 E4 73				and	ah,73h			; 's'
0020:2976  0A C4				or	al,ah
0020:2978  8A 26 0096				mov	ah,data_101		; (0020:0096=0)
0020:297C  80 E4 FC				and	ah,0FCh
0020:297F  0A E0				or	ah,al
0020:2981  A0 0017				mov	al,byte ptr data_76+1	; (0020:0017=0)
0020:2984  E9 FF07				jmp	loc_240			; (288E)
0020:2987			loc_254:
0020:2987  8B 1E 001A				mov	bx,data_79		; (0020:001A=0)
0020:298B  3B 1E 001C				cmp	bx,data_80		; (0020:001C=0)
0020:298F  75 13				jne	loc_256			; Jump if not equal
0020:2991  E8 FCE5				call	sub_43			; (2679)
0020:2994  B8 9002				mov	ax,9002h
0020:2997  CD 15				int	15h			; General services, ah=func 90h
										;  device busy, al=type
0020:2999			loc_255:
0020:2999  E8 FCBD				call	sub_42			; (2659)
0020:299C  8B 1E 001A				mov	bx,data_79		; (0020:001A=0)
0020:29A0  3B 1E 001C				cmp	bx,data_80		; (0020:001C=0)
0020:29A4			loc_256:
0020:29A4  E8 00C1				call	sub_54			; (2A68)
0020:29A7  75 05				jnz	loc_257			; Jump if not zero
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 84

0020:29A9  E8 0014				call	sub_46			; (29C0)
0020:29AC  EB EB				jmp	short loc_255		; (2999)
0020:29AE			loc_257:
0020:29AE  8B 07				mov	ax,[bx]
0020:29B0  E8 00A8				call	sub_53			; (2A5B)
0020:29B3  89 1E 001A				mov	data_79,bx		; (0020:001A=0)
0020:29B7  E8 0041				call	sub_48			; (29FB)
0020:29BA  E8 002F				call	sub_47			; (29EC)
0020:29BD  E9 FECE				jmp	loc_240			; (288E)
  
				;ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
				;			       SUBROUTINE
				;‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
  
				sub_46		proc	near
0020:29C0  50					push	ax
0020:29C1  E8 FCB5				call	sub_43			; (2679)
0020:29C4  B4 02				mov	ah,2
0020:29C6  C4					db	0C4h
0020:29C7  C4 16 1E8B				les	dx,dword ptr ds:[1E8Bh]	; (0020:1E8B=21CDh) Load 32 bit ptr
0020:29CB  1A 00				sbb	al,[bx+si]
0020:29CD  3B 1E 001C				cmp	bx,data_80		; (0020:001C=0)
0020:29D1  75 17				jne	loc_260			; Jump if not equal
0020:29D3  2E: A1 09B8				mov	ax,word ptr cs:[9B8h]	; (0020:09B8=2)
0020:29D7  2E: 3B 06 09C0			cmp	ax,cs:data_204		; (0020:09C0=0)
0020:29DC  73 07				jae	loc_259			; Jump if above or =
0020:29DE  2E: FF 06 09BC			inc	word ptr cs:[9BCh]	; (0020:09BC=2)
0020:29E3  EB E4		;*		jmp	short loc_258		;*(29C9)
0020:29E3  EB E4				db	0EBh,0E4h
0020:29E5			loc_259:
0020:29E5  B4 01				mov	ah,1
0020:29E7  C4					db	0C4h
0020:29E8  C4 16 C358				les	dx,dword ptr ds:[0C358h]	; (0020:C358=0C5E8h) Load 32 bit ptr
  
				;ﬂﬂﬂﬂ External Entry into Subroutine ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
  
				sub_47:
0020:29EC  2E: C7 06 09B8 0000			mov	word ptr cs:[9B8h],0	; (0020:09B8=2)
0020:29F3  2E: C7 06 09BC 0000			mov	word ptr cs:[9BCh],0	; (0020:09BC=2)
0020:29FA  C3					retn
				sub_46		endp
  
  
				;ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
				;			       SUBROUTINE
				;‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
  
				sub_48		proc	near
0020:29FB  53					push	bx
0020:29FC  50					push	ax
0020:29FD  9F					lahf				; Load ah from flags
0020:29FE  8B D8				mov	bx,ax
0020:2A00  58			data_308	db	58h			; Data table (indexed access)
0020:2A01  53					push	bx
0020:2A02  3C F0				cmp	al,0F0h
0020:2A04  75 06				jne	loc_262			; Jump if not equal
  
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 85

				;ƒƒƒƒƒ Indexed Entry Point ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ
  
0020:2A06			loc_261:
0020:2A06  0A E4				or	ah,ah			; Zero ?
0020:2A08  74 02				jz	loc_262			; Jump if zero
0020:2A0A  32 C0				xor	al,al			; Zero register
0020:2A0C			loc_262:
0020:2A0C  8B D8				mov	bx,ax
0020:2A0E  58					pop	ax
0020:2A0F  9E					sahf				; Store ah into flags
0020:2A10  8B C3				mov	ax,bx
0020:2A12  5B					pop	bx
0020:2A13  C3					retn
				sub_48		endp
  
  
				;ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
				;			       SUBROUTINE
				;‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
  
				sub_49		proc	near
0020:2A14  53					push	bx
0020:2A15  50					push	ax
0020:2A16  8B9F			data_309	dw	8B9Fh
0020:2A18  D8 58 53				esc	0,[bx+si+53h]		; coprocessor escape
0020:2A1B  80 FC E0				cmp	ah,0E0h
0020:2A1E  75			data_312	db	75h
0020:2A1F  0F			data_313	db	0Fh
  
				;ﬂﬂﬂﬂ External Entry into Subroutine ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
  
				sub_50:
0020:2A20  B4 1C				mov	ah,1Ch
0020:2A22  0D3C			data_314	dw	0D3Ch
0020:2A24  2374			data_315	dw	2374h
0020:2A26  3C			data_316	db	3Ch
  
				;ﬂﬂﬂﬂ External Entry into Subroutine ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
  
				sub_51:
0020:2A27  0A 74 1F				or	dh,[si+1Fh]
0020:2A2A  B4 35				mov	ah,35h			; '5'
0020:2A2C  EB 1B				jmp	short loc_265		; (2A49)
0020:2A2E  90					nop
0020:2A2F			loc_263:
0020:2A2F  80 FC 84				cmp	ah,84h
0020:2A32  77 1E				ja	loc_266			; Jump if above
0020:2A34  3C F0				cmp	al,0F0h
0020:2A36  75 07				jne	loc_264			; Jump if not equal
0020:2A38  0A E4				or	ah,ah			; Zero ?
0020:2A3A  74 0D				jz	loc_265			; Jump if zero
0020:2A3C  14EB			data_322	dw	14EBh
0020:2A3E  3C90			data_323	dw	3C90h
0020:2A40  75E0			data_324	dw	75E0h
0020:2A42  0A06			data_325	dw	0A06h
0020:2A44  74E4			data_326	dw	74E4h
0020:2A46  02 32				add	dh,[bp+si]
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 86

0020:2A48  C0					db	0C0h
0020:2A49			loc_265:
0020:2A49  8B D8				mov	bx,ax
0020:2A4B  58					pop	ax
0020:2A4C  8B9E			data_328	dw	8B9Eh
0020:2A4E  C3					retn
0020:2A4F  5B					pop	bx
0020:2A50  F8					clc				; Clear carry flag
0020:2A51  C3					retn
0020:2A52			loc_266:
0020:2A52  8B D8				mov	bx,ax
0020:2A54  58					pop	ax
0020:2A55  9E					sahf				; Store ah into flags
0020:2A56  8B C3				mov	ax,bx
0020:2A58  5B					pop	bx
0020:2A59  F9					stc				; Set carry flag
0020:2A5A  C3					retn
				sub_49		endp
  
  
				;ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
				;			       SUBROUTINE
				;‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
  
				sub_53		proc	near
0020:2A5B  43					inc	bx
0020:2A5C  43			data_329	db	43h
0020:2A5D  3B 1E 0082				cmp	bx,word ptr ds:[82h]	; (0020:0082=0)
0020:2A61  75 04				jne	loc_267			; Jump if not equal
0020:2A63  1E8B			data_331	dw	1E8Bh
0020:2A65  0080			data_332	dw	80h
0020:2A67			loc_267:
0020:2A67  53C3			data_333	dw	53C3h
0020:2A69  5051			data_334	dw	5051h
0020:2A6B  509F			data_335	dw	509Fh
0020:2A6D  17A0			data_336	dw	17A0h
0020:2A6F  00 24				add	[si],ah
0020:2A71  70 B1				jo	$-4Dh			; Jump if overflow=1
0020:2A73  04 D2				add	al,0D2h
0020:2A75  E8			data_337	db	0E8h
0020:2A76  24			data_338	db	24h
0020:2A77  07			data_339	db	7
0020:2A78  8A			data_340	db	8Ah
0020:2A79  1E			data_341	db	1Eh
0020:2A7A  97			data_342	db	97h
0020:2A7B  00 32				add	[bp+si],dh
0020:2A7D  D8			data_344	db	0D8h
0020:2A7E  80			data_345	db	80h
0020:2A7F  E3			data_346	db	0E3h
0020:2A80  07					pop	es
0020:2A81  74 25				jz	loc_268			; Jump if zero
0020:2A83  F6 06 0097 40			test	byte ptr ds:[97h],40h	; (0020:0097=0) '@'
0020:2A88  75 1E				jnz	loc_268			; Jump if not zero
0020:2A8A  80 0E 0097 40			or	byte ptr ds:[97h],40h	; (0020:0097=0) '@'
0020:2A8F  E3D2			data_349	dw	0E3D2h
0020:2A91  0A C3				or	al,bl
0020:2A93  B4			data_350	db	0B4h
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 87

0020:2A94  03			data_351	db	3
0020:2A95  C4					db	0C4h
0020:2A96  C4 16 2680				les	dx,dword ptr ds:[2680h]	; (0020:2680=0F79Fh) Load 32 bit ptr
0020:2A9A  97					xchg	ax,di
0020:2A9B  00 F8				add	al,bh
0020:2A9D  24 0F				and	al,0Fh
0020:2A9F  08 06 0097				or	byte ptr ds:[97h],al	; (0020:0097=0)
0020:2AA3  80 26 0097 BF			and	byte ptr ds:[97h],0BFh	; (0020:0097=0)
0020:2AA8			loc_268:
0020:2AA8  58					pop	ax
0020:2AA9  9E					sahf				; Store ah into flags
0020:2AAA  58					pop	ax
0020:2AAB  59					pop	cx
0020:2AAC  5B					pop	bx
0020:2AAD  C3					retn
				sub_53		endp
  
0020:2AAE  C4					db	0C4h
0020:2AAF  C4 18				les	bx,dword ptr [bx+si]	; Load 32 bit ptr
0020:2AB1  E9 FA38				jmp	loc_191			; (24EC)
0020:2AB4  C4					db	0C4h
0020:2AB5  C4 19				les	bx,dword ptr [bx+di]	; Load 32 bit ptr
0020:2AB7  E9 FA32				jmp	loc_191			; (24EC)
0020:2ABA  EE					out	dx,al			; port 0, DMA-1 bas&add ch 0
0020:2ABB  AA					stosb				; Store al to es:[di]
0020:2ABC  17					pop	ss
0020:2ABD  00 00				add	[bx+si],al
0020:2ABF  E8 FBB7				call	sub_43			; (2679)
0020:2AC2  80 FC 02				cmp	ah,2
0020:2AC5  72 06				jb	loc_269			; Jump if below
0020:2AC7  C4					db	0C4h
0020:2AC8  C4 1A				les	bx,dword ptr [bp+si]	; Load 32 bit ptr
0020:2ACA  E9 FA1F				jmp	loc_191			; (24EC)
0020:2ACD			loc_269:
0020:2ACD  1E					push	ds
0020:2ACE  53					push	bx
0020:2ACF  50					push	ax
0020:2AD0  B8 0040				mov	ax,40h
0020:2AD3  8E D8				mov	ds,ax
0020:2AD5  58					pop	ax
0020:2AD6  E8 FB80				call	sub_42			; (2659)
0020:2AD9  0A E4				or	ah,ah			; Zero ?
0020:2ADB  75 3F				jnz	loc_272			; Jump if not zero
0020:2ADD			loc_270:
0020:2ADD  A0 0070				mov	al,byte ptr ds:[70h]	; (0040:0070=0)
0020:2AE0  8B 0E 006E				mov	cx,word ptr ds:[6Eh]	; (0040:006E=17h)
0020:2AE4  8B 16 006C				mov	dx,word ptr ds:[6Ch]	; (0040:006C=0AAEFh)
0020:2AE8  2E: 39 0E 0C1C			cmp	cs:data_218,cx		; (0020:0C1C=0)
0020:2AED  75 35				jne	loc_273			; Jump if not equal
0020:2AEF  2E: 8B 1E 0C1A			mov	bx,cs:data_217		; (0020:0C1A=0)
0020:2AF4  3B DA				cmp	bx,dx
0020:2AF6  74 05				je	loc_271			; Jump if equal
0020:2AF8  43					inc	bx
0020:2AF9  3B DA				cmp	bx,dx
0020:2AFB  75 27				jne	loc_273			; Jump if not equal
0020:2AFD			loc_271:
0020:2AFD  2E: FE 06 0C1E			inc	cs:data_219		; (0020:0C1E=0)
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 88

0020:2B02  2E: 80 3E 0C1E 10			cmp	cs:data_219,10h		; (0020:0C1E=0)
0020:2B08  72 20				jb	loc_274			; Jump if below
0020:2B0A  E8 FB6C				call	sub_43			; (2679)
0020:2B0D  33 C0				xor	ax,ax			; Zero register
0020:2B0F  2E: FF 0E 0C1A			dec	cs:data_217		; (0020:0C1A=0)
0020:2B14  C4					db	0C4h
0020:2B15  C4 5A E8				les	bx,dword ptr [bp+si-18h]	; Load 32 bit ptr
0020:2B18  3F					aas				; Ascii adjust
0020:2B19  FB					sti				; Enable interrupts
0020:2B1A  EB C1				jmp	short loc_270		; (2ADD)
0020:2B1C			loc_272:
0020:2B1C  89 16 006C				mov	word ptr ds:[6Ch],dx	; (0040:006C=0AAEFh)
0020:2B20  89 0E 006E				mov	word ptr ds:[6Eh],cx	; (0040:006E=17h)
0020:2B24			loc_273:
0020:2B24  2E: C6 06 0C1E 00			mov	cs:data_219,0		; (0020:0C1E=0)
0020:2B2A			loc_274:
0020:2B2A  2E: 89 16 0C1A			mov	cs:data_217,dx		; (0020:0C1A=0)
0020:2B2F  2E: 89 0E 0C1C			mov	cs:data_218,cx		; (0020:0C1C=0)
0020:2B34  C6 06 0070 00			mov	byte ptr ds:[70h],0	; (0040:0070=0)
0020:2B39  5B					pop	bx
0020:2B3A  1F					pop	ds
0020:2B3B  E9 F9AE				jmp	loc_191			; (24EC)
0020:2B3E  C4					db	0C4h
0020:2B3F  C4 1E A8E9				les	bx,data_657		; (0020:A8E9=0B945h) Load 32 bit ptr
0020:2B43  F9					stc				; Set carry flag
0020:2B44  C4					db	0C4h
0020:2B45  C4 70 E9				les	si,dword ptr [bx+si-17h]	; Load 32 bit ptr
0020:2B48  A2 E8F9				mov	data_689,al		; (0020:E8F9=2Ah)
0020:2B4B  2C FB				sub	al,0FBh
0020:2B4D  CD 4A				int	4Ah			; RTC Alarm occurred
0020:2B4F  EB 01				jmp	short $+3		; delay for I/O
0020:2B51  90					nop
0020:2B52  EB 01				jmp	short $+3		; delay for I/O
0020:2B54  90					nop
0020:2B55  EB 01				jmp	short $+3		; delay for I/O
0020:2B57  90					nop
0020:2B58  E8 FAFE				call	sub_42			; (2659)
0020:2B5B  C4					db	0C4h
0020:2B5C  C4					db	0C4h
0020:2B5D  FE C4				inc	ah
0020:2B5F  C4 71 CD				les	si,dword ptr [bx+di-33h]	; Load 32 bit ptr
0020:2B62  0A E9				or	ch,cl
0020:2B64  86 F9				xchg	bh,cl
0020:2B66  C4					db	0C4h
0020:2B67			loc_275:
0020:2B67  C4 75 CD				les	si,dword ptr [di-33h]	; Load 32 bit ptr
0020:2B6A  02 E9				add	ch,cl
0020:2B6C  7E F9				jle	loc_275			; Jump if < or =
0020:2B6E  E8 FB08				call	sub_43			; (2679)
0020:2B71  EB 00				jmp	short $+2		; delay for I/O
0020:2B73  EB 00				jmp	short $+2		; delay for I/O
0020:2B75  EB 00				jmp	short $+2		; delay for I/O
0020:2B77  C4					db	0C4h
0020:2B78  C4					db	0C4h
0020:2B79  FE					db	0FEh
0020:2B7A  74 29				jz	loc_276			; Jump if zero
0020:2B7C  2E: 89 36 44FC			mov	cs:data_554,si		; (0020:44FC=5026h)
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 89

0020:2B81  D9 02				esc	1,[bp+si]		; coprocessor escape
0020:2B83  4E					dec	si
0020:2B84  00 13				add	[bp+di],dl
0020:2B86  2E: 8B 48 49				mov	cx,cs:[bx+si+49h]
0020:2B8A  4D					dec	bp
0020:2B8B  45					inc	bp
0020:2B8C  4D					dec	bp
0020:2B8D  20 20				and	[bx+si],ah
0020:2B8F  20 24				and	[si],ah
0020:2B91  00 70 00				add	[bx+si+0],dh
0020:2B94  00 A0 0041				add	[bx+si+41h],ah
0020:2B98  4C					dec	sp
0020:2B99  00 58 4D				add	[bx+si+4Dh],bl
0020:2B9C  53					push	bx
0020:2B9D  58					pop	ax
0020:2B9E  58					pop	ax
0020:2B9F  58					pop	ax
0020:2BA0  58					pop	ax
0020:2BA1  30 DE				xor	dh,bl
0020:2BA3  04 74				add	al,74h			; 't'
0020:2BA5			loc_276:
0020:2BA5  00 75 04				add	[di+4],dh
0020:2BA8  07					pop	es
0020:2BA9  548E			data_352	dw	548Eh
0020:2BAB  0000			data_353	dw	0
0020:2BAD  00 42 05				add	[bp+si+5],al
0020:2BB0  0A 02				or	al,[bp+si]
0020:2BB2  A4			data_354	db	0A4h
0020:2BB3  10 A7 0100				adc	byte ptr ds:[100h][bx],ah	; (0020:0100=0)
0020:2BB7  01 01				add	[bx+di],ax
0020:2BB9  01 00				add	[bx+si],ax
0020:2BBB  01 00				add	[bx+si],ax
0020:2BBD  01 00				add	[bx+si],ax
0020:2BBF  01 00				add	[bx+si],ax
0020:2BC1  000A[00]				db	10 dup (0)
0020:2BCB  02 01				add	al,[bx+di]
0020:2BCD  00 00				add	[bx+si],al
0020:2BCF  00 00				add	[bx+si],al
0020:2BD1  2E: 89 1E 0016			mov	cs:data_76,bx		; (0020:0016=0)
0020:2BD6  2E: 8C 06 0018			mov	word ptr cs:data_76+2,es	; (0020:0018=0)
0020:2BDB  CB					retf
0020:2BDC  53					push	bx
0020:2BDD  1E					push	ds
0020:2BDE  2E: C5 1E 0016			lds	bx,dword ptr cs:data_76	; (0020:0016=0) Load 32 bit ptr
0020:2BE3  80 7F 02 10				cmp	byte ptr [bx+2],10h
0020:2BE7  C7 47 03 0100			mov	word ptr [bx+3],100h
0020:2BEC  76 05				jbe	loc_277			; Jump if below or =
0020:2BEE  81 4F 03 8003			or	word ptr [bx+3],8003h
0020:2BF3			loc_277:
0020:2BF3  1F			data_356	db	1Fh
0020:2BF4  5B					pop	bx
0020:2BF5  CB			data_357	db	0CBh
0020:2BF6  E8			data_358	db	0E8h
0020:2BF7  DB 03				esc	3,[bp+di]		; coprocessor escape
0020:2BF9  80 FC 43				cmp	ah,43h			; 'C'
0020:2BFC  75 15				jne	loc_279			; Jump if not equal
0020:2BFE  0A C0				or	al,al			; Zero ?
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 90

0020:2C00  75 05				jnz	loc_278			; Jump if not zero
0020:2C02  B0 80				mov	al,80h
0020:2C04  E9 03F5				jmp	loc_331			; (2FFC)
  
				;ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
				;			       SUBROUTINE
				;‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
  
				sub_55		proc	near
0020:2C07			loc_278:
0020:2C07  3C 10				cmp	al,10h
0020:2C09  75 08				jne	loc_279			; Jump if not equal
0020:2C0B  0E					push	cs
0020:2C0C  07					pop	es
0020:2C0D  BB 00AF				mov	bx,0AFh
0020:2C10  E9 03E9				jmp	loc_331			; (2FFC)
0020:2C13			loc_279:
0020:2C13  E8 039E				call	sub_65			; (2FB4)
0020:2C16  2E: FF 2E 0022			jmp	cs:data_83		; (0020:0022=0)
0020:2C1B  12 A0 0265				adc	ah,byte ptr ds:[265h][bx+si]	; (0C06:0265=0E9h)
0020:2C1F  98					cbw				; Convrt byte to word
0020:2C20  02 B2 D402				add	dh,[bp+si-2BFEh]
0020:2C24  02 F6				add	dh,dh
0020:2C26  02 30				add	dh,[bx+si]
0020:2C28  03 99 2B03				add	bx,word ptr ds:[2B03h][bx+di]	; (0C06:2B03=8045h)
0020:2C2C  A0 A03C				mov	al,byte ptr ds:[0A03Ch]	; (0C06:A03C=3Eh)
0020:2C2F  94					xchg	ax,sp
0020:2C30  A0 A264				mov	al,byte ptr ds:[0A264h]	; (0C06:A264=51h)
0020:2C33  CF					iret				; Interrupt return
				sub_55		endp
  
0020:2C34  A0 A0FF				mov	al,data_653		; (0020:A0FF=16h)
0020:2C37  23 A1 A159				and	sp,data_654[bx+di]	; (0020:A159=58C0h)
0020:2C3B  11 A2 A216				adc	[bp+si-5DEAh],sp
0020:2C3F  EB			data_361	db	0EBh
0020:2C40  03			data_362	db	3
0020:2C41  90					nop
0020:2C42  90					nop
0020:2C43  90					nop
0020:2C44			loc_280:
0020:2C44  51					push	cx
0020:2C45  56					push	si
0020:2C46  57					push	di
0020:2C47  1E					push	ds
0020:2C48  06					push	es
0020:2C49  9C					pushf				; Push flags
0020:2C4A  FC					cld				; Clear direction
0020:2C4B  1E					push	ds
0020:2C4C  07					pop	es
0020:2C4D  0E					push	cs
0020:2C4E  1F					pop	ds
0020:2C4F  50					push	ax
0020:2C50  0A E4				or	ah,ah			; Zero ?
0020:2C52  74 31				jz	loc_283			; Jump if zero
0020:2C54  80 FC 12				cmp	ah,12h
0020:2C57  72 07				jb	loc_281			; Jump if below
0020:2C59  58					pop	ax
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 91

0020:2C5A  33 C0				xor	ax,ax			; Zero register
0020:2C5C  B3 80				mov	bl,80h
0020:2C5E  EB 72				jmp	short loc_287		; (2CD2)
0020:2C60			loc_281:
0020:2C60  9C					pushf				; Push flags
0020:2C61  E8 0350				call	sub_65			; (2FB4)
0020:2C64  83 3E 0020 00			cmp	word ptr data_81+2,0	; (0020:0020=0)
0020:2C69  75 05				jne	loc_282			; Jump if not equal
0020:2C6B  52					push	dx
0020:2C6C  E8 0076				call	sub_58			; (2CE5)
0020:2C6F  5A					pop	dx
0020:2C70			loc_282:
0020:2C70  0E					push	cs
0020:2C71  FF 16 0014				call	data_75			; (0020:0014=0)
0020:2C75  80 3E 002C 00			cmp	byte ptr data_88,0	; (0020:002C=0)
0020:2C7A  74 09				je	loc_283			; Jump if equal
0020:2C7C  58					pop	ax
0020:2C7D  33 C0				xor	ax,ax			; Zero register
0020:2C7F  B3 81				mov	bl,81h
0020:2C81  33 D2				xor	dx,dx			; Zero register
0020:2C83  EB 4D				jmp	short loc_287		; (2CD2)
0020:2C85			loc_283:
0020:2C85  58					pop	ax
0020:2C86  50					push	ax
0020:2C87  8A C4				mov	al,ah
0020:2C89  32 E4				xor	ah,ah			; Zero register
0020:2C8B  D1 E0				shl	ax,1			; Shift w/zeros fill
0020:2C8D  8B F8				mov	di,ax
0020:2C8F  58					pop	ax
0020:2C90  8B BD 008B				mov	di,word ptr ds:[8Bh][di]	; (0020:008B=0)
0020:2C94  0B FF				or	di,di			; Zero ?
0020:2C96  79 38				jns	loc_286			; Jump if not sign
0020:2C98  80 3E 002B 00			cmp	byte ptr ds:[2Bh],0	; (0020:002B=0)
0020:2C9D  74 12				je	loc_284			; Jump if equal
0020:2C9F  56					push	si
0020:2CA0  57					push	di
0020:2CA1  50					push	ax
0020:2CA2  53					push	bx
0020:2CA3  51					push	cx
0020:2CA4  E8 01DF				call	sub_61			; (2E86)
0020:2CA7  3D 0001				cmp	ax,1
0020:2CAA  59					pop	cx
0020:2CAB  5B					pop	bx
0020:2CAC  58					pop	ax
0020:2CAD  5F					pop	di
0020:2CAE  5E					pop	si
0020:2CAF  75 17				jnz	loc_285			; Jump if not zero
0020:2CB1			loc_284:
0020:2CB1  0E					push	cs
0020:2CB2  E8 002A				call	sub_57			; (2CDF)
0020:2CB5  80 3E 002B 00			cmp	byte ptr ds:[2Bh],0	; (0020:002B=0)
0020:2CBA  74 16				je	loc_287			; Jump if equal
0020:2CBC  50					push	ax
0020:2CBD  53					push	bx
0020:2CBE  E8 01FF				call	sub_62			; (2EC0)
0020:2CC1  3D 0001				cmp	ax,1
0020:2CC4  5B					pop	bx
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 92

0020:2CC5  58					pop	ax
0020:2CC6  74 0A				jz	loc_287			; Jump if zero
0020:2CC8			loc_285:
0020:2CC8  33 C0				xor	ax,ax			; Zero register
0020:2CCA  33			data_363	db	33h
0020:2CCB  D2 B3 EB82				sal	byte ptr [bp+di-147Eh],cl	; Shift w/zeros fill
  
				;ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
				;			       SUBROUTINE
				;‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
  
				sub_56		proc	near
0020:2CCF  02 FF				add	bh,bh
0020:2CD1  D7					xlat				; al=[al+[bx]] table
0020:2CD2			loc_287:
0020:2CD2  0E					push	cs
0020:2CD3  FF 16 0014				call	word ptr ds:[14h]	; (0070:0014=3200h)
0020:2CD7  07					pop	es
0020:2CD8  1F					pop	ds
0020:2CD9  5F					pop	di
0020:2CDA  5E					pop	si
0020:2CDB  59					pop	cx
0020:2CDC  CB					retf				; Return far
				sub_56		endp
  
0020:2CDD  6D					db	6Dh
0020:2CDE  FB					sti				; Enable interrupts
  
				;ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
				;			       SUBROUTINE
				;‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
  
				sub_57		proc	near
0020:2CDF  FF 36 014D				push	data_120		; (0020:014D=0)
0020:2CE3  57					push	di
0020:2CE4  CB					retf				; Return far
				sub_57		endp
  
  
				;ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
				;			       SUBROUTINE
				;‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
  
				sub_58		proc	near
0020:2CE5  06					push	es
0020:2CE6  E8 0071				call	sub_60			; (2D5A)
0020:2CE9  80 3E 002C 00			cmp	byte ptr data_88,0	; (0020:002C=0)
0020:2CEE  74 02				je	loc_288			; Jump if equal
0020:2CF0  07					pop	es
0020:2CF1  C3					retn
0020:2CF2			loc_288:
0020:2CF2  B8 020D				mov	ax,20Dh
0020:2CF5  C4					db	0C4h
				sub_58		endp
  
  
				;ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 93

				;			       SUBROUTINE
				;‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
  
				sub_59		proc	near
0020:2CF6  C4 52 09				les	dx,dword ptr [bp+si+9]	; Load 32 bit ptr
0020:2CF9  C4 36 001A				les	si,dword ptr ds:[1Ah]	; (0000:001A=20Ah) Load 32 bit ptr
0020:2CFD  26: 87 04				xchg	ax,es:[si]
0020:2D00  A3 001E				mov	word ptr ds:[1Eh],ax	; (0000:001E=20Ah)
0020:2D03  8C C8				mov	ax,cs
0020:2D05  26: 87 44 02				xchg	ax,es:[si+2]
0020:2D09  A3 0020				mov	word ptr ds:[20h],ax	; (0000:0020=746h)
0020:2D0C  8B C1				mov	ax,cx
0020:2D0E  3D 3C00				cmp	ax,3C00h
0020:2D11  72 03				jb	loc_289			; Jump if below
0020:2D13  B8 3C00				mov	ax,3C00h
0020:2D16			loc_289:
0020:2D16  2B 06 0037				sub	ax,word ptr ds:[37h]	; (0000:0037=0A215h)
0020:2D1A  3D 0040				cmp	ax,40h
0020:2D1D  72 0C				jb	loc_290			; Jump if below
0020:2D1F  83 3E 0035 00			cmp	word ptr ds:[35h],0	; (0000:0035=2C08h)
0020:2D24  75 05				jne	loc_290			; Jump if not equal
0020:2D26  C6 06 0029 01			mov	byte ptr ds:[29h],1	; (0000:0029=0)
0020:2D2B			loc_290:
0020:2D2B  0B C0				or	ax,ax			; Zero ?
0020:2D2D  74 20				jz	loc_293			; Jump if zero
0020:2D2F  B9 0400				mov	cx,400h
0020:2D32  33 DB				xor	bx,bx			; Zero register
0020:2D34  80 3E 0029 00			cmp	byte ptr ds:[29h],0	; (0000:0029=0)
0020:2D39  74 03				je	loc_291			; Jump if equal
0020:2D3B  BB 0040				mov	bx,40h
0020:2D3E			loc_291:
0020:2D3E  3B 1E 0035				cmp	bx,word ptr ds:[35h]	; (0000:0035=2C08h)
0020:2D42  73 04				jae	loc_292			; Jump if above or =
0020:2D44  8B 1E 0035				mov	bx,word ptr ds:[35h]	; (0000:0035=2C08h)
0020:2D48			loc_292:
0020:2D48  03 CB				add	cx,bx
0020:2D4A  2B C3				sub	ax,bx
0020:2D4C  E8 01E2				call	sub_64			; (2F31)
0020:2D4F			loc_293:
0020:2D4F  07					pop	es
0020:2D50  C3					retn
				sub_59		endp
  
0020:2D51  13 00				adc	ax,[bx+si]
0020:2D53  FF					db	0FFh
0020:2D54  FF 56 44				call	word ptr [bp+44h]	;*
0020:2D57  49					dec	cx
0020:2D58  53					push	bx
0020:2D59  064B			data_364	dw	64Bh
0020:2D5B  33 C0				xor	ax,ax			; Zero register
0020:2D5D  8E C0				mov	es,ax
0020:2D5F  26: 8E 06 0066			mov	es,word ptr es:[66h]	; (0000:0066=20Ah)
0020:2D64  BF 0012				mov	di,12h
0020:2D67  BE 01C5				mov	si,1C5h
0020:2D6A  B9 0005				mov	cx,5
0020:2D6D  FC					cld				; Clear direction
0020:2D6E  F3/ A6				repe	cmpsb			; Rep zf=1+cx >0 Cmp [si] to es:[di]
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 94

0020:2D70  07					pop	es
0020:2D71  74 24				jz	loc_294			; Jump if zero
0020:2D73  E8 0110				call	sub_61			; (2E86)
0020:2D76  06					push	es
0020:2D77  2E: C4 3E 01C1			les	di,cs:data_128		; (0020:01C1=0) Load 32 bit ptr
0020:2D7C  BE 01C5				mov	si,1C5h
0020:2D7F  B9 0005				mov	cx,5
0020:2D82  F3FC			data_365	dw	0F3FCh
0020:2D84  07A6			data_366	dw	7A6h
0020:2D86  E89C			data_367	dw	0E89Ch
0020:2D88  0136			data_368	dw	136h
0020:2D8A  FF0E			data_369	dw	0FF0Eh
0020:2D8C  16					push	ss
0020:2D8D  14			data_370	db	14h
0020:2D8E  00 74 06				add	[si+6],dh
0020:2D91  06C6			data_373	dw	6C6h
0020:2D93  2C 00				sub	al,0
0020:2D95  00 C3				add	bl,al
0020:2D97			loc_294:
0020:2D97  C6 06 002C 01			mov	byte ptr data_88,1	; (0020:002C=0)
0020:2D9C  C3					retn
0020:2D9D  80 FC 88				cmp	ah,88h
0020:2DA0  74 0A				je	loc_295			; Jump if equal
0020:2DA2  80 FC 87				cmp	ah,87h
0020:2DA5  74 0C				je	loc_296			; Jump if equal
0020:2DA7  2E: FF 2E 001E			jmp	cs:data_81		; (0020:001E=0)
0020:2DAC			loc_295:
0020:2DAC  2E: A1 0035				mov	ax,word ptr cs:[35h]	; (0020:0035=0)
0020:2DB0  49E9			data_376	dw	49E9h
0020:2DB2  E802			data_377	dw	0E802h
0020:2DB4  FE 01				inc	byte ptr [bx+di]
0020:2DB6  EC83			data_378	dw	0EC83h
0020:2DB8  04 60				add	al,60h			; '`'
0020:2DBA  6CE8			data_379	dw	6CE8h
0020:2DBC  01			data_380	db	1
0020:2DBD  8B EC				mov	bp,sp
0020:2DBF  89 46 12				mov	[bp+12h],ax
0020:2DC2  8B 46 18				mov	ax,[bp+18h]
0020:2DC5  89 46 10				mov	[bp+10h],ax
0020:2DC8  61					db	61h
0020:2DC9  2E: FF 1E 001E			call	cs:data_81		; (0020:001E=0)
0020:2DCE  50					push	ax
0020:2DCF  9C					pushf				; Push flags
0020:2DD0  55					push	bp
0020:2DD1  8B EC				mov	bp,sp
0020:2DD3  8B 46 02				mov	ax,[bp+2]
0020:2DD6  89 46 0C				mov	[bp+0Ch],ax
0020:2DD9  83 7E 06 00				cmp	word ptr [bp+6],0
0020:2DDD  5D					pop	bp
0020:2DDE  58					pop	ax
0020:2DDF  58					pop	ax
0020:2DE0  74 0B				jz	loc_297			; Jump if zero
0020:2DE2  E8 01CF				call	sub_65			; (2FB4)
0020:2DE5  60					db	60h
0020:2DE6  B8 0001				mov	ax,1
0020:2DE9  E8 0272				call	sub_67			; (305E)
0020:2DEC  61					db	61h
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 95

0020:2DED			loc_297:
0020:2DED  83 C4 02				add	sp,2
0020:2DF0  E9 0209				jmp	loc_331			; (2FFC)
0020:2DF3  00 00				add	[bx+si],al
0020:2DF5  E8 01BC				call	sub_65			; (2FB4)
0020:2DF8  B3 91				mov	bl,91h
0020:2DFA  3C 40				cmp	al,40h			; '@'
0020:2DFC  75 06				jne	loc_298			; Jump if not equal
0020:2DFE  3B 16 0263				cmp	dx,word ptr ds:[263h]	; (0020:0263=3D4h)
0020:2E02  74 21				je	loc_299			; Jump if equal
0020:2E04			loc_298:
0020:2E04  80 3E 0026 01			cmp	data_84,1		; (0020:0026=0)
0020:2E09  74 1A				je	loc_299			; Jump if equal
0020:2E0B  B3 90				mov	bl,90h
0020:2E0D  80 3E 0029 00			cmp	byte ptr ds:[29h],0	; (0020:0029=0)
0020:2E12  74 11				je	loc_299			; Jump if equal
0020:2E14  B3 92				mov	bl,92h
0020:2E16  3B 16 0033				cmp	dx,word ptr ds:[33h]	; (0020:0033=0)
0020:2E1A  72 09				jb	loc_299			; Jump if below
0020:2E1C  B8 0001				mov	ax,1
0020:2E1F  A2 0026				mov	data_84,al		; (0020:0026=0)
0020:2E22  32 DB				xor	bl,bl			; Zero register
0020:2E24  C3					retn
0020:2E25			loc_299:
0020:2E25  33 C0				xor	ax,ax			; Zero register
  
				;ƒƒƒƒƒ Indexed Entry Point ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ
  
0020:2E27			loc_300:
0020:2E27  C3					retn
0020:2E28  E8 0189				call	sub_65			; (2FB4)
0020:2E2B  A0 0026				mov	al,data_84		; (0020:0026=0)
0020:2E2E  0A C0				or	al,al			; Zero ?
0020:2E30  74 0B				jz	loc_301			; Jump if zero
0020:2E32  C6 06 0026 00			mov	data_84,0		; (0020:0026=0)
0020:2E37  B8 0001				mov	ax,1
0020:2E3A  32 DB				xor	bl,bl			; Zero register
0020:2E3C  C3					retn
0020:2E3D			loc_301:
0020:2E3D  33 C0				xor	ax,ax			; Zero register
0020:2E3F  B3 93				mov	bl,93h
0020:2E41  C3					retn
0020:2E42  E8 016F				call	sub_65			; (2FB4)
0020:2E45  83 3E 0031 01			cmp	word ptr ds:[31h],1	; (0020:0031=0)
0020:2E4A  74 0D				je	loc_302			; Jump if equal
0020:2E4C  E8 0037				call	sub_61			; (2E86)
0020:2E4F  0B C0				or	ax,ax			; Zero ?
0020:2E51  74 0C				jz	loc_303			; Jump if zero
0020:2E53  C7 06 0031 0001			mov	word ptr ds:[31h],1	; (0020:0031=0)
0020:2E59			loc_302:
0020:2E59  B8 0001				mov	ax,1
0020:2E5C  32 DB				xor	bl,bl			; Zero register
0020:2E5E  C3					retn
0020:2E5F			loc_303:
0020:2E5F  B3 82				mov	bl,82h
0020:2E61  33 C0				xor	ax,ax			; Zero register
0020:2E63  C3					retn
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 96

0020:2E64  E8 014D				call	sub_65			; (2FB4)
0020:2E67  83 3E 0031 00			cmp	word ptr ds:[31h],0	; (0020:0031=0)
0020:2E6C  74 0D				je	loc_304			; Jump if equal
0020:2E6E  E8 004F				call	sub_62			; (2EC0)
0020:2E71  0B C0				or	ax,ax			; Zero ?
0020:2E73  74 0C				jz	loc_305			; Jump if zero
0020:2E75  C7 06 0031 0000			mov	word ptr ds:[31h],0	; (0020:0031=0)
0020:2E7B			loc_304:
0020:2E7B  B8 0001				mov	ax,1
0020:2E7E  32			data_382	db	32h
0020:2E7F  DB C3				esc	3,bl			; coprocessor escape
0020:2E81			loc_305:
0020:2E81  B3 82				mov	bl,82h
0020:2E83  33 C0				xor	ax,ax			; Zero register
0020:2E85  C3					retn
  
				;ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
				;			       SUBROUTINE
				;‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
  
				sub_61		proc	near
0020:2E86  E8 012B				call	sub_65			; (2FB4)
0020:2E89  80 3E 0027 01			cmp	data_85,1		; (0020:0027=0)
0020:2E8E  75 25				jne	loc_309			; Jump if not equal
0020:2E90  C6 06 003B 03			mov	byte ptr ds:[3Bh],3	; (0020:003B=0)
0020:2E95  83 3E 002F 00			cmp	word ptr ds:[2Fh],0	; (0020:002F=0)
0020:2E9A  74 07				je	loc_307			; Jump if equal
0020:2E9C			loc_306:
0020:2E9C  E8 008A				call	sub_63			; (2F29)
0020:2E9F  0B C0				or	ax,ax			; Zero ?
0020:2EA1  75 0E				jnz	loc_308			; Jump if not zero
0020:2EA3			loc_307:
0020:2EA3  B8 0001				mov	ax,1
0020:2EA6  E8 01B5				call	sub_67			; (305E)
0020:2EA9  FE 0E 003B				dec	byte ptr ds:[3Bh]	; (0020:003B=0)
0020:2EAD  75 ED				jnz	loc_306			; Jump if not zero
0020:2EAF  EB 0A				jmp	short loc_310		; (2EBB)
0020:2EB1			loc_308:
0020:2EB1  FF			data_383	db	0FFh
0020:2EB2  06			data_384	db	6
0020:2EB3  002F			data_385	dw	2Fh
0020:2EB5			loc_309:
0020:2EB5  01B8			data_386	dw	1B8h
0020:2EB7  00			data_387	db	0
0020:2EB8  32			data_388	db	32h
0020:2EB9  DB C3				esc	3,bl			; coprocessor escape
0020:2EBB			loc_310:
0020:2EBB  B3			data_390	db	0B3h
0020:2EBC  82			data_391	db	82h
0020:2EBD  33			data_392	db	33h
0020:2EBE  C0					db	0C0h
0020:2EBF  C3			data_393	db	0C3h
  
				;ﬂﬂﬂﬂ External Entry into Subroutine ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
  
				sub_62:
0020:2EC0  E8 00F1				call	sub_65			; (2FB4)
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 97

0020:2EC3  80 3E 0027 00			cmp	data_85,0		; (0020:0027=0)
0020:2EC8  74 34				je	loc_315			; Jump if equal
0020:2ECA  83			data_396	db	83h
0020:2ECB  3E: 2F		data_397	db	2Fh
0020:2ECD  0000			data_398	dw	0
0020:2ECF  74			data_399	db	74h
0020:2ED0  C633			data_400	dw	0C633h
0020:2ED2  3B06			data_402	dw	3B06h
0020:2ED4  0300			data_404	dw	300h
0020:2ED6			loc_311:
0020:2ED6  E8 0050				call	sub_63			; (2F29)
0020:2ED9  83 3E 002F 01			cmp	word ptr ds:[2Fh],1	; (0020:002F=0)
0020:2EDE  75 08				jne	loc_312			; Jump if not equal
0020:2EE0  C00B			data_406	dw	0C00Bh
0020:2EE2  74 16				jz	loc_314			; Jump if zero
0020:2EE4  C033			data_407	dw	0C033h
0020:2EE6  EB 07				jmp	short loc_313		; (2EEF)
0020:2EE8			loc_312:
0020:2EE8  C00B			data_408	dw	0C00Bh
0020:2EEA  75 0E				jnz	loc_314			; Jump if not zero
0020:2EEC  B8 0001				mov	ax,1
0020:2EEF			loc_313:
0020:2EEF  E8 016C				call	sub_67			; (305E)
0020:2EF2  0EFE			data_410	dw	0EFEh
0020:2EF4  003B			data_411	dw	3Bh
0020:2EF6  DE75			data_412	dw	0DE75h
0020:2EF8  0AEB			data_413	dw	0AEBh
0020:2EFA			loc_314:
0020:2EFA  0EFF			data_414	dw	0EFFh
0020:2EFC  2F					das				; Decimal adjust
0020:2EFD  00 B8 0001				add	[bx+si+1],bh
0020:2F01  32			data_415	db	32h
0020:2F02  DB C3				esc	3,bl			; coprocessor escape
0020:2F04			loc_316:
0020:2F04  B3			data_416	db	0B3h
0020:2F05  82 33 C0				xor	byte ptr [bp+di],0C0h
0020:2F08  C3					retn
				sub_61		endp
  
0020:2F09  2E: 80 3E 002B 00			cmp	byte ptr cs:[2Bh],0	; (0020:002B=0)
0020:2F0F  74 04				je	loc_317			; Jump if equal
0020:2F11  B8 0001				mov	ax,1
0020:2F14  CB					retf				; Return far
0020:2F15			loc_317:
0020:2F15  E8 FF6E				call	sub_61			; (2E86)
0020:2F18  CB					retf
0020:2F19  2E: 80 3E 002B 00			cmp	byte ptr cs:[2Bh],0	; (0020:002B=0)
0020:2F1F  74 04				je	loc_318			; Jump if equal
0020:2F21  B8 0001				mov	ax,1
0020:2F24  CB					retf				; Return far
0020:2F25			loc_318:
0020:2F25  E8 FF98				call	sub_62			; (2EC0)
0020:2F28  CB					retf				; Return far
  
				;ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
				;			       SUBROUTINE
				;‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 98

  
				sub_63		proc	near
0020:2F29  2E: A0 003C				mov	al,cs:data_94		; (0020:003C=0)
0020:2F2D  98					cbw				; Convrt byte to word
0020:2F2E  32 DB				xor	bl,bl			; Zero register
0020:2F30  C3					retn
				sub_63		endp
  
  
				;ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
				;			       SUBROUTINE
				;‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
  
				sub_64		proc	near
0020:2F31  8B D0				mov	dx,ax
0020:2F33  8B F1				mov	si,cx
0020:2F35  33 FF				xor	di,di			; Zero register
0020:2F37  06					push	es
0020:2F38  8E 06 014D				mov	es,word ptr ds:[14Dh]	; (0000:014D=0FFh)
0020:2F3C  26: 8B 1E A004			mov	bx,word ptr es:[0A004h]	; (00FF:A004=9216h)
0020:2F41  26: 8B 0E A008			mov	cx,word ptr es:[0A008h]	; (00FF:A008=0C28Eh)
  
0020:2F46			locloop_319:
0020:2F46  26: 80 3F 04				cmp	byte ptr es:[bx],4
0020:2F4A  75 08				jne	loc_320			; Jump if not equal
0020:2F4C  0B FF				or	di,di			; Zero ?
0020:2F4E  75 48				jnz	loc_323			; Jump if not zero
0020:2F50  8B FB				mov	di,bx
0020:2F52  EB 44				jmp	short loc_323		; (2F98)
0020:2F54			loc_320:
0020:2F54  26: 80 3F 01				cmp	byte ptr es:[bx],1
0020:2F58  75 3E				jne	loc_323			; Jump if not equal
0020:2F5A  26: 8B 47 02				mov	ax,es:[bx+2]
0020:2F5E  26: 03 47 04				add	ax,es:[bx+4]
0020:2F62  3B C6				cmp	ax,si
0020:2F64  72 32				jb	loc_323			; Jump if below
0020:2F66  8B C6				mov	ax,si
0020:2F68  03 C2				add	ax,dx
0020:2F6A  26: 3B 47 02				cmp	ax,es:[bx+2]
0020:2F6E  72 28				jb	loc_323			; Jump if below
0020:2F70  26: 3B 77 02				cmp	si,es:[bx+2]
0020:2F74  76 08				jbe	loc_321			; Jump if below or =
0020:2F76  03 D6				add	dx,si
0020:2F78  26: 8B 77 02				mov	si,es:[bx+2]
0020:2F7C  2B D6				sub	dx,si
0020:2F7E			loc_321:
0020:2F7E  26: 8B 47 02				mov	ax,es:[bx+2]
0020:2F82  26: 03 47 04				add	ax,es:[bx+4]
0020:2F86  2B C2				sub	ax,dx
0020:2F88  2B C6				sub	ax,si
0020:2F8A  76 02				jbe	loc_322			; Jump if below or =
0020:2F8C  03 D0				add	dx,ax
0020:2F8E			loc_322:
0020:2F8E  26: C6 07 04				mov	byte ptr es:[bx],4
0020:2F92  0B FF				or	di,di			; Zero ?
0020:2F94  75 02				jnz	loc_323			; Jump if not zero
0020:2F96  8B FB				mov	di,bx
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 99

0020:2F98			loc_323:
0020:2F98  83 C3 06				add	bx,6
0020:2F9B  E2 A9				loop	locloop_319		; Loop if cx > 0
  
0020:2F9D  0B FF				or	di,di			; Zero ?
0020:2F9F  74 11				jz	loc_324			; Jump if zero
0020:2FA1  26: C6 45 01 00			mov	byte ptr es:[di+1],0
0020:2FA6  26: C6 05 01				mov	byte ptr es:[di],1
0020:2FAA  26: 89 75 02				mov	es:[di+2],si
0020:2FAE  26: 89 55 04				mov	es:[di+4],dx
0020:2FB2			loc_324:
0020:2FB2  07					pop	es
0020:2FB3  C3					retn
				sub_64		endp
  
  
				;ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
				;			       SUBROUTINE
				;‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
  
				sub_65		proc	near
0020:2FB4  1E					push	ds
0020:2FB5  50					push	ax
0020:2FB6  B8 0040				mov	ax,40h
0020:2FB9  8E D8				mov	ds,ax
0020:2FBB  9F					lahf				; Load ah from flags
0020:2FBC  F7 06 0314 2400			test	word ptr ds:[314h],2400h	; (0040:0314=3200h)
0020:2FC2  75 0C				jnz	loc_326			; Jump if not zero
0020:2FC4  F0> 81 26 0314 FDFF	           lock	and	word ptr ds:[314h],0FDFFh	; (0040:0314=3200h)
0020:2FCB			loc_325:
0020:2FCB  9E					sahf				; Store ah into flags
0020:2FCC  58					pop	ax
0020:2FCD  1F					pop	ds
0020:2FCE  EB 03				jmp	short loc_327		; (2FD3)
0020:2FD0			loc_326:
0020:2FD0  FA					cli				; Disable interrupts
0020:2FD1  EB F8				jmp	short loc_325		; (2FCB)
0020:2FD3			loc_327:
0020:2FD3  C3					retn
				sub_65		endp
  
  
				;ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
				;			       SUBROUTINE
				;‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
  
				sub_66		proc	near
0020:2FD4  1E					push	ds
0020:2FD5  50					push	ax
0020:2FD6  B8 0040				mov	ax,40h
0020:2FD9  8E D8				mov	ds,ax
0020:2FDB  9F					lahf				; Load ah from flags
0020:2FDC  F7 06 0314 0003			test	word ptr ds:[314h],3	; (0040:0314=3200h)
0020:2FE2  75 14				jnz	loc_329			; Jump if not zero
0020:2FE4  F7 06 0314 2400			test	word ptr ds:[314h],2400h	; (0040:0314=3200h)
0020:2FEA  75 0C				jnz	loc_329			; Jump if not zero
0020:2FEC  F0> 81 0E 0314 0200	           lock	or	word ptr ds:[314h],200h	; (0040:0314=3200h)
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 100

0020:2FF3			loc_328:
0020:2FF3  9E					sahf				; Store ah into flags
0020:2FF4  58					pop	ax
0020:2FF5  1F					pop	ds
0020:2FF6  EB 03				jmp	short loc_330		; (2FFB)
0020:2FF8			loc_329:
0020:2FF8  FB					sti				; Enable interrupts
0020:2FF9  EB F8				jmp	short loc_328		; (2FF3)
0020:2FFB			loc_330:
0020:2FFB  C3					retn
				sub_66		endp
  
0020:2FFC			loc_331:
0020:2FFC  1E					push	ds
0020:2FFD  50					push	ax
0020:2FFE  B8 0040				mov	ax,40h
0020:3001  8E D8				mov	ds,ax
0020:3003  F7 06 0314 2400			test	word ptr ds:[314h],2400h	; (0040:0314=3200h)
0020:3009  4F75			data_417	dw	4F75h
0020:300B  55					push	bp
0020:300C  8B EC				mov	bp,sp
0020:300E  8B 46 0A				mov	ax,[bp+0Ah]
0020:3011  5D					pop	bp
0020:3012  A9 0100				test	ax,100h
0020:3015  75 43				jnz	loc_339			; Jump if not zero
0020:3017  A9 0200				test	ax,200h
0020:301A  74 22				jz	loc_335			; Jump if zero
0020:301C  F0> 81 0E 0314 0200	           lock	or	word ptr ds:[314h],200h	; (0040:0314=3200h)
0020:3023  F7 06 0314 0003			test	word ptr ds:[314h],3	; (0040:0314=3200h)
0020:3029  75 2F				jnz	loc_339			; Jump if not zero
0020:302B			loc_332:
0020:302B  86 E0				xchg	ah,al
0020:302D  FC					cld				; Clear direction
0020:302E  A8 04				test	al,4
0020:3030  75 25				jnz	loc_338			; Jump if not zero
0020:3032			loc_333:
0020:3032  A8 08				test	al,8
0020:3034  75 11				jnz	loc_336			; Jump if not zero
0020:3036  70 19				jo	loc_337			; Jump if overflow=1
0020:3038			loc_334:
0020:3038  9E					sahf				; Store ah into flags
0020:3039  58					pop	ax
0020:303A  1F					pop	ds
0020:303B  CA 0002				retf	2			; Return far
0020:303E			loc_335:
0020:303E  F0> 81 26 0314 FDFF	           lock	and	data_153,0FDFFh		; (0020:0314=0)
0020:3045  EB E4				jmp	short loc_332		; (302B)
0020:3047			loc_336:
0020:3047  70 EF				jo	loc_334			; Jump if overflow=1
0020:3049  50					push	ax
0020:304A  B0 7F				mov	al,7Fh
0020:304C  04 02				add	al,2
0020:304E  58					pop	ax
0020:304F  EB E7				jmp	short loc_334		; (3038)
0020:3051			loc_337:
0020:3051  50					push	ax
0020:3052  32 C0				xor	al,al			; Zero register
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 101

0020:3054  58					pop	ax
0020:3055  EB E1				jmp	short loc_334		; (3038)
0020:3057			loc_338:
0020:3057  FD					std				; Set direction flag
0020:3058  EB D8				jmp	short loc_333		; (3032)
0020:305A			loc_339:
0020:305A  58					pop	ax
0020:305B  1F					pop	ds
0020:305C  CF					iret				; Interrupt return
0020:305D  00 3D				add	[di],bh
0020:305F  02 00				add	al,[bx+si]
0020:3061  75 06				jnz	loc_340			; Jump if not zero
0020:3063  2E: A0 003C				mov	al,cs:data_94		; (0020:003C=0)
0020:3067  98					cbw				; Convrt byte to word
0020:3068  C3					retn
0020:3069			loc_340:
0020:3069  C4					db	0C4h
0020:306A  C4 52 00				les	dx,dword ptr [bp+si+0]	; Load 32 bit ptr
0020:306D  C3					retn
0020:306E  2E: C6 46 28 03			mov	byte ptr cs:[bp+28h],3
0020:3073  49					dec	cx
0020:3074  00 00				add	[bx+si],al
0020:3076  4D					dec	bp
0020:3077  34 00				xor	al,0
0020:3079  00 06 0600				add	byte ptr ds:[600h],al	; (0020:0600=0Ah)
0020:307D  00 FD				add	ch,bh
0020:307F  35 FFFF				xor	ax,0FFFFh
0020:3082  06					push	es
0020:3083  00 23				add	[bp+di],ah
0020:3085  017B[00]				db	379 dup (0)
0020:3200  0000			data_420	dw	0			; Data table (indexed access)
0020:3202  00 00				add	[bx+si],al
0020:3204  00 00				add	[bx+si],al
0020:3206  00 00				add	[bx+si],al
0020:3208  00 00				add	[bx+si],al
0020:320A  00 00				add	[bx+si],al
0020:320C  00 00				add	[bx+si],al
0020:320E  00 00				add	[bx+si],al
0020:3210  00 00				add	[bx+si],al
0020:3212  00 00				add	[bx+si],al
0020:3214  00 00				add	[bx+si],al
0020:3216  00 00				add	[bx+si],al
0020:3218  00 00				add	[bx+si],al
0020:321A  00 00				add	[bx+si],al
0020:321C  00 00				add	[bx+si],al
0020:321E  00 00				add	[bx+si],al
0020:3220  00 00				add	[bx+si],al
0020:3222  00 00				add	[bx+si],al
0020:3224  00 00				add	[bx+si],al
0020:3226  00 00				add	[bx+si],al
0020:3228  00 00				add	[bx+si],al
0020:322A  00 00				add	[bx+si],al
0020:322C  00 00				add	[bx+si],al
0020:322E  00 00				add	[bx+si],al
0020:3230  00 00				add	[bx+si],al
0020:3232  00 00				add	[bx+si],al
0020:3234  00 00				add	[bx+si],al
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 102

0020:3236  00 00				add	[bx+si],al
0020:3238  00 00				add	[bx+si],al
0020:323A  00 00				add	[bx+si],al
0020:323C  00 00				add	[bx+si],al
0020:323E  00 00				add	[bx+si],al
0020:3240  00 00				add	[bx+si],al
0020:3242  00 00				add	[bx+si],al
0020:3244  00 00				add	[bx+si],al
0020:3246  00 00				add	[bx+si],al
0020:3248  00 00				add	[bx+si],al
0020:324A  00 00				add	[bx+si],al
0020:324C  00 00				add	[bx+si],al
0020:324E  00 00				add	[bx+si],al
0020:3250  00 00				add	[bx+si],al
0020:3252  00 00				add	[bx+si],al
0020:3254  00 00				add	[bx+si],al
0020:3256  00 00				add	[bx+si],al
0020:3258  00 00				add	[bx+si],al
0020:325A  00 00				add	[bx+si],al
0020:325C  00 00				add	[bx+si],al
0020:325E  00 00				add	[bx+si],al
0020:3260  00 00				add	[bx+si],al
0020:3262  00 00				add	[bx+si],al
0020:3264  00 00				add	[bx+si],al
0020:3266  00 00				add	[bx+si],al
0020:3268  00 00				add	[bx+si],al
0020:326A  00 00				add	[bx+si],al
0020:326C  00 00				add	[bx+si],al
0020:326E  00 00				add	[bx+si],al
0020:3270  00 00				add	[bx+si],al
0020:3272  00 00				add	[bx+si],al
0020:3274  00 00				add	[bx+si],al
0020:3276  00 00				add	[bx+si],al
0020:3278  00 00				add	[bx+si],al
0020:327A  00 00				add	[bx+si],al
0020:327C  00 00				add	[bx+si],al
0020:327E  00 00				add	[bx+si],al
0020:3280  00 00				add	[bx+si],al
0020:3282  00 00				add	[bx+si],al
0020:3284  00 00				add	[bx+si],al
0020:3286  00 00				add	[bx+si],al
0020:3288  00 00				add	[bx+si],al
0020:328A  00 00				add	[bx+si],al
0020:328C  00 00				add	[bx+si],al
0020:328E  00 00				add	[bx+si],al
0020:3290  00 00				add	[bx+si],al
0020:3292  00 00				add	[bx+si],al
0020:3294  00 00				add	[bx+si],al
0020:3296  00 00				add	[bx+si],al
0020:3298  00 00				add	[bx+si],al
0020:329A  00 00				add	[bx+si],al
0020:329C  00 00				add	[bx+si],al
0020:329E  00 00				add	[bx+si],al
0020:32A0  00 00				add	[bx+si],al
0020:32A2  00 00				add	[bx+si],al
0020:32A4  00 00				add	[bx+si],al
0020:32A6  00 00				add	[bx+si],al
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 103

0020:32A8  00 00				add	[bx+si],al
0020:32AA  00 00				add	[bx+si],al
0020:32AC  00 00				add	[bx+si],al
0020:32AE  00 00				add	[bx+si],al
0020:32B0  00 00				add	[bx+si],al
0020:32B2  00 00				add	[bx+si],al
0020:32B4  00 00				add	[bx+si],al
0020:32B6  00 00				add	[bx+si],al
0020:32B8  00 00				add	[bx+si],al
0020:32BA  00 00				add	[bx+si],al
0020:32BC  00 00				add	[bx+si],al
0020:32BE  00 00				add	[bx+si],al
0020:32C0  00 00				add	[bx+si],al
0020:32C2  00 00				add	[bx+si],al
0020:32C4  00 00				add	[bx+si],al
0020:32C6  00 00				add	[bx+si],al
0020:32C8  00 00				add	[bx+si],al
0020:32CA  00 00				add	[bx+si],al
0020:32CC  00 00				add	[bx+si],al
0020:32CE  00 00				add	[bx+si],al
0020:32D0  00 00				add	[bx+si],al
0020:32D2  00 00				add	[bx+si],al
0020:32D4  00 00				add	[bx+si],al
0020:32D6  00 00				add	[bx+si],al
0020:32D8  00 00				add	[bx+si],al
0020:32DA  00 00				add	[bx+si],al
0020:32DC  00 00				add	[bx+si],al
0020:32DE  00 00				add	[bx+si],al
0020:32E0  00 00				add	[bx+si],al
0020:32E2  00 00				add	[bx+si],al
0020:32E4  00 00				add	[bx+si],al
0020:32E6  00 00				add	[bx+si],al
0020:32E8  00 00				add	[bx+si],al
0020:32EA  00 00				add	[bx+si],al
0020:32EC  00 00				add	[bx+si],al
0020:32EE  00 00				add	[bx+si],al
0020:32F0  00 00				add	[bx+si],al
0020:32F2  00 00				add	[bx+si],al
0020:32F4  00 00				add	[bx+si],al
0020:32F6  00 00				add	[bx+si],al
0020:32F8  00 00				add	[bx+si],al
0020:32FA  00 00				add	[bx+si],al
0020:32FC  00 00				add	[bx+si],al
0020:32FE  00 00				add	[bx+si],al
0020:3300  00 00				add	[bx+si],al
0020:3302  00 00				add	[bx+si],al
0020:3304  00 00				add	[bx+si],al
0020:3306  00 00				add	[bx+si],al
0020:3308  00 00				add	[bx+si],al
0020:330A  00 00				add	[bx+si],al
0020:330C  00 00				add	[bx+si],al
0020:330E  00 00				add	[bx+si],al
0020:3310  00 00				add	[bx+si],al
0020:3312  00 00				add	[bx+si],al
0020:3314  00 00				add	[bx+si],al
0020:3316  00 00				add	[bx+si],al
0020:3318  00 00				add	[bx+si],al
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 104

0020:331A  00 00				add	[bx+si],al
0020:331C  00 00				add	[bx+si],al
0020:331E  00 00				add	[bx+si],al
0020:3320  00 00				add	[bx+si],al
0020:3322  00 00				add	[bx+si],al
0020:3324  00 00				add	[bx+si],al
0020:3326  00 00				add	[bx+si],al
0020:3328  00 00				add	[bx+si],al
0020:332A  00 00				add	[bx+si],al
0020:332C  00 00				add	[bx+si],al
0020:332E  00 00				add	[bx+si],al
0020:3330  00 00				add	[bx+si],al
0020:3332  00 00				add	[bx+si],al
0020:3334  00 00				add	[bx+si],al
0020:3336  00 00				add	[bx+si],al
0020:3338  00 00				add	[bx+si],al
0020:333A  00 00				add	[bx+si],al
0020:333C  00 00				add	[bx+si],al
0020:333E  00 00				add	[bx+si],al
0020:3340  00 00				add	[bx+si],al
0020:3342  00 00				add	[bx+si],al
0020:3344  00 00				add	[bx+si],al
0020:3346  00 00				add	[bx+si],al
0020:3348  00 00				add	[bx+si],al
0020:334A  00 00				add	[bx+si],al
0020:334C  00 00				add	[bx+si],al
0020:334E  00 00				add	[bx+si],al
0020:3350  00 00				add	[bx+si],al
0020:3352  00 00				add	[bx+si],al
0020:3354  00 00				add	[bx+si],al
0020:3356  00 00				add	[bx+si],al
0020:3358  00 00				add	[bx+si],al
0020:335A  00 00				add	[bx+si],al
0020:335C  00 00				add	[bx+si],al
0020:335E  00 00				add	[bx+si],al
0020:3360  00 00				add	[bx+si],al
0020:3362  00 00				add	[bx+si],al
0020:3364  00 00				add	[bx+si],al
0020:3366  00 00				add	[bx+si],al
0020:3368  00 00				add	[bx+si],al
0020:336A  00 00				add	[bx+si],al
0020:336C  00 00				add	[bx+si],al
0020:336E  00 00				add	[bx+si],al
0020:3370  00 00				add	[bx+si],al
0020:3372  00 00				add	[bx+si],al
0020:3374  00 00				add	[bx+si],al
0020:3376  00 00				add	[bx+si],al
0020:3378  00 00				add	[bx+si],al
0020:337A  00 00				add	[bx+si],al
0020:337C  00 00				add	[bx+si],al
0020:337E  00 00				add	[bx+si],al
0020:3380  00 00				add	[bx+si],al
0020:3382  00 00				add	[bx+si],al
0020:3384  00 00				add	[bx+si],al
0020:3386  00 00				add	[bx+si],al
0020:3388  00 00				add	[bx+si],al
0020:338A  00 00				add	[bx+si],al
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 105

0020:338C  00 00				add	[bx+si],al
0020:338E  00 00				add	[bx+si],al
0020:3390  00 00				add	[bx+si],al
0020:3392  00 00				add	[bx+si],al
0020:3394  00 00				add	[bx+si],al
0020:3396  00 00				add	[bx+si],al
0020:3398  00 00				add	[bx+si],al
0020:339A  00 00				add	[bx+si],al
0020:339C  00 00				add	[bx+si],al
0020:339E  00 00				add	[bx+si],al
0020:33A0  00 00				add	[bx+si],al
0020:33A2  00 00				add	[bx+si],al
0020:33A4  00 00				add	[bx+si],al
0020:33A6  00 00				add	[bx+si],al
0020:33A8  00 00				add	[bx+si],al
0020:33AA  00 00				add	[bx+si],al
0020:33AC  00 00				add	[bx+si],al
0020:33AE  00 00				add	[bx+si],al
0020:33B0  00 00				add	[bx+si],al
0020:33B2  00 00				add	[bx+si],al
0020:33B4  00 00				add	[bx+si],al
0020:33B6  00 00				add	[bx+si],al
0020:33B8  00 00				add	[bx+si],al
0020:33BA  00 00				add	[bx+si],al
0020:33BC  00 00				add	[bx+si],al
0020:33BE  00 00				add	[bx+si],al
0020:33C0  00 00				add	[bx+si],al
0020:33C2  00 00				add	[bx+si],al
0020:33C4  00 00				add	[bx+si],al
0020:33C6  00 00				add	[bx+si],al
0020:33C8  00 00				add	[bx+si],al
0020:33CA  00 00				add	[bx+si],al
0020:33CC  00 00				add	[bx+si],al
0020:33CE  00 00				add	[bx+si],al
0020:33D0  00 00				add	[bx+si],al
0020:33D2  00 00				add	[bx+si],al
0020:33D4  00 00				add	[bx+si],al
0020:33D6  00 00				add	[bx+si],al
0020:33D8  00 00				add	[bx+si],al
0020:33DA  00 00				add	[bx+si],al
0020:33DC  00 00				add	[bx+si],al
0020:33DE  00 00				add	[bx+si],al
0020:33E0  00 00				add	[bx+si],al
0020:33E2  00 00				add	[bx+si],al
0020:33E4  00 00				add	[bx+si],al
0020:33E6  00 00				add	[bx+si],al
0020:33E8  00 00				add	[bx+si],al
0020:33EA  00 00				add	[bx+si],al
0020:33EC  00 00				add	[bx+si],al
0020:33EE  00 00				add	[bx+si],al
0020:33F0  00 00				add	[bx+si],al
0020:33F2  00 00				add	[bx+si],al
0020:33F4  00 00				add	[bx+si],al
0020:33F6  00 00				add	[bx+si],al
0020:33F8  00 00				add	[bx+si],al
0020:33FA  00 00				add	[bx+si],al
0020:33FC  00 00				add	[bx+si],al
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 106

0020:33FE  00 00				add	[bx+si],al
0020:3400  00 00				add	[bx+si],al
0020:3402  00 00				add	[bx+si],al
0020:3404  00 00				add	[bx+si],al
0020:3406  00 00				add	[bx+si],al
0020:3408  00 00				add	[bx+si],al
0020:340A  00 00				add	[bx+si],al
0020:340C  00 00				add	[bx+si],al
0020:340E  00 00				add	[bx+si],al
0020:3410  00 00				add	[bx+si],al
0020:3412  00 00				add	[bx+si],al
0020:3414  00 00				add	[bx+si],al
0020:3416  00 00				add	[bx+si],al
0020:3418  00 00				add	[bx+si],al
0020:341A  00 00				add	[bx+si],al
0020:341C  00 00				add	[bx+si],al
0020:341E  00 00				add	[bx+si],al
0020:3420  00 00				add	[bx+si],al
0020:3422  00 00				add	[bx+si],al
0020:3424  00 00				add	[bx+si],al
0020:3426  00 00				add	[bx+si],al
0020:3428  00 00				add	[bx+si],al
0020:342A  00 00				add	[bx+si],al
0020:342C  00 00				add	[bx+si],al
0020:342E  00 00				add	[bx+si],al
0020:3430  00 00				add	[bx+si],al
0020:3432  00 00				add	[bx+si],al
0020:3434  00 00				add	[bx+si],al
0020:3436  00 00				add	[bx+si],al
0020:3438  00 00				add	[bx+si],al
0020:343A  00 00				add	[bx+si],al
0020:343C  00 00				add	[bx+si],al
0020:343E  00 00				add	[bx+si],al
0020:3440  00 00				add	[bx+si],al
0020:3442  00 00				add	[bx+si],al
0020:3444  00 00				add	[bx+si],al
0020:3446  00 00				add	[bx+si],al
0020:3448  00 00				add	[bx+si],al
0020:344A  00 00				add	[bx+si],al
0020:344C  00 00				add	[bx+si],al
0020:344E  00 00				add	[bx+si],al
0020:3450  00 00				add	[bx+si],al
0020:3452  00 00				add	[bx+si],al
0020:3454  00 00				add	[bx+si],al
0020:3456  00 00				add	[bx+si],al
0020:3458  00 00				add	[bx+si],al
0020:345A  00 00				add	[bx+si],al
0020:345C  00 00				add	[bx+si],al
0020:345E  00 00				add	[bx+si],al
0020:3460  00 00				add	[bx+si],al
0020:3462  00 00				add	[bx+si],al
0020:3464  00 00				add	[bx+si],al
0020:3466  00 00				add	[bx+si],al
0020:3468  00 00				add	[bx+si],al
0020:346A  00 00				add	[bx+si],al
0020:346C  00 00				add	[bx+si],al
0020:346E  00 00				add	[bx+si],al
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 107

0020:3470  00 00				add	[bx+si],al
0020:3472  00 00				add	[bx+si],al
0020:3474  00 00				add	[bx+si],al
0020:3476  00 00				add	[bx+si],al
0020:3478  00 00				add	[bx+si],al
0020:347A  00 00				add	[bx+si],al
0020:347C  00 00				add	[bx+si],al
0020:347E  00 00				add	[bx+si],al
0020:3480  00 00				add	[bx+si],al
0020:3482  00 00				add	[bx+si],al
0020:3484  00 00				add	[bx+si],al
0020:3486  00 00				add	[bx+si],al
0020:3488  00 00				add	[bx+si],al
0020:348A  00 00				add	[bx+si],al
0020:348C  00 00				add	[bx+si],al
0020:348E  00 00				add	[bx+si],al
0020:3490  00 00				add	[bx+si],al
0020:3492  00 00				add	[bx+si],al
0020:3494  00 00				add	[bx+si],al
0020:3496  00 00				add	[bx+si],al
0020:3498  00 00				add	[bx+si],al
0020:349A  00 00				add	[bx+si],al
0020:349C  00 00				add	[bx+si],al
0020:349E  00 00				add	[bx+si],al
0020:34A0  00 00				add	[bx+si],al
0020:34A2  00 00				add	[bx+si],al
0020:34A4  00 00				add	[bx+si],al
0020:34A6  00 00				add	[bx+si],al
0020:34A8  00 00				add	[bx+si],al
0020:34AA  00 00				add	[bx+si],al
0020:34AC  00 00				add	[bx+si],al
0020:34AE  00 00				add	[bx+si],al
0020:34B0  00 00				add	[bx+si],al
0020:34B2  00 00				add	[bx+si],al
0020:34B4  00 00				add	[bx+si],al
0020:34B6  00 00				add	[bx+si],al
0020:34B8  00 00				add	[bx+si],al
0020:34BA  00 00				add	[bx+si],al
0020:34BC  00 00				add	[bx+si],al
0020:34BE  00 00				add	[bx+si],al
0020:34C0  00 00				add	[bx+si],al
0020:34C2  00 00				add	[bx+si],al
0020:34C4  00 00				add	[bx+si],al
0020:34C6  00 00				add	[bx+si],al
0020:34C8  00 00				add	[bx+si],al
0020:34CA  00 00				add	[bx+si],al
0020:34CC  00 00				add	[bx+si],al
0020:34CE  00 00				add	[bx+si],al
0020:34D0  00 00				add	[bx+si],al
0020:34D2  00 00				add	[bx+si],al
0020:34D4  00 00				add	[bx+si],al
0020:34D6  00 00				add	[bx+si],al
0020:34D8  00 00				add	[bx+si],al
0020:34DA  00 00				add	[bx+si],al
0020:34DC  00 00				add	[bx+si],al
0020:34DE  00 00				add	[bx+si],al
0020:34E0  00 00				add	[bx+si],al
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 108

0020:34E2  00 00				add	[bx+si],al
0020:34E4  00 00				add	[bx+si],al
0020:34E6  00 00				add	[bx+si],al
0020:34E8  00 00				add	[bx+si],al
0020:34EA  00 00				add	[bx+si],al
0020:34EC  00 00				add	[bx+si],al
0020:34EE  00 00				add	[bx+si],al
0020:34F0  00 00				add	[bx+si],al
0020:34F2  00 00				add	[bx+si],al
0020:34F4  00 00				add	[bx+si],al
0020:34F6  00 00				add	[bx+si],al
0020:34F8  00 00				add	[bx+si],al
0020:34FA  00 00				add	[bx+si],al
0020:34FC  00 00				add	[bx+si],al
0020:34FE  00 00				add	[bx+si],al
0020:3500  00 00				add	[bx+si],al
0020:3502  00 00				add	[bx+si],al
0020:3504  00 00				add	[bx+si],al
0020:3506  00 00				add	[bx+si],al
0020:3508  00 00				add	[bx+si],al
0020:350A  0C 00				or	al,0
0020:350C  82 01 54				add	byte ptr [bx+di],54h	; 'T'
0020:350F  03 58 72				add	bx,[bx+si+72h]
0020:3512  03 09				add	cx,[bx+di]
0020:3514  00 19				add	[bx+di],bl
0020:3516  00 00				add	[bx+si],al
0020:3518  0C 00				or	al,0
0020:351A  82 01 52				add	byte ptr [bx+di],52h	; 'R'
0020:351D  03 00				add	ax,[bx+si]
0020:351F  00 FF				add	bh,bh
0020:3521  FF					db	0FFh
0020:3522  D9 19				esc	1,[bx+di]		; coprocessor escape
0020:3524  04 00				add	al,0
0020:3526  00 00				add	[bx+si],al
0020:3528  0011[41]				db	17 dup (41h)
0020:3539  00 00				add	[bx+si],al
0020:353B  00 00				add	[bx+si],al
0020:353D  000A[41]				db	10 dup (41h)
0020:3547  00 00				add	[bx+si],al
0020:3549  0011[41]				db	17 dup (41h)
0020:355A  00 00				add	[bx+si],al
0020:355C  00 00				add	[bx+si],al
0020:355E  000A[41]				db	10 dup (41h)
0020:3568  00 00				add	[bx+si],al
0020:356A  0011[41]				db	17 dup (41h)
0020:357B  00 00				add	[bx+si],al
0020:357D  00 00				add	[bx+si],al
0020:357F  000A[41]				db	10 dup (41h)
0020:3589  00 00				add	[bx+si],al
0020:358B  0011[41]				db	17 dup (41h)
0020:359C  00 00				add	[bx+si],al
0020:359E  00 00				add	[bx+si],al
0020:35A0  000A[41]				db	10 dup (41h)
0020:35AA  00 00				add	[bx+si],al
0020:35AC  00 00				add	[bx+si],al
0020:35AE  95					xchg	ax,bp
0020:35AF  1C 4C				sbb	al,4Ch			; 'L'
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 109

0020:35B1  7C 03				jl	loc_341			; Jump if <
0020:35B3  0E					push	cs
0020:35B4  00 00				add	[bx+si],al
0020:35B6			loc_341:
0020:35B6  52					push	dx
0020:35B7  03 00				add	ax,[bx+si]
0020:35B9  00 00				add	[bx+si],al
0020:35BB  00 C7				add	bh,al
0020:35BD  1C 00				sbb	al,0
0020:35BF  00 41 3A				add	[bx+di+3Ah],al
0020:35C2  5C					pop	sp
0020:35C3  0041[00]				db	65 dup (0)
0020:3604  58					pop	ax
0020:3605  02 00				add	al,[bx+si]
0020:3607  42					inc	dx
0020:3608  3A 5C 00				cmp	bl,[si+0]
0020:360B  0040[00]				db	64 dup (0)
0020:364B  58					pop	ax
0020:364C  02 00				add	al,[bx+si]
0020:364E  43 3A 5C 44 4F 43			db	'C:\DOCUME~1\xander\Desktop\SOURC'
0020:3654  55 4D 45 7E 31 5C
0020:365A  78 61 6E 64 65 72
0020:3660  5C 44 65 73 6B 74
0020:3666  6F 70 5C 53 4F 55
0020:366C  52 43
0020:366E  45 7E 31 2E 45 4E			db	'E~1.ENG'
0020:3674  47
0020:3675  001D[00]				db	29 dup (0)
0020:3692  54					push	sp
0020:3693  02 00				add	al,[bx+si]
0020:3695  00 B5 0001				add	[di+1],dh
0020:3699  00 00				add	[bx+si],al
0020:369B  00 67 13				add	[bx+13h],ah
0020:369E  00 00				add	[bx+si],al
0020:36A0  53					push	bx
0020:36A1  8B 03				mov	ax,[bp+di]
0020:36A3  7D 00				jge	loc_342			; Jump if > or =
0020:36A5			loc_342:
0020:36A5  05 0000				add	ax,0
0020:36A8  00 00				add	[bx+si],al
0020:36AA  35 0013				xor	ax,13h
0020:36AD  00 0C				add	[si],cl
0020:36AF  00 00				add	[bx+si],al
0020:36B1  00 09				add	[bx+di],cl
0020:36B3  00 48 00				add	[bx+si+0],cl
0020:36B6  80 00 00				add	byte ptr [bx+si],0
0020:36B9  00 BB 0003				add	[bp+di+3],bh
0020:36BD  00 40 00				add	[bx+si+0],al
0020:36C0  40					inc	ax
0020:36C1  00 53 FF				add	[bp+di-1],dl
0020:36C4  00 F0				add	al,dh
0020:36C6  E8 01CE				call	sub_70			; (3897)
0020:36C9  12 00				adc	al,[bx+si]
0020:36CB  46					inc	si
0020:36CC  07					pop	es
0020:36CD  0A 02				or	al,[bp+si]
0020:36CF  E8 01C5				call	sub_70			; (3897)
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 110

0020:36D2  1B 00				sbb	ax,[bx+si]
0020:36D4  0A 04				or	al,[si]
0020:36D6  0A 02				or	al,[bp+si]
0020:36D8  EB 02				jmp	short loc_343		; (36DC)
0020:36DA  90					nop
0020:36DB  00 E8				add	al,ch
0020:36DD  B8 2401				mov	ax,2401h
0020:36E0  00 A4 0A0C				add	byte ptr ds:[0A0Ch][si],ah	; (0C06:0A0C=2Eh)
0020:36E4  02 E8				add	ch,al
0020:36E6  AF					scasw				; Scan es:[di] for ax
0020:36E7  01 31				add	[bx+di],si
0020:36E9  00 EB				add	bl,ch
0020:36EB  10 FF				adc	bh,bh
0020:36ED  03 0A				add	cx,[bp+si]
0020:36EF  02 4B 42				add	cl,[bp+di+42h]
0020:36F2  00 EB				add	bl,ch
0020:36F4  0C 00				or	al,0
0020:36F6  00 00				add	[bx+si],al
0020:36F8  00 00				add	[bx+si],al
0020:36FA  00 00				add	[bx+si],al
0020:36FC  E8 0198				call	sub_70			; (3897)
  
				;ƒƒƒƒƒ Indexed Entry Point ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ
  
0020:36FF			loc_344:
0020:36FF  3C 00				cmp	al,0
0020:3701  E9 0132				jmp	loc_360			; (3836)
0020:3704  EB 10				jmp	short loc_345		; (3716)
0020:3706  FF 03				inc	word ptr [bp+di]
0020:3708  0A 02				or	al,[bp+si]
0020:370A  4B					dec	bx
0020:370B  42					inc	dx
0020:370C  00 EB				add	bl,ch
0020:370E  0C 00				or	al,0
0020:3710  00 00				add	[bx+si],al
0020:3712  00 00				add	[bx+si],al
0020:3714  00 00				add	[bx+si],al
0020:3716			loc_345:
0020:3716  E8 017E				call	sub_70			; (3897)
0020:3719  56					push	si
0020:371A  00 E9				add	cl,ch
0020:371C  18 01				sbb	[bx+di],al
0020:371E  EB 10				jmp	short loc_346		; (3730)
0020:3720  FF 03				inc	word ptr [bp+di]
0020:3722  0A 02				or	al,[bp+si]
0020:3724  4B					dec	bx
0020:3725  42					inc	dx
0020:3726  00 EB				add	bl,ch
0020:3728  0C 00				or	al,0
0020:372A  00 00				add	[bx+si],al
0020:372C  00 00				add	[bx+si],al
0020:372E  00 00				add	[bx+si],al
0020:3730			loc_346:
0020:3730  E8 0164				call	sub_70			; (3897)
0020:3733  70 00				jo	loc_347			; Jump if overflow=1
0020:3735			loc_347:
0020:3735  E9 00FE				jmp	loc_360			; (3836)
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 111

0020:3738  EB 10				jmp	short loc_348		; (374A)
0020:373A  FF 03				inc	word ptr [bp+di]
0020:373C  0A 02				or	al,[bp+si]
0020:373E  4B					dec	bx
0020:373F  42					inc	dx
0020:3740  00 EB				add	bl,ch
0020:3742  0C 00				or	al,0
0020:3744  00 00				add	[bx+si],al
0020:3746  00 00				add	[bx+si],al
0020:3748  00 00				add	[bx+si],al
0020:374A			loc_348:
0020:374A  E8 014A				call	sub_70			; (3897)
0020:374D  8A 00				mov	al,[bx+si]
0020:374F  E9 00E4				jmp	loc_360			; (3836)
0020:3752  EB 10				jmp	short loc_349		; (3764)
0020:3754  B3 07				mov	bl,7
0020:3756  0A 02				or	al,[bp+si]
0020:3758  4B					dec	bx
0020:3759  42					inc	dx
0020:375A  00 EB				add	bl,ch
0020:375C  0C 00				or	al,0
0020:375E  00 00				add	[bx+si],al
0020:3760  00 00				add	[bx+si],al
0020:3762  00 00				add	[bx+si],al
0020:3764			loc_349:
0020:3764  E8 0130				call	sub_70			; (3897)
0020:3767  A4					movsb				; Mov [si] to es:[di]
0020:3768  00 E9				add	cl,ch
0020:376A  CA EB00				retf	0EB00h			; Return far
0020:376D  10 B4 0A06				adc	byte ptr ds:[0A06h][si],dh	; (0020:0A06=0)
0020:3771  02 4B 42				add	cl,[bp+di+42h]
0020:3774  00 EB				add	bl,ch
0020:3776  0C 00				or	al,0
0020:3778  00 00				add	[bx+si],al
0020:377A  00 00				add	[bx+si],al
0020:377C  00 00				add	[bx+si],al
0020:377E  E8 0116				call	sub_70			; (3897)
0020:3781  BE E900				mov	si,0E900h
0020:3784  B0 00				mov	al,0
0020:3786  EB 10				jmp	short loc_350		; (3798)
0020:3788  B4 06				mov	ah,6
0020:378A  0A 02				or	al,[bp+si]
0020:378C  4B					dec	bx
0020:378D  42					inc	dx
0020:378E  00 EB				add	bl,ch
0020:3790  0C 00				or	al,0
0020:3792  00 00				add	[bx+si],al
0020:3794  0000			data_437	dw	0
0020:3796  0000			data_438	dw	0
0020:3798			loc_350:
0020:3798  E8 00FC				call	sub_70			; (3897)
0020:379B  D8 00				esc	0,[bx+si]		; coprocessor escape
0020:379D  E9 0096				jmp	loc_360			; (3836)
0020:37A0  EB 10				jmp	short loc_351		; (37B2)
0020:37A2  06B4			data_439	dw	6B4h
0020:37A4  020A			data_440	dw	20Ah
0020:37A6  4B					dec	bx
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 112

0020:37A7  42					inc	dx
0020:37A8  00 EB				add	bl,ch
0020:37AA  0C 00				or	al,0
0020:37AC  00 00				add	[bx+si],al
0020:37AE  00 00				add	[bx+si],al
0020:37B0  00 00				add	[bx+si],al
0020:37B2			loc_351:
0020:37B2  E8 00E2				call	sub_70			; (3897)
0020:37B5  F2					db	0F2h
0020:37B6  00 EB				add	bl,ch
0020:37B8  7D 90				jge	loc_348			; Jump if > or =
0020:37BA  EB 10				jmp	short loc_352		; (37CC)
0020:37BC  B4 06				mov	ah,6
0020:37BE  0A 02				or	al,[bp+si]
0020:37C0  4B					dec	bx
0020:37C1  42					inc	dx
0020:37C2  00 EB				add	bl,ch
0020:37C4  0C 00				or	al,0
0020:37C6  00 00				add	[bx+si],al
0020:37C8  00 00				add	[bx+si],al
0020:37CA  00 00				add	[bx+si],al
0020:37CC			loc_352:
0020:37CC  E8 00C8				call	sub_70			; (3897)
0020:37CF  0C 01				or	al,1
0020:37D1  EB 63				jmp	short loc_360		; (3836)
0020:37D3  90					nop
0020:37D4  EB 10				jmp	short loc_353		; (37E6)
0020:37D6  B4 06				mov	ah,6
0020:37D8  0A 02				or	al,[bp+si]
0020:37DA  4B					dec	bx
0020:37DB  42					inc	dx
0020:37DC  00 EB				add	bl,ch
0020:37DE  0C 00				or	al,0
0020:37E0  00 00				add	[bx+si],al
0020:37E2  00 00				add	[bx+si],al
0020:37E4  00 00				add	[bx+si],al
0020:37E6			loc_353:
0020:37E6  E8 00AE				call	sub_70			; (3897)
0020:37E9  26: EB01		data_441	dw	0EB01h
0020:37EC  49					dec	cx
0020:37ED  90					nop
  
				;ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
				;			       SUBROUTINE
				;‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
  
				sub_69		proc	near
0020:37EE  1E					push	ds
0020:37EF  50					push	ax
0020:37F0  B8 0040				mov	ax,40h
0020:37F3  8E D8				mov	ds,ax
0020:37F5  9F					lahf				; Load ah from flags
0020:37F6  F7 06 0314 2400			test	word ptr ds:[314h],2400h	; (0040:0314=3200h)
0020:37FC  75 0C				jnz	loc_355			; Jump if not zero
0020:37FE  F0> 81 26 0314 FDFF	           lock	and	word ptr ds:[314h],0FDFFh	; (0040:0314=3200h)
0020:3805			loc_354:
0020:3805  9E					sahf				; Store ah into flags
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 113

0020:3806  58					pop	ax
0020:3807  1F					pop	ds
0020:3808  EB 03				jmp	short loc_356		; (380D)
0020:380A			loc_355:
0020:380A  FA					cli				; Disable interrupts
0020:380B  EB F8				jmp	short loc_354		; (3805)
0020:380D			loc_356:
0020:380D  C3					retn
				sub_69		endp
  
0020:380E  1E					push	ds
0020:380F  50					push	ax
0020:3810  B8 0040				mov	ax,40h
0020:3813  8E D8				mov	ds,ax
0020:3815  9F					lahf				; Load ah from flags
0020:3816  F7 06 0314 0003			test	word ptr ds:[314h],3	; (0040:0314=3200h)
0020:381C  75 14				jnz	loc_358			; Jump if not zero
0020:381E  F7 06 0314 2400			test	word ptr ds:[314h],2400h	; (0040:0314=3200h)
0020:3824  75 0C				jnz	loc_358			; Jump if not zero
0020:3826  F0> 81 0E 0314 0200	           lock	or	word ptr ds:[314h],200h	; (0040:0314=3200h)
0020:382D			loc_357:
0020:382D  9E					sahf				; Store ah into flags
0020:382E  58					pop	ax
0020:382F  1F					pop	ds
0020:3830  EB 03				jmp	short loc_359		; (3835)
0020:3832			loc_358:
0020:3832  FB					sti				; Enable interrupts
0020:3833  EB F8				jmp	short loc_357		; (382D)
0020:3835			loc_359:
0020:3835  C3					retn
0020:3836			loc_360:
0020:3836  1E					push	ds
0020:3837  50					push	ax
0020:3838  B8 0040				mov	ax,40h
0020:383B  8E D8				mov	ds,ax
0020:383D  F7 06 0314 2400			test	word ptr ds:[314h],2400h	; (0040:0314=3200h)
0020:3843  75 4F				jnz	loc_368			; Jump if not zero
0020:3845  55					push	bp
0020:3846  8B EC				mov	bp,sp
0020:3848  8B 46 0A				mov	ax,[bp+0Ah]
0020:384B  5D					pop	bp
0020:384C  A9 0100				test	ax,100h
0020:384F  75 43				jnz	loc_368			; Jump if not zero
0020:3851  A9 0200				test	ax,200h
0020:3854  74 22				jz	loc_364			; Jump if zero
0020:3856  F0> 81 0E 0314 0200	           lock	or	word ptr ds:[314h],200h	; (0040:0314=3200h)
0020:385D  F7 06 0314 0003			test	word ptr ds:[314h],3	; (0040:0314=3200h)
0020:3863  75 2F				jnz	loc_368			; Jump if not zero
0020:3865			loc_361:
0020:3865  86 E0				xchg	ah,al
0020:3867  FC					cld				; Clear direction
0020:3868  A8 04				test	al,4
0020:386A  75 25				jnz	loc_367			; Jump if not zero
0020:386C			loc_362:
0020:386C  A8 08				test	al,8
0020:386E  75			data_443	db	75h
0020:386F  11 70 19				adc	[bx+si+19h],si
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 114

0020:3872			loc_363:
0020:3872  9E					sahf				; Store ah into flags
0020:3873  58					pop	ax
0020:3874  1F					pop	ds
0020:3875  CA 0002				retf	2			; Return far
0020:3878			loc_364:
0020:3878  F0> 81 26 0314 FDFF	           lock	and	data_153,0FDFFh		; (0020:0314=0)
0020:387F  EB E4				jmp	short loc_361		; (3865)
0020:3881			loc_365:
0020:3881  70 EF				jo	loc_363			; Jump if overflow=1
0020:3883  50					push	ax
0020:3884  B0 7F				mov	al,7Fh
0020:3886  04 02				add	al,2
0020:3888  58					pop	ax
0020:3889  EB E7				jmp	short loc_363		; (3872)
0020:388B			loc_366:
0020:388B  50					push	ax
0020:388C  32 C0				xor	al,al			; Zero register
0020:388E  58					pop	ax
0020:388F  EB E1				jmp	short loc_363		; (3872)
0020:3891			loc_367:
0020:3891  FD					std				; Set direction flag
0020:3892  EB D8				jmp	short loc_362		; (386C)
0020:3894			loc_368:
0020:3894  58					pop	ax
0020:3895  1F					pop	ds
0020:3896  CF					iret				; Interrupt return
  
				;ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
				;			       SUBROUTINE
				;‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
  
				sub_70		proc	near
0020:3897  50					push	ax
0020:3898  55					push	bp
0020:3899  06					push	es
0020:389A  2E: 8E 06 000A			mov	es,cs:data_71		; (0020:000A=0)
0020:389F  2E: 8B 2E 0010			mov	bp,word ptr cs:data_73+2	; (0020:0010=0)
0020:38A4  B0 01				mov	al,1
0020:38A6  26: 86 46 00				xchg	al,es:[bp]
0020:38AA  3C 00				cmp	al,0
0020:38AC  5175			data_445	dw	5175h
0020:38AE  2E			data_446	db	2Eh
  
				;ﬂﬂﬂﬂ External Entry into Subroutine ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
  
				sub_71:
0020:38AF  83 2E 0010 08			sub	word ptr ds:[10h],8	; (0C06:0010=0FE7Fh)
0020:38B4			loc_369:
0020:38B4  26: 89 66 02				mov	es:[bp+2],sp
0020:38B8  8C26			data_448	dw	8C26h
0020:38BA  56			data_449	db	56h
0020:38BB  04			data_450	db	4
0020:38BC  8B C5				mov	ax,bp
0020:38BE  26: 8B 6E 06				mov	bp,es:[bp+6]
0020:38C2  26: 39 46 00				cmp	es:[bp],ax
0020:38C6  75 44				jne	loc_372			; Jump if not equal
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 115

0020:38C8  55					push	bp
0020:38C9  8B EC				mov	bp,sp
0020:38CB  8B 46 08				mov	ax,[bp+8]
0020:38CE  5D					pop	bp
0020:38CF  06					push	es
0020:38D0  17					pop	ss
0020:38D1  8B E5				mov	sp,bp
0020:38D3  8B E8				mov	bp,ax
0020:38D5  2E: 8B 6E 00				mov	bp,cs:[bp]
0020:38D9  9C					pushf				; Push flags
0020:38DA  2E: FF 5E 00				call	dword ptr cs:[bp]	;*
0020:38DE  8B EC				mov	bp,sp
0020:38E0  26: 8B 6E 00				mov	bp,es:[bp]
0020:38E4  26: 8E 56 04				mov	ss,es:[bp+4]
0020:38E8  26: 8B 66 02				mov	sp,es:[bp+2]
0020:38EC  26: C6 46 00 00			mov	byte ptr es:[bp],0
0020:38F1  2E: 89 2E 0010			mov	word ptr cs:data_73+2,bp	; (0020:0010=0)
0020:38F6  07					pop	es
0020:38F7  5D					pop	bp
0020:38F8  58					pop	ax
0020:38F9  83 C4 02				add	sp,2
0020:38FC  37E9			data_451	dw	37E9h
0020:38FE  3CFF			data_452	dw	3CFFh
0020:3900  7401			data_453	dw	7401h
0020:3902  04			data_454	db	4
0020:3903  26: 86 46 00				xchg	al,es:[bp]
0020:3907			loc_371:
0020:3907  E8 0012				call	sub_72			; (391C)
0020:390A  EB A8				jmp	short loc_369		; (38B4)
0020:390C			loc_372:
0020:390C  2E: 3B 2E 000C			cmp	bp,cs:data_72		; (0020:000C=0)
0020:3911  72 F4				jb	loc_371			; Jump if below
0020:3913  8B E8				mov	bp,ax
0020:3915  26: C6 46 00 03			mov	byte ptr es:[bp],3
0020:391A  EB EB				jmp	short loc_371		; (3907)
				sub_70		endp
  
  
				;ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
				;			       SUBROUTINE
				;‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
  
				sub_72		proc	near
0020:391C  2E: 8B 2E 000E			mov	bp,word ptr cs:data_73	; (0020:000E=0)
0020:3921			loc_373:
0020:3921  26: 80 7E 00 00			cmp	byte ptr es:[bp],0
0020:3926  75 12				jne	loc_374			; Jump if not equal
0020:3928  B0 01				mov	al,1
0020:392A  26: 86 46 00				xchg	al,es:[bp]
0020:392E  3C 00				cmp	al,0
0020:3930  74 14				je	loc_375			; Jump if equal
0020:3932  3C 01				cmp	al,1
0020:3934  74 04				je	loc_374			; Jump if equal
0020:3936  26: 88 46 00				mov	es:[bp],al
0020:393A			loc_374:
0020:393A  2E: 3B 2E 000C			cmp	bp,cs:data_72		; (0020:000C=0)
0020:393F  74 06				je	loc_376			; Jump if equal
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 116

0020:3941  83 ED 08				sub	bp,8
0020:3944  EB DB				jmp	short loc_373		; (3921)
0020:3946			loc_375:
0020:3946  C3					retn
0020:3947			loc_376:
0020:3947  E8 FEA4				call	sub_69			; (37EE)
0020:394A  B0 FF				mov	al,0FFh
0020:394C  E6 21				out	21h,al			; port 21h, 8259-1 int comands
0020:394E  E6 A1				out	0A1h,al			; port 0A1h, inhibit IRQ8 RTC
										;  al = 0FFh, inhibit interrupts
0020:3950  8C CE				mov	si,cs
0020:3952  8E DE				mov	ds,si
0020:3954  BE 02CB				mov	si,2CBh
0020:3957  50					push	ax
0020:3958  1E					push	ds
0020:3959  B8 0070				mov	ax,70h
0020:395C  8E D8				mov	ds,ax
0020:395E  F6 06 0337 01			test	byte ptr ds:[337h],1	; (0070:0337=0)
0020:3963  1F					pop	ds
0020:3964  58					pop	ax
0020:3965  74 05				jz	loc_377			; Jump if zero
0020:3967  9A 0070:0338		;*		call	far ptr sub_216		;*(0070:0338)
0020:3967  9A 38 03 70 00			db	 9Ah, 38h, 03h, 70h, 00h
0020:396C			loc_377:
0020:396C  AC					lodsb				; String [si] to al
0020:396D  3C 24				cmp	al,24h			; '$'
0020:396F  74 08				je	loc_378			; Jump if equal
0020:3971  B3 07				mov	bl,7
0020:3973  B4 0E				mov	ah,0Eh
0020:3975  CD 10				int	10h			; Video display   ah=functn 0Eh
										;  write char al, teletype mode
0020:3977  EB F3				jmp	short loc_377		; (396C)
0020:3979			loc_378:
0020:3979  EB FE				jmp	short loc_378		; (3979)
				sub_72		endp
  
0020:397B  0D 070A				or	ax,70Ah
0020:397E  0D 0A 49 6E 74 65			db	0Dh, 0Ah, 'Internal stack overflo'
0020:3984  72 6E 61 6C 20 73
0020:398A  74 61 63 6B 20 6F
0020:3990  76 65 72 66 6C 6F
0020:3996  77 0D 0A 53 79 73			db	'w', 0Dh, 0Ah, 'System halted', 0Dh
0020:399C  74 65 6D 20 68 61
0020:39A2  6C 74 65 64 0D
0020:39A7  0A 24				db	0Ah, '$'
0020:39A9  00					db	0
0020:39AA  06					push	es
0020:39AB  00 02				add	[bp+si],al
0020:39AD  00 C3				add	bl,al
0020:39AF  3C 00				cmp	al,0
0020:39B1  00 00				add	[bx+si],al
0020:39B3  00 00				add	[bx+si],al
0020:39B5  00 C6				add	dh,al
0020:39B7  0007[00]				db	7 dup (0)
0020:39BE  46					inc	si
0020:39BF  01 00				add	[bx+si],ax
0020:39C1  00 00				add	[bx+si],al
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 117

0020:39C3  00 00				add	[bx+si],al
0020:39C5  00 C6				add	dh,al
0020:39C7  01 00				add	[bx+si],ax
0020:39C9  00 00				add	[bx+si],al
0020:39CB  00 00				add	[bx+si],al
0020:39CD  00 46 02				add	[bp+2],al
0020:39D0  00 00				add	[bx+si],al
0020:39D2  00 00				add	[bx+si],al
0020:39D4  00 00				add	[bx+si],al
0020:39D6  C6 02 00				mov	byte ptr [bp+si],0
0020:39D9  00 00				add	[bx+si],al
0020:39DB  00 00				add	[bx+si],al
0020:39DD  00 46 03				add	[bp+3],al
0020:39E0  00 00				add	[bx+si],al
0020:39E2  00 00				add	[bx+si],al
0020:39E4  00 00				add	[bx+si],al
0020:39E6  C6 03 00				mov	byte ptr [bp+di],0
0020:39E9  00 00				add	[bx+si],al
0020:39EB  00 00				add	[bx+si],al
0020:39ED  00 46 04				add	[bp+4],al
0020:39F0  00 00				add	[bx+si],al
0020:39F2  F8					clc				; Clear carry flag
0020:39F3  05 8E07				add	ax,8E07h
0020:39F6  C6 04 00				mov	byte ptr [si],0
0020:39F9  0007[00]				db	7 dup (0)
0020:3A00  00			data_462	db	0			; Data table (indexed access)
0020:3A01  00 00				add	[bx+si],al
0020:3A03  00 00				add	[bx+si],al
0020:3A05  00 00				add	[bx+si],al
0020:3A07  00 00				add	[bx+si],al
0020:3A09  00 00				add	[bx+si],al
0020:3A0B  00 00				add	[bx+si],al
0020:3A0D  00 00				add	[bx+si],al
0020:3A0F  00 00				add	[bx+si],al
0020:3A11  00 00				add	[bx+si],al
0020:3A13  00 00				add	[bx+si],al
0020:3A15  00 00				add	[bx+si],al
0020:3A17  00 00				add	[bx+si],al
0020:3A19  00 00				add	[bx+si],al
0020:3A1B  00 00				add	[bx+si],al
0020:3A1D  00 00				add	[bx+si],al
0020:3A1F  00 00				add	[bx+si],al
0020:3A21  00 00				add	[bx+si],al
0020:3A23  00 00				add	[bx+si],al
0020:3A25  00 00				add	[bx+si],al
0020:3A27  00 00				add	[bx+si],al
0020:3A29  00 00				add	[bx+si],al
0020:3A2B  00 00				add	[bx+si],al
0020:3A2D  00 00				add	[bx+si],al
0020:3A2F  00 00				add	[bx+si],al
0020:3A31  00 00				add	[bx+si],al
0020:3A33  00 00				add	[bx+si],al
0020:3A35  00 00				add	[bx+si],al
0020:3A37  00 00				add	[bx+si],al
0020:3A39  00 00				add	[bx+si],al
0020:3A3B  00 00				add	[bx+si],al
0020:3A3D  00 00				add	[bx+si],al
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 118

0020:3A3F  00 00				add	[bx+si],al
0020:3A41  00 00				add	[bx+si],al
0020:3A43  00 00				add	[bx+si],al
0020:3A45  00 00				add	[bx+si],al
0020:3A47  00 00				add	[bx+si],al
0020:3A49  00 00				add	[bx+si],al
0020:3A4B  00 00				add	[bx+si],al
0020:3A4D  00 00				add	[bx+si],al
0020:3A4F  00 00				add	[bx+si],al
0020:3A51  00 00				add	[bx+si],al
0020:3A53  00 00				add	[bx+si],al
0020:3A55  00 00				add	[bx+si],al
0020:3A57  00 00				add	[bx+si],al
0020:3A59  00 00				add	[bx+si],al
0020:3A5B  00 00				add	[bx+si],al
0020:3A5D  00 00				add	[bx+si],al
0020:3A5F  00 00				add	[bx+si],al
0020:3A61  00 00				add	[bx+si],al
0020:3A63  00 00				add	[bx+si],al
0020:3A65  00 00				add	[bx+si],al
0020:3A67  00 00				add	[bx+si],al
0020:3A69  00 00				add	[bx+si],al
0020:3A6B  00 00				add	[bx+si],al
0020:3A6D  00 00				add	[bx+si],al
0020:3A6F  00 00				add	[bx+si],al
0020:3A71  00 00				add	[bx+si],al
0020:3A73  00 00				add	[bx+si],al
0020:3A75  00 00				add	[bx+si],al
0020:3A77  00 00				add	[bx+si],al
0020:3A79  00 00				add	[bx+si],al
0020:3A7B  00 00				add	[bx+si],al
0020:3A7D  00 00				add	[bx+si],al
0020:3A7F  00 00				add	[bx+si],al
0020:3A81  00 00				add	[bx+si],al
0020:3A83  00 00				add	[bx+si],al
0020:3A85  00 00				add	[bx+si],al
0020:3A87  00 00				add	[bx+si],al
0020:3A89  00 00				add	[bx+si],al
0020:3A8B  00 00				add	[bx+si],al
0020:3A8D  00 00				add	[bx+si],al
0020:3A8F  00 00				add	[bx+si],al
0020:3A91  00 00				add	[bx+si],al
0020:3A93  00 00				add	[bx+si],al
0020:3A95  00 00				add	[bx+si],al
0020:3A97  00 00				add	[bx+si],al
0020:3A99  00 00				add	[bx+si],al
0020:3A9B  00 00				add	[bx+si],al
0020:3A9D  00 00				add	[bx+si],al
0020:3A9F  00 00				add	[bx+si],al
0020:3AA1  00 00				add	[bx+si],al
0020:3AA3  00 00				add	[bx+si],al
0020:3AA5  00 00				add	[bx+si],al
0020:3AA7  00 00				add	[bx+si],al
0020:3AA9  00 00				add	[bx+si],al
0020:3AAB  00 00				add	[bx+si],al
0020:3AAD  00 00				add	[bx+si],al
0020:3AAF  00 00				add	[bx+si],al
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 119

0020:3AB1  00 00				add	[bx+si],al
0020:3AB3  00 00				add	[bx+si],al
0020:3AB5  00 00				add	[bx+si],al
0020:3AB7  00 00				add	[bx+si],al
0020:3AB9  00 00				add	[bx+si],al
0020:3ABB  00 00				add	[bx+si],al
0020:3ABD  00 00				add	[bx+si],al
0020:3ABF  00 00				add	[bx+si],al
0020:3AC1  00 00				add	[bx+si],al
0020:3AC3  00 00				add	[bx+si],al
0020:3AC5  00 00				add	[bx+si],al
0020:3AC7  00 00				add	[bx+si],al
0020:3AC9  00 00				add	[bx+si],al
0020:3ACB  00 00				add	[bx+si],al
0020:3ACD  00 00				add	[bx+si],al
0020:3ACF  00 00				add	[bx+si],al
0020:3AD1  00 00				add	[bx+si],al
0020:3AD3  00 00				add	[bx+si],al
0020:3AD5  00 00				add	[bx+si],al
0020:3AD7  00 00				add	[bx+si],al
0020:3AD9  00 00				add	[bx+si],al
0020:3ADB  00 00				add	[bx+si],al
0020:3ADD  00 00				add	[bx+si],al
0020:3ADF  00 00				add	[bx+si],al
0020:3AE1  00 00				add	[bx+si],al
0020:3AE3  00 00				add	[bx+si],al
0020:3AE5  00 00				add	[bx+si],al
0020:3AE7  00 00				add	[bx+si],al
0020:3AE9  00 00				add	[bx+si],al
0020:3AEB  00 00				add	[bx+si],al
0020:3AED  00 00				add	[bx+si],al
0020:3AEF  00 00				add	[bx+si],al
0020:3AF1  00 00				add	[bx+si],al
0020:3AF3  00 00				add	[bx+si],al
0020:3AF5  00 08				add	[bx+si],cl
0020:3AF7  00 00				add	[bx+si],al
0020:3AF9  00 00				add	[bx+si],al
0020:3AFB  00 00				add	[bx+si],al
0020:3AFD  00 00				add	[bx+si],al
0020:3AFF  00 00				add	[bx+si],al
0020:3B01  00 00				add	[bx+si],al
0020:3B03  00 00				add	[bx+si],al
0020:3B05  00 00				add	[bx+si],al
0020:3B07  00 00				add	[bx+si],al
0020:3B09  00 00				add	[bx+si],al
0020:3B0B  00 00				add	[bx+si],al
0020:3B0D  00 00				add	[bx+si],al
0020:3B0F  00 00				add	[bx+si],al
0020:3B11  00 00				add	[bx+si],al
0020:3B13  00 00				add	[bx+si],al
0020:3B15  00 00				add	[bx+si],al
0020:3B17  00 00				add	[bx+si],al
0020:3B19  00 00				add	[bx+si],al
0020:3B1B  00 00				add	[bx+si],al
0020:3B1D  00 00				add	[bx+si],al
0020:3B1F  00 00				add	[bx+si],al
0020:3B21  00 00				add	[bx+si],al
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 120

0020:3B23  00 00				add	[bx+si],al
  
				;ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
				;			       SUBROUTINE
				;‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
  
				sub_73		proc	near
0020:3B25  00 00				add	[bx+si],al
0020:3B27  00 00				add	[bx+si],al
0020:3B29  00 00				add	[bx+si],al
0020:3B2B  00 00				add	[bx+si],al
0020:3B2D  00 00				add	[bx+si],al
0020:3B2F  00 00				add	[bx+si],al
0020:3B31  00 00				add	[bx+si],al
0020:3B33  00 00				add	[bx+si],al
0020:3B35  00 00				add	[bx+si],al
0020:3B37  00 00				add	[bx+si],al
0020:3B39  00 00				add	[bx+si],al
0020:3B3B  00 00				add	[bx+si],al
0020:3B3D  00 00				add	[bx+si],al
0020:3B3F  00 00				add	[bx+si],al
0020:3B41  00 00				add	[bx+si],al
0020:3B43  00 00				add	[bx+si],al
0020:3B45  00 00				add	[bx+si],al
0020:3B47  00 00				add	[bx+si],al
0020:3B49  00 00				add	[bx+si],al
0020:3B4B  00 00				add	[bx+si],al
0020:3B4D  00 00				add	[bx+si],al
0020:3B4F  00 00				add	[bx+si],al
0020:3B51  00 00				add	[bx+si],al
0020:3B53  00 00				add	[bx+si],al
0020:3B55  00 00				add	[bx+si],al
0020:3B57  00 00				add	[bx+si],al
0020:3B59  00 00				add	[bx+si],al
0020:3B5B  00 00				add	[bx+si],al
0020:3B5D  00 00				add	[bx+si],al
0020:3B5F  00 00				add	[bx+si],al
0020:3B61  00 00				add	[bx+si],al
0020:3B63  00 00				add	[bx+si],al
0020:3B65  00 00				add	[bx+si],al
0020:3B67  00 00				add	[bx+si],al
0020:3B69  00 00				add	[bx+si],al
0020:3B6B  00 00				add	[bx+si],al
0020:3B6D  00 00				add	[bx+si],al
0020:3B6F  00 00				add	[bx+si],al
0020:3B71  00 00				add	[bx+si],al
0020:3B73  00 00				add	[bx+si],al
0020:3B75  00 10				add	[bx+si],dl
0020:3B77  00 00				add	[bx+si],al
0020:3B79  00 00				add	[bx+si],al
0020:3B7B  00 00				add	[bx+si],al
0020:3B7D  00 00				add	[bx+si],al
0020:3B7F  00 00				add	[bx+si],al
0020:3B81  00 00				add	[bx+si],al
0020:3B83  00 00				add	[bx+si],al
0020:3B85  00 00				add	[bx+si],al
0020:3B87  00 00				add	[bx+si],al
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 121

0020:3B89  00 00				add	[bx+si],al
0020:3B8B  00 00				add	[bx+si],al
0020:3B8D  00 00				add	[bx+si],al
0020:3B8F  00 00				add	[bx+si],al
0020:3B91  00 00				add	[bx+si],al
0020:3B93  00 00				add	[bx+si],al
0020:3B95  00 00				add	[bx+si],al
0020:3B97  00 00				add	[bx+si],al
0020:3B99  00 00				add	[bx+si],al
0020:3B9B  00 00				add	[bx+si],al
0020:3B9D  00 00				add	[bx+si],al
0020:3B9F  00 00				add	[bx+si],al
0020:3BA1  00 00				add	[bx+si],al
0020:3BA3  00 00				add	[bx+si],al
0020:3BA5  00 00				add	[bx+si],al
0020:3BA7  00 00				add	[bx+si],al
0020:3BA9  00 00				add	[bx+si],al
0020:3BAB  00 00				add	[bx+si],al
0020:3BAD  00 00				add	[bx+si],al
0020:3BAF  00 00				add	[bx+si],al
0020:3BB1  00 00				add	[bx+si],al
0020:3BB3  00 00				add	[bx+si],al
0020:3BB5  00 00				add	[bx+si],al
0020:3BB7  00 00				add	[bx+si],al
0020:3BB9  00 00				add	[bx+si],al
0020:3BBB  00 00				add	[bx+si],al
0020:3BBD  00 00				add	[bx+si],al
0020:3BBF  00 00				add	[bx+si],al
0020:3BC1  00 00				add	[bx+si],al
0020:3BC3  00 00				add	[bx+si],al
0020:3BC5  00 00				add	[bx+si],al
0020:3BC7  00 00				add	[bx+si],al
0020:3BC9  00 00				add	[bx+si],al
0020:3BCB  00 00				add	[bx+si],al
0020:3BCD  00 00				add	[bx+si],al
0020:3BCF  00 00				add	[bx+si],al
0020:3BD1  00 00				add	[bx+si],al
0020:3BD3  00 00				add	[bx+si],al
0020:3BD5  00 00				add	[bx+si],al
0020:3BD7  00 00				add	[bx+si],al
0020:3BD9  00			data_465	db	0
0020:3BDA  00 00				add	[bx+si],al
0020:3BDC  00 00				add	[bx+si],al
0020:3BDE  00 00				add	[bx+si],al
0020:3BE0  00 00				add	[bx+si],al
0020:3BE2  00 00				add	[bx+si],al
0020:3BE4  00 00				add	[bx+si],al
0020:3BE6  00 00				add	[bx+si],al
0020:3BE8  00 00				add	[bx+si],al
0020:3BEA  00			data_466	db	0
0020:3BEB  0000			data_467	dw	0
0020:3BED  0000			data_468	dw	0
0020:3BEF  00 00				add	[bx+si],al
0020:3BF1  00 00				add	[bx+si],al
0020:3BF3  00 00				add	[bx+si],al
0020:3BF5  00 18				add	[bx+si],bl
0020:3BF7  00 00				add	[bx+si],al
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 122

0020:3BF9  00 00				add	[bx+si],al
0020:3BFB  00 00				add	[bx+si],al
0020:3BFD  00 00				add	[bx+si],al
0020:3BFF  00 00				add	[bx+si],al
0020:3C01  00 00				add	[bx+si],al
0020:3C03  00 00				add	[bx+si],al
0020:3C05  00 00				add	[bx+si],al
0020:3C07  00 00				add	[bx+si],al
0020:3C09  00 00				add	[bx+si],al
0020:3C0B  00 00				add	[bx+si],al
0020:3C0D  00 00				add	[bx+si],al
0020:3C0F  00 00				add	[bx+si],al
0020:3C11  00 00				add	[bx+si],al
0020:3C13  00 00				add	[bx+si],al
0020:3C15  00 00				add	[bx+si],al
0020:3C17  00 00				add	[bx+si],al
0020:3C19  00 00				add	[bx+si],al
0020:3C1B  00 00				add	[bx+si],al
0020:3C1D  00 00				add	[bx+si],al
0020:3C1F  00 00				add	[bx+si],al
0020:3C21  00 00				add	[bx+si],al
0020:3C23  00 00				add	[bx+si],al
0020:3C25  00 00				add	[bx+si],al
0020:3C27  00 00				add	[bx+si],al
0020:3C29  00 00				add	[bx+si],al
0020:3C2B  00 00				add	[bx+si],al
0020:3C2D  00 00				add	[bx+si],al
0020:3C2F  00 00				add	[bx+si],al
0020:3C31  00 00				add	[bx+si],al
0020:3C33  00 00				add	[bx+si],al
0020:3C35  00 00				add	[bx+si],al
0020:3C37  00 00				add	[bx+si],al
0020:3C39  00 00				add	[bx+si],al
0020:3C3B  00 00				add	[bx+si],al
0020:3C3D  00 00				add	[bx+si],al
0020:3C3F  00 00				add	[bx+si],al
0020:3C41  00 00				add	[bx+si],al
0020:3C43  00 00				add	[bx+si],al
0020:3C45  00 00				add	[bx+si],al
0020:3C47  00 00				add	[bx+si],al
0020:3C49  00 00				add	[bx+si],al
0020:3C4B  00 00				add	[bx+si],al
0020:3C4D  00 00				add	[bx+si],al
0020:3C4F  00 00				add	[bx+si],al
0020:3C51  00 00				add	[bx+si],al
0020:3C53  00 00				add	[bx+si],al
0020:3C55  00 00				add	[bx+si],al
0020:3C57  00 00				add	[bx+si],al
0020:3C59  00 00				add	[bx+si],al
0020:3C5B  00 00				add	[bx+si],al
0020:3C5D  00 00				add	[bx+si],al
0020:3C5F  00 00				add	[bx+si],al
0020:3C61  00 00				add	[bx+si],al
0020:3C63  00 00				add	[bx+si],al
0020:3C65  00 00				add	[bx+si],al
0020:3C67  00 00				add	[bx+si],al
0020:3C69  00 00				add	[bx+si],al
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 123

0020:3C6B  00 00				add	[bx+si],al
0020:3C6D  00 00				add	[bx+si],al
0020:3C6F  00 00				add	[bx+si],al
0020:3C71  00 00				add	[bx+si],al
0020:3C73  00 00				add	[bx+si],al
0020:3C75  00 20				add	[bx+si],ah
0020:3C77  00 00				add	[bx+si],al
0020:3C79  00 00				add	[bx+si],al
0020:3C7B  00 00				add	[bx+si],al
0020:3C7D  00 00				add	[bx+si],al
0020:3C7F  00 00				add	[bx+si],al
0020:3C81  00 00				add	[bx+si],al
0020:3C83  00 00				add	[bx+si],al
0020:3C85  00 00				add	[bx+si],al
0020:3C87  00 00				add	[bx+si],al
0020:3C89  00 00				add	[bx+si],al
0020:3C8B  00 00				add	[bx+si],al
0020:3C8D  00 00				add	[bx+si],al
0020:3C8F  00 00				add	[bx+si],al
0020:3C91  00 00				add	[bx+si],al
0020:3C93  00 00				add	[bx+si],al
0020:3C95  00 00				add	[bx+si],al
0020:3C97  00 00				add	[bx+si],al
0020:3C99  00 00				add	[bx+si],al
0020:3C9B  00 00				add	[bx+si],al
0020:3C9D  00 00				add	[bx+si],al
0020:3C9F  00 00				add	[bx+si],al
0020:3CA1  00 00				add	[bx+si],al
0020:3CA3  00 00				add	[bx+si],al
0020:3CA5  00 00				add	[bx+si],al
0020:3CA7  00 00				add	[bx+si],al
0020:3CA9  00 00				add	[bx+si],al
0020:3CAB  00 00				add	[bx+si],al
0020:3CAD  00 00				add	[bx+si],al
0020:3CAF  00 00				add	[bx+si],al
0020:3CB1  00 00				add	[bx+si],al
0020:3CB3  00 00				add	[bx+si],al
0020:3CB5  00 00				add	[bx+si],al
0020:3CB7  00 00				add	[bx+si],al
0020:3CB9  00 00				add	[bx+si],al
0020:3CBB  00 00				add	[bx+si],al
0020:3CBD  00 00				add	[bx+si],al
0020:3CBF  00 00				add	[bx+si],al
0020:3CC1  00 00				add	[bx+si],al
0020:3CC3  00 00				add	[bx+si],al
0020:3CC5  00 00				add	[bx+si],al
0020:3CC7  00 00				add	[bx+si],al
0020:3CC9  00 00				add	[bx+si],al
0020:3CCB  00 00				add	[bx+si],al
0020:3CCD  00 00				add	[bx+si],al
0020:3CCF  00 00				add	[bx+si],al
0020:3CD1  00 00				add	[bx+si],al
0020:3CD3  00 00				add	[bx+si],al
0020:3CD5  00 00				add	[bx+si],al
0020:3CD7  00 00				add	[bx+si],al
0020:3CD9  00 00				add	[bx+si],al
0020:3CDB  00 00				add	[bx+si],al
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 124

0020:3CDD  00 00				add	[bx+si],al
0020:3CDF  00 00				add	[bx+si],al
0020:3CE1  00 00				add	[bx+si],al
0020:3CE3  00 00				add	[bx+si],al
0020:3CE5  00 00				add	[bx+si],al
0020:3CE7  00 00				add	[bx+si],al
0020:3CE9  00 00				add	[bx+si],al
0020:3CEB  00 00				add	[bx+si],al
0020:3CED  00 00				add	[bx+si],al
0020:3CEF  00 00				add	[bx+si],al
0020:3CF1  00 00				add	[bx+si],al
0020:3CF3  00 00				add	[bx+si],al
0020:3CF5  00 28				add	[bx+si],ch
0020:3CF7  00 00				add	[bx+si],al
0020:3CF9  00 00				add	[bx+si],al
0020:3CFB  00 00				add	[bx+si],al
0020:3CFD  00 00				add	[bx+si],al
0020:3CFF  00 00				add	[bx+si],al
0020:3D01  00 00				add	[bx+si],al
0020:3D03  00 00				add	[bx+si],al
0020:3D05  00 00				add	[bx+si],al
0020:3D07  00 00				add	[bx+si],al
0020:3D09  00 00				add	[bx+si],al
0020:3D0B  00 00				add	[bx+si],al
0020:3D0D  00 00				add	[bx+si],al
0020:3D0F  00 00				add	[bx+si],al
0020:3D11  00 00				add	[bx+si],al
0020:3D13  00 00				add	[bx+si],al
0020:3D15  00 00				add	[bx+si],al
0020:3D17  00 00				add	[bx+si],al
0020:3D19  00 00				add	[bx+si],al
0020:3D1B  00 00				add	[bx+si],al
0020:3D1D  00 00				add	[bx+si],al
0020:3D1F  00 00				add	[bx+si],al
0020:3D21  00 00				add	[bx+si],al
0020:3D23  00 00				add	[bx+si],al
0020:3D25  00 00				add	[bx+si],al
0020:3D27  00 00				add	[bx+si],al
0020:3D29  00 00				add	[bx+si],al
0020:3D2B  00 00				add	[bx+si],al
0020:3D2D  00 00				add	[bx+si],al
0020:3D2F  00 00				add	[bx+si],al
0020:3D31  00 00				add	[bx+si],al
0020:3D33  00 00				add	[bx+si],al
0020:3D35  00 00				add	[bx+si],al
0020:3D37  00 00				add	[bx+si],al
0020:3D39  00 00				add	[bx+si],al
0020:3D3B  00 00				add	[bx+si],al
0020:3D3D  00 00				add	[bx+si],al
0020:3D3F  00 00				add	[bx+si],al
0020:3D41  00 00				add	[bx+si],al
0020:3D43  00 00				add	[bx+si],al
0020:3D45  00 00				add	[bx+si],al
0020:3D47  00 00				add	[bx+si],al
0020:3D49  00 00				add	[bx+si],al
0020:3D4B  00 00				add	[bx+si],al
0020:3D4D  00 00				add	[bx+si],al
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 125

0020:3D4F  00 00				add	[bx+si],al
0020:3D51  00 00				add	[bx+si],al
0020:3D53  00 00				add	[bx+si],al
0020:3D55  00 00				add	[bx+si],al
0020:3D57  00 00				add	[bx+si],al
0020:3D59  00 00				add	[bx+si],al
0020:3D5B  00 00				add	[bx+si],al
0020:3D5D  00 00				add	[bx+si],al
0020:3D5F  00 00				add	[bx+si],al
0020:3D61  00 00				add	[bx+si],al
0020:3D63  00 00				add	[bx+si],al
0020:3D65  00 00				add	[bx+si],al
0020:3D67  00 00				add	[bx+si],al
0020:3D69  00 00				add	[bx+si],al
0020:3D6B  00 00				add	[bx+si],al
0020:3D6D  00 00				add	[bx+si],al
0020:3D6F  00 00				add	[bx+si],al
0020:3D71  00 00				add	[bx+si],al
0020:3D73  00 00				add	[bx+si],al
0020:3D75  00 30				add	[bx+si],dh
0020:3D77  00 00				add	[bx+si],al
0020:3D79  00 00				add	[bx+si],al
0020:3D7B  00 00				add	[bx+si],al
0020:3D7D  00 00				add	[bx+si],al
0020:3D7F  00 00				add	[bx+si],al
0020:3D81  00 00				add	[bx+si],al
0020:3D83  00 00				add	[bx+si],al
0020:3D85  00 00				add	[bx+si],al
0020:3D87  00 00				add	[bx+si],al
0020:3D89  00 00				add	[bx+si],al
0020:3D8B  00 00				add	[bx+si],al
0020:3D8D  00 00				add	[bx+si],al
0020:3D8F  00 00				add	[bx+si],al
0020:3D91  00 00				add	[bx+si],al
0020:3D93  00 00				add	[bx+si],al
0020:3D95  00 00				add	[bx+si],al
0020:3D97  00 00				add	[bx+si],al
0020:3D99  00 00				add	[bx+si],al
0020:3D9B  00 00				add	[bx+si],al
0020:3D9D  00 00				add	[bx+si],al
0020:3D9F  00 00				add	[bx+si],al
0020:3DA1  00 00				add	[bx+si],al
0020:3DA3  00 00				add	[bx+si],al
0020:3DA5  00 00				add	[bx+si],al
0020:3DA7  00 00				add	[bx+si],al
0020:3DA9  00 00				add	[bx+si],al
0020:3DAB  00 00				add	[bx+si],al
0020:3DAD  00 00				add	[bx+si],al
0020:3DAF  00 00				add	[bx+si],al
0020:3DB1  00 00				add	[bx+si],al
0020:3DB3  00 00				add	[bx+si],al
0020:3DB5			loc_380:
0020:3DB5  00 00				add	[bx+si],al
0020:3DB7  00 00				add	[bx+si],al
0020:3DB9  00 00				add	[bx+si],al
0020:3DBB  00 00				add	[bx+si],al
0020:3DBD  00 00				add	[bx+si],al
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 126

0020:3DBF			loc_381:
0020:3DBF  00 00				add	[bx+si],al
0020:3DC1  00 00				add	[bx+si],al
0020:3DC3  00 00				add	[bx+si],al
0020:3DC5  00 00				add	[bx+si],al
0020:3DC7  00 00				add	[bx+si],al
0020:3DC9			loc_382:
0020:3DC9  00 00				add	[bx+si],al
0020:3DCB  00 00				add	[bx+si],al
0020:3DCD  00 00				add	[bx+si],al
0020:3DCF  00 00				add	[bx+si],al
0020:3DD1  00 00				add	[bx+si],al
0020:3DD3  00 00				add	[bx+si],al
0020:3DD5  00 00				add	[bx+si],al
0020:3DD7  00 00				add	[bx+si],al
0020:3DD9  00 00				add	[bx+si],al
0020:3DDB  00 00				add	[bx+si],al
0020:3DDD  00 00				add	[bx+si],al
0020:3DDF			loc_383:
0020:3DDF  00 00				add	[bx+si],al
0020:3DE1  00 00				add	[bx+si],al
0020:3DE3  00 00				add	[bx+si],al
0020:3DE5  00 00				add	[bx+si],al
0020:3DE7  00 00				add	[bx+si],al
0020:3DE9  00 00				add	[bx+si],al
0020:3DEB  00 00				add	[bx+si],al
0020:3DED  00 00				add	[bx+si],al
0020:3DEF  00 00				add	[bx+si],al
0020:3DF1  00 00				add	[bx+si],al
0020:3DF3  00 00				add	[bx+si],al
0020:3DF5  00 38				add	[bx+si],bh
0020:3DF7  00 00				add	[bx+si],al
0020:3DF9  00 00				add	[bx+si],al
0020:3DFB  00 00				add	[bx+si],al
0020:3DFD  00 00				add	[bx+si],al
0020:3DFF  00 00				add	[bx+si],al
0020:3E01  00 00				add	[bx+si],al
0020:3E03  00 00				add	[bx+si],al
0020:3E05  00 00				add	[bx+si],al
0020:3E07  00 00				add	[bx+si],al
0020:3E09  00 00				add	[bx+si],al
0020:3E0B  00 00				add	[bx+si],al
0020:3E0D  00 00				add	[bx+si],al
0020:3E0F  00 00				add	[bx+si],al
0020:3E11  00 00				add	[bx+si],al
0020:3E13  00 00				add	[bx+si],al
0020:3E15  00 00				add	[bx+si],al
0020:3E17  00 00				add	[bx+si],al
0020:3E19  00 00				add	[bx+si],al
0020:3E1B  00 00				add	[bx+si],al
0020:3E1D  00 00				add	[bx+si],al
0020:3E1F  00 00				add	[bx+si],al
0020:3E21  00 00				add	[bx+si],al
0020:3E23  00 00				add	[bx+si],al
0020:3E25  00 00				add	[bx+si],al
0020:3E27  00 00				add	[bx+si],al
0020:3E29  00 00				add	[bx+si],al
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 127

0020:3E2B  00 00				add	[bx+si],al
0020:3E2D  00 00				add	[bx+si],al
0020:3E2F  00 00				add	[bx+si],al
0020:3E31  00 00				add	[bx+si],al
0020:3E33  00 00				add	[bx+si],al
0020:3E35  00 00				add	[bx+si],al
0020:3E37  00 00				add	[bx+si],al
0020:3E39  00 00				add	[bx+si],al
0020:3E3B  00 00				add	[bx+si],al
0020:3E3D  00 00				add	[bx+si],al
0020:3E3F  00 00				add	[bx+si],al
0020:3E41  00 00				add	[bx+si],al
0020:3E43  00 00				add	[bx+si],al
0020:3E45  00 00				add	[bx+si],al
0020:3E47  00 00				add	[bx+si],al
0020:3E49  00 00				add	[bx+si],al
0020:3E4B  00 00				add	[bx+si],al
0020:3E4D  00 00				add	[bx+si],al
0020:3E4F  00 00				add	[bx+si],al
0020:3E51  00 00				add	[bx+si],al
0020:3E53  00 00				add	[bx+si],al
0020:3E55  00 00				add	[bx+si],al
0020:3E57  00 00				add	[bx+si],al
0020:3E59  00 00				add	[bx+si],al
0020:3E5B  00 00				add	[bx+si],al
0020:3E5D  00 00				add	[bx+si],al
0020:3E5F			loc_386:
0020:3E5F  00 00				add	[bx+si],al
0020:3E61  00 00				add	[bx+si],al
0020:3E63  00 01				add	[bx+di],al
0020:3E65  91					xchg	ax,cx
0020:3E66  01 91 8E07				add	word ptr ds:[8E07h][bx+di],dx	; (ss:8E07=9216h)
0020:3E6A  F3					db	0F3h
0020:3E6B  03 B7 0700				add	si,word ptr ds:[700h][bx]	; (ss:0700=3232h)
0020:3E6F  8E					db	8Eh
0020:3E70  2E: 02 8B 4603			add	cl,cs:data_566[bp+di]	; (0020:4603=6Dh)
0020:3E75  30 40 00				xor	[bx+si+0],al
0020:3E78  00 00				add	[bx+si],al
0020:3E7A  06					push	es
0020:3E7B  00 06 0100				add	byte ptr ds:[100h],al	; (ss:0100=0EBh)
0020:3E7F  00 4D 09				add	[di+9],cl
0020:3E82  04 A2				add	al,0A2h
0020:3E84  00 00				add	[bx+si],al
0020:3E86  06					push	es
0020:3E87  00 43 4F				add	[bp+di+4Fh],al
0020:3E8A  4D					dec	bp
0020:3E8B  4D					dec	bp
0020:3E8C  41					inc	cx
0020:3E8D  4E					dec	si
0020:3E8E  44					inc	sp
0020:3E8F  00 CD				add	ch,cl
0020:3E91  20 FF				and	bh,bh
0020:3E93  9F					lahf				; Load ah from flags
0020:3E94  00 9A FEF0				add	[bp+si-110h],bl
0020:3E98  1D 7FF0				sbb	ax,7FF0h
0020:3E9B  01 09				add	[bx+di],cx
0020:3E9D  04 4B				add	al,4Bh			; 'K'
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 128

0020:3E9F  01 09				add	[bx+di],cx
0020:3EA1  04 56				add	al,56h			; 'V'
0020:3EA3  01 09				add	[bx+di],cx
0020:3EA5  04 09				add	al,9
0020:3EA7  04 01				add	al,1
0020:3EA9  01 01				add	[bx+di],ax
0020:3EAB  00 02				add	[bp+si],al
0020:3EAD  000F[FF]				db	15 dup (0FFh)
0020:3EBC  B4 04				mov	ah,4
0020:3EBE  FA					cli				; Disable interrupts
0020:3EBF  05 0409				add	ax,409h
0020:3EC2  14 00				adc	al,0
0020:3EC4  18 00				sbb	[bx+si],al
0020:3EC6  09 04				or	[si],ax
0020:3EC8  FF					db	0FFh
0020:3EC9  FF					db	0FFh
0020:3ECA  FF					db	0FFh
0020:3ECB  FF 00				inc	word ptr [bx+si]
0020:3ECD  00 00				add	[bx+si],al
0020:3ECF  00 05				add	[di],al
0020:3ED1  000F[00]				db	15 dup (0)
0020:3EE0  CD 21				int	21h			; DOS Services  ah=function 08h
										;  get keybd char al, no echo
0020:3EE2  CB					retf				; Return far
				sub_73		endp
  
0020:3EE3  000A[00]				db	10 dup (0)
0020:3EED  000B[20]				db	11 dup (20h)
0020:3EF8  00 00				add	[bx+si],al
0020:3EFA  00 00				add	[bx+si],al
0020:3EFC  00 20				add	[bx+si],ah
0020:3EFE  000A[20]				db	10 dup (20h)
0020:3F08  0009[00]				db	9 dup (0)
0020:3F11  0D 20 20 20 53 45			db	0Dh, '   SET BLASTER=A0', 0Dh, 'd'
0020:3F17  54 20 42 4C 41 53
0020:3F1D  54 45 52 3D 41 30
0020:3F23  0D 64
0020:3F25  64 72 65 73 73 2E			db	'dress.  For example:', 0Dh, ' on'
0020:3F2B  20 20 46 6F 72 20
0020:3F31  65 78 61 6D 70 6C
0020:3F37  65 3A 0D 20 6F 6E
0020:3F3D  20 4E 54 56 44 4D			db	' NTVDM, specify an invalid', 0Dh
0020:3F43  2C 20 73 70 65 63
0020:3F49  69 66 79 20 61 6E
0020:3F4F  20 69 6E 76 61 6C
0020:3F55  69 64 0D
0020:3F58  20 6F 6E 6C 79 2E			db	' only.', 0Dh
0020:3F5E  0D
0020:3F5F  0031[00]				db	49 dup (0)
0020:3F90  E9 155D				jmp	loc_546			; (54F0)
0020:3F93  00 07				add	[bx],al
0020:3F95  64					db	64h
0020:3F96  FF					db	0FFh
0020:3F97  FF 27				jmp	word ptr [bx]		;*
0020:3F99  5E					pop	si
0020:3F9A  FF					db	0FFh
0020:3F9B  FF E5				jmp	bp			;*Register jump
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 129

0020:3F9D  5C					pop	sp
0020:3F9E  FF					db	0FFh
0020:3F9F  FF 14				call	word ptr [si]		;*
0020:3FA1  61					db	61h
0020:3FA2  FF					db	0FFh
0020:3FA3  FF					db	0FFh
0020:3FA4  D9 5C FF				esc	1,[si-1]		; coprocessor escape
0020:3FA7  FF 53 5F				call	word ptr [bp+di+5Fh]	;*
0020:3FAA  FF					db	0FFh
0020:3FAB  FF F1				push	cx
0020:3FAD  60					db	60h
0020:3FAE  FF					db	0FFh
0020:3FAF  FF 5E 5E				call	dword ptr [bp+5Eh]	;*
0020:3FB2  FF					db	0FFh
0020:3FB3  FF 4A 64				dec	word ptr [bp+si+64h]
0020:3FB6  FF					db	0FFh
0020:3FB7  FF 72 5F				push	word ptr [bp+si+5Fh]
0020:3FBA  FF					db	0FFh
0020:3FBB  FF C3				inc	bx
0020:3FBD  64					db	64h
0020:3FBE  FF					db	0FFh
0020:3FBF  FF AF D900				jmp	dword ptr data_673[bx]	;*(0020:D900=0FFFFh)
0020:3FC3  02 01				add	al,[bx+di]
0020:3FC5  FB					sti				; Enable interrupts
0020:3FC6  E8 0064				call	sub_74			; (402D)
0020:3FC9  1E					push	ds
0020:3FCA  0E					push	cs
0020:3FCB  2E: FF 2E 0104			jmp	dword ptr cs:[104h]	; (0020:0104=0)
0020:3FD0  FB					sti				; Enable interrupts
0020:3FD1  E8 0059				call	sub_74			; (402D)
0020:3FD4  1E					push	ds
0020:3FD5  0E					push	cs
0020:3FD6  2E: FF 2E 0108			jmp	dword ptr cs:[108h]	; (0020:0108=0)
0020:3FDB  FB					sti				; Enable interrupts
0020:3FDC  E8 004E				call	sub_74			; (402D)
0020:3FDF  1E					push	ds
0020:3FE0  0E					push	cs
0020:3FE1  2E: FF 2E 010C			jmp	dword ptr cs:[10Ch]	; (0020:010C=0)
0020:3FE6  FB					sti				; Enable interrupts
0020:3FE7  E8 0043				call	sub_74			; (402D)
0020:3FEA  1E					push	ds
0020:3FEB  0E					push	cs
0020:3FEC  2E: FF 2E 0110			jmp	dword ptr cs:[110h]	; (0020:0110=0)
0020:3FF1			loc_397:
0020:3FF1  E8 0039				call	sub_74			; (402D)
0020:3FF4  1E					push	ds
0020:3FF5  0E					push	cs
0020:3FF6  2E: FF 2E 0114			jmp	cs:data_111		; (0020:0114=0)
0020:3FFB  E8 002F				call	sub_74			; (402D)
0020:3FFE  1E					push	ds
0020:3FFF  0E					push	cs
0020:4000  2E: FF 2E 0118			jmp	cs:data_112		; (0020:0118=0)
0020:4005  E8 0025				call	sub_74			; (402D)
0020:4008  1E					push	ds
0020:4009  0E					push	cs
0020:400A  2E: FF 2E 011C			jmp	cs:data_113		; (0020:011C=0)
0020:400F			loc_398:
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 130

0020:400F  E8 001B				call	sub_74			; (402D)
0020:4012  1E					push	ds
0020:4013  0E					push	cs
0020:4014  2E: FF 2E 0120			jmp	cs:data_114		; (0020:0120=0)
0020:4019  E8 0011				call	sub_74			; (402D)
0020:401C  1E					push	ds
0020:401D  0E					push	cs
0020:401E  2E: FF 2E 0124			jmp	cs:data_115		; (0020:0124=0)
0020:4023  E8 0007				call	sub_74			; (402D)
0020:4026  1E					push	ds
0020:4027  0E					push	cs
0020:4028  2E: FF 2E 0128			jmp	cs:data_116		; (0020:0128=0)
  
				;ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
				;			       SUBROUTINE
				;‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
  
				sub_74		proc	near
0020:402D  9C					pushf				; Push flags
0020:402E  50					push	ax
0020:402F  2E: 80 3E 0134 00			cmp	cs:data_119,0		; (0020:0134=0)
0020:4035  74 08				je	loc_399			; Jump if equal
0020:4037  E8 000D				call	sub_75			; (4047)
0020:403A  73 03				jnc	loc_399			; Jump if carry=0
0020:403C  E8 001B				call	sub_76			; (405A)
0020:403F			loc_399:
0020:403F  58					pop	ax
0020:4040  9D					popf				; Pop flags
0020:4041  C3					retn
				sub_74		endp
  
0020:4042  EA 0409:0135		;*		jmp	far ptr loc_2645	;*(0409:0135)
0020:4042  EA 35 01 09 04			db	0EAh, 35h, 01h, 09h, 04h
  
				;ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
				;			       SUBROUTINE
				;‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
  
				sub_75		proc	near
0020:4047  53					push	bx
0020:4048  50					push	ax
0020:4049  B4 07				mov	ah,7
0020:404B  2E: FF 1E 0130			call	cs:data_118		; (0020:0130=0)
0020:4050  0B C0				or	ax,ax			; Zero ?
0020:4052  58					pop	ax
0020:4053  5B					pop	bx
0020:4054  75 02				jnz	loc_400			; Jump if not zero
0020:4056  F9					stc				; Set carry flag
0020:4057  C3					retn
0020:4058			loc_400:
0020:4058  F8					clc				; Clear carry flag
0020:4059  C3					retn
				sub_75		endp
  
  
				;ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
				;			       SUBROUTINE
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 131

				;‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
  
				sub_76		proc	near
0020:405A  53					push	bx
0020:405B  50					push	ax
0020:405C  B4 05				mov	ah,5
0020:405E  2E: FF 1E 0130			call	cs:data_118		; (0020:0130=0)
0020:4063  0B C0				or	ax,ax			; Zero ?
0020:4065  74 03				jz	loc_401			; Jump if zero
0020:4067  58					pop	ax
0020:4068  5B					pop	bx
0020:4069  C3					retn
0020:406A			loc_401:
0020:406A  EB FE				jmp	short loc_401		; (406A)
				sub_76		endp
  
0020:406C  CD 21				int	21h			; DOS Services  ah=function 00h
										;  terminate, cs=progm seg prefx
0020:406E  FA					cli				; Disable interrupts
0020:406F  0E					push	cs
0020:4070  17					pop	ss
0020:4071  BC 0612				mov	sp,612h
0020:4074  FB					sti				; Enable interrupts
0020:4075  0E					push	cs
0020:4076  1F					pop	ds
0020:4077  9C					pushf				; Push flags
0020:4078  50					push	ax
0020:4079  2E: A0 0614				mov	al,byte ptr cs:[614h]	; (0020:0614=2)
0020:407D  A8 80				test	al,80h
0020:407F  74 07				jz	loc_402			; Jump if zero
0020:4081  24 7F				and	al,7Fh
0020:4083  2E: FF 1E 012C			call	cs:data_117		; (0020:012C=0)
0020:4088			loc_402:
0020:4088  2E: 80 26 0614 7F			and	byte ptr cs:[614h],7Fh	; (0020:0614=2)
0020:408E  58					pop	ax
0020:408F  9D					popf				; Pop flags
0020:4090  E9 FF5E				jmp	loc_397			; (3FF1)
0020:4093  02 00				add	al,[bx+si]
0020:4095  00 01				add	[bx+di],al
0020:4097  09 02				or	[bp+si],ax
0020:4099  41					inc	cx
0020:409A  02 00				add	al,[bx+si]
0020:409C  00 02				add	[bp+si],al
0020:409E  10 02				adc	[bp+si],al
0020:40A0  0009[00]				db	9 dup (0)
0020:40A9  02 22				add	ah,[bp+si]
0020:40AB  02 03				add	al,[bp+di]
0020:40AD  30 02				xor	[bp+si],al
0020:40AF  03 2E 0002				add	bp,data_67		; (0020:0002=0)
0020:40B3  0010[00]				db	16 dup (0)
0020:40C3  01 09				add	[bx+di],cx
0020:40C5  02 02				add	al,[bp+si]
0020:40C7  5A					pop	dx
0020:40C8  02 01				add	al,[bx+di]
0020:40CA  3C 02				cmp	al,2
0020:40CC  43					inc	bx
0020:40CD  02 7C 04				add	bh,[si+4]
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 132

0020:40D0  000B[00]				db	11 dup (0)
0020:40DB  09 04				or	[si],ax
0020:40DD  7F 01				jg	loc_403			; Jump if >
0020:40DF  09 04				or	[si],ax
0020:40E1  0007[00]				db	7 dup (0)
0020:40E8  43					inc	bx
0020:40E9  3A 5C 57				cmp	bl,[si+57h]
0020:40EC  49					dec	cx
0020:40ED  4E					dec	si
0020:40EE  44					inc	sp
0020:40EF  4F					dec	di
0020:40F0  57					push	di
0020:40F1  53					push	bx
0020:40F2  5C					pop	sp
0020:40F3  53					push	bx
0020:40F4  59					pop	cx
0020:40F5  53					push	bx
0020:40F6  54					push	sp
0020:40F7  45					inc	bp
0020:40F8  4D					dec	bp
0020:40F9  33 32				xor	si,[bp+si]
0020:40FB  5C					pop	sp
0020:40FC  43					inc	bx
0020:40FD  4F					dec	di
0020:40FE  4D					dec	bp
0020:40FF  4D					dec	bp
0020:4100  41					inc	cx
0020:4101  4E					dec	si
0020:4102  44					inc	sp
0020:4103  2E					db	2Eh
0020:4104  43					inc	bx
0020:4105  4F					dec	di
0020:4106  4D					dec	bp
0020:4107  0021[00]				db	33 dup (0)
0020:4128  77 02				ja	loc_404			; Jump if above
0020:412A  2C 01				sub	al,1
0020:412C			loc_404:
0020:412C  EA 0000:0195		;*		jmp	far ptr loc_1		;*(0000:0195)
0020:412C  EA 95 01 00 00			db	0EAh, 95h, 01h, 00h, 00h
0020:4131  03 FF				add	di,di
0020:4133  9F					lahf				; Load ah from flags
0020:4134  30 BA 0001				xor	[bp+si+1],bh
0020:4138  03 00				add	ax,[bx+si]
0020:413A  01 00				add	[bx+si],ax
0020:413C  01 01				add	[bx+di],ax
0020:413E  01 00				add	[bx+si],ax
0020:4140  01 00				add	[bx+si],ax
0020:4142  00 00				add	[bx+si],al
0020:4144  FF					db	0FFh
0020:4145  FF 00				inc	word ptr [bx+si]
0020:4147  000B[00]				db	11 dup (0)
0020:4152  04 31				add	al,31h			; '1'
0020:4154  0B A7 0000				or	sp,[bx+0]
0020:4158  00 00				add	[bx+si],al
0020:415A  00 E7				add	bh,ah
0020:415C  0C A7				or	al,0A7h
0020:415E  0058[00]				db	88 dup (0)
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 133

0020:41B6  01 00				add	[bx+si],ax
0020:41B8  00 00				add	[bx+si],al
0020:41BA  01 00				add	[bx+si],ax
0020:41BC  0007[00]				db	7 dup (0)
0020:41C3  1E					push	ds
0020:41C4  06					push	es
0020:41C5  0E					push	cs
0020:41C6  1F					pop	ds
0020:41C7  8B 16 20CD				mov	dx,data_291		; (0020:20CD=0)
0020:41CB  A1 20C1				mov	ax,data_289		; (0020:20C1=0)
0020:41CE  8B 1E 20BD				mov	bx,data_288		; (0020:20BD=0)
0020:41D2  8B 0E 20C3				mov	cx,data_290		; (0020:20C3=0)
0020:41D6  50					push	ax
0020:41D7  53					push	bx
0020:41D8  51					push	cx
0020:41D9  8C DB				mov	bx,ds
0020:41DB  8E C3				mov	es,bx
0020:41DD  8B 1E 0593				mov	bx,data_167		; (0020:0593=0C000h)
0020:41E1  B4 4A				mov	ah,4Ah			; 'J'
0020:41E3  CD 21				int	21h			; DOS Services  ah=function 4Ah
										;  change mem allocation, bx=siz
0020:41E5  80 3E 02B0 01			cmp	data_146,1		; (0020:02B0=0)
0020:41EA  75 33				jne	loc_405			; Jump if not equal
0020:41EC  83 3E 0256 00			cmp	data_133,0		; (0020:0256=0)
0020:41F1  74 2C				je	loc_405			; Jump if equal
0020:41F3  BB 0007				mov	bx,7
0020:41F6  B4 48				mov	ah,48h			; 'H'
0020:41F8  CD 21				int	21h			; DOS Services  ah=function 48h
										;  allocate memory, bx=bytes/16
0020:41FA  72 23				jc	loc_405			; Jump if carry Set
0020:41FC  8E C0				mov	es,ax
0020:41FE  FF33			data_495	dw	0FF33h
0020:4200  33 F6				xor	si,si			; Zero register
0020:4202  1E			data_497	db	1Eh
0020:4203  8E			data_498	db	8Eh
0020:4204  1E			data_499	db	1Eh
0020:4205  56			data_500	db	56h
0020:4206  02 B9 0021				add	bh,[bx+di+21h]
0020:420A  83 C1 40				add	cx,40h
0020:420D  FC					cld				; Clear direction
0020:420E  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
0020:4210  1F					pop	ds
0020:4211  8C C1				mov	cx,es
0020:4213  8E 06 0256				mov	es,word ptr ds:[256h]	; (0000:0256=0)
0020:4217  B4 49				mov	ah,49h			; 'I'
0020:4219  CD 21				int	21h			; DOS Services  ah=function 49h
										;  release memory block, es=seg
0020:421B  89 0E 0256				mov	word ptr ds:[256h],cx	; (0000:0256=0)
0020:421F			loc_405:
0020:421F  59					pop	cx
0020:4220  5B					pop	bx
0020:4221  5D					pop	bp
0020:4222  B4 48				mov	ah,48h			; 'H'
0020:4224  CD 21				int	21h			; DOS Services  ah=function 48h
										;  allocate memory, bx=bytes/16
0020:4226  72 41				jc	loc_406			; Jump if carry Set
0020:4228  A3 0458				mov	word ptr ds:[458h],ax	; (0000:0458=0)
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 134

0020:422B  A3 002C				mov	word ptr ds:[2Ch],ax	; (0000:002C=54h)
0020:422E  8E C0				mov	es,ax
0020:4230  80 3E 02B0 01			cmp	byte ptr ds:[2B0h],1	; (0000:02B0=0)
0020:4235  75 34				jne	loc_407			; Jump if not equal
0020:4237  53					push	bx
0020:4238  BB 0000				mov	bx,0
0020:423B  C4					db	0C4h
0020:423C  C4 54 0F				les	dx,dword ptr [si+0Fh]	; Load 32 bit ptr
0020:423F  8B C3				mov	ax,bx
0020:4241  5B					pop	bx
0020:4242  3D 0000				cmp	ax,0
0020:4245  74 24				je	loc_407			; Jump if equal
0020:4247  03 D8				add	bx,ax
0020:4249  B4 49				mov	ah,49h			; 'I'
0020:424B  CD 21				int	21h			; DOS Services  ah=function 49h
										;  release memory block, es=seg
0020:424D  B4 48				mov	ah,48h			; 'H'
0020:424F  CD 21				int	21h			; DOS Services  ah=function 48h
										;  allocate memory, bx=bytes/16
0020:4251  72 75				jc	loc_410			; Jump if carry Set
0020:4253  A3 0458				mov	word ptr ds:[458h],ax	; (0000:0458=0)
0020:4256  A3 002C				mov	word ptr ds:[2Ch],ax	; (0000:002C=54h)
0020:4259  8E C0				mov	es,ax
0020:425B  89 1E 20BD				mov	word ptr ds:[20BDh],bx	; (0000:20BD=1F14h)
0020:425F  53					push	bx
0020:4260  C4					db	0C4h
0020:4261  C4 54 0F				les	dx,dword ptr [si+0Fh]	; Load 32 bit ptr
0020:4264  58					pop	ax
0020:4265  3B D8				cmp	bx,ax
0020:4267  76 0D				jbe	loc_408			; Jump if below or =
0020:4269			loc_406:
0020:4269  EB 5D				jmp	short loc_410		; (42C8)
0020:426B			loc_407:
0020:426B  1E					push	ds
0020:426C  8E DD				mov	ds,bp
0020:426E  33 F6				xor	si,si			; Zero register
0020:4270  8B FE				mov	di,si
0020:4272  FC					cld				; Clear direction
0020:4273  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
0020:4275  1F					pop	ds
0020:4276			loc_408:
0020:4276  80 3E 209A 00			cmp	byte ptr ds:[209Ah],0	; (0000:209A=44h)
0020:427B  75 06				jne	loc_409			; Jump if not equal
0020:427D  8E C5				mov	es,bp
0020:427F  B4 49				mov	ah,49h			; 'I'
0020:4281  CD 21				int	21h			; DOS Services  ah=function 49h
										;  release memory block, es=seg
0020:4283			loc_409:
0020:4283  C6 06 029E 01			mov	byte ptr ds:[29Eh],1	; (0000:029E=0)
0020:4288  06					push	es
0020:4289  BE 2570				mov	si,2570h
0020:428C  BF 0000				mov	di,0
0020:428F  B9 A14C				mov	cx,0A14Ch
0020:4292  BB FFFF				mov	bx,0FFFFh
0020:4295  B4 48				mov	ah,48h			; 'H'
0020:4297  CD 21				int	21h			; DOS Services  ah=function 48h
										;  allocate memory, bx=bytes/16
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 135

0020:4299  3B DA				cmp	bx,dx
0020:429B  72 2B				jb	loc_410			; Jump if below
0020:429D  B4 48				mov	ah,48h			; 'H'
0020:429F  CD 21				int	21h			; DOS Services  ah=function 48h
										;  allocate memory, bx=bytes/16
0020:42A1  72 25				jc	loc_410			; Jump if carry Set
0020:42A3  50					push	ax
0020:42A4  03 C3				add	ax,bx
0020:42A6  2B C2				sub	ax,dx
0020:42A8  A3 029C				mov	word ptr ds:[29Ch],ax	; (0000:029C=0)
0020:42AB  8E C0				mov	es,ax
0020:42AD  58					pop	ax
0020:42AE  03 F1				add	si,cx
0020:42B0  4E			data_501	db	4Eh
0020:42B1  F903			data_502	dw	0F903h
0020:42B3  4F			data_503	db	4Fh
0020:42B4  FD			data_504	db	0FDh
0020:42B5  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
0020:42B7  FC			data_505	db	0FCh
0020:42B8  8E C0				mov	es,ax
0020:42BA  B4 49				mov	ah,49h			; 'I'
0020:42BC  21CD			data_507	dw	21CDh
0020:42BE  C6 06 0330 00			mov	byte ptr ds:[330h],0	; (0000:0330=0)
0020:42C3  07					pop	es
0020:42C4  1F			data_508	db	1Fh
0020:42C5  E9 FD47				jmp	loc_398			; (400F)
0020:42C8			loc_410:
0020:42C8  D0E9			data_510	dw	0D0E9h
0020:42CA  001B			data_511	dw	1Bh
0020:42CC  0000			data_513	dw	0
0020:42CE  0000			data_514	dw	0
0020:42D0  0000			data_515	dw	0
0020:42D2  0000			data_516	dw	0
0020:42D4  0000			data_517	dw	0
0020:42D6  0000			data_518	dw	0
0020:42D8  0000			data_519	dw	0
0020:42DA  0000			data_520	dw	0
0020:42DC  0000			data_521	dw	0
0020:42DE  0000			data_522	dw	0
0020:42E0  0000			data_523	dw	0
0020:42E2  0000			data_524	dw	0
0020:42E4  0333			data_525	dw	333h
0020:42E6  0382			data_526	dw	382h
0020:42E8  04B4			data_527	dw	4B4h
0020:42EA  0080			data_528	dw	80h
0020:42EC  0409			data_529	dw	409h
0020:42EE  005C			data_530	dw	5Ch
0020:42F0  09			data_531	db	9
0020:42F1  6C04			data_532	dw	6C04h
0020:42F3  0900			data_533	dw	900h
0020:42F5  9304			data_534	dw	9304h
0020:42F7  0901			data_535	dw	901h
0020:42F9  0004			data_536	dw	4
0020:42FB  10 2F				adc	[bx],ch
0020:42FD  5C					pop	sp
0020:42FE  DC 01				esc	4,[bx+di]		; coprocessor escape
0020:4300  09 04				or	[si],ax
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 136

0020:4302  6B					db	6Bh
0020:4303  01 09				add	[bx+di],cx
0020:4305  04 00				add	al,0
0020:4307  00 F8				add	al,bh
0020:4309  04 00				add	al,0
0020:430B  00			data_539	db	0
0020:430C  43					inc	bx
0020:430D  3A 5C 44				cmp	bl,[si+44h]
0020:4310  4F					dec	di
0020:4311  43					inc	bx
0020:4312  55					push	bp
0020:4313  454D			data_541	dw	454Dh
0020:4315  317E			data_542	dw	317Eh
0020:4317  585C			data_543	dw	585Ch
0020:4319  41 4E 44 45 52 5C	data_544	db	'ANDER\DESKTOP\SOURCE~1.ENG\SR.EX'
0020:431F  44 45 53 4B 54 4F
0020:4325  50 5C 53 4F 55 52
0020:432B  43 45 7E 31 2E 45
0020:4331  4E 47 5C 53 52 2E
0020:4337  45 58
0020:4339  45					db	'E'
0020:433A  0054[00]				db	84 dup (0)
0020:438E  0000			data_546	dw	0
0020:4390  0000			data_547	dw	0
0020:4392  00			data_548	db	0
0020:4393  00 00				add	[bx+si],al
0020:4395  00 00				add	[bx+si],al
0020:4397  00 00				add	[bx+si],al
0020:4399  00 00				add	[bx+si],al
0020:439B  00 00				add	[bx+si],al
0020:439D  00 00				add	[bx+si],al
0020:439F  00 00				add	[bx+si],al
0020:43A1  00 00				add	[bx+si],al
0020:43A3  00 00				add	[bx+si],al
0020:43A5  00 00				add	[bx+si],al
0020:43A7  00 00				add	[bx+si],al
0020:43A9  00 00				add	[bx+si],al
0020:43AB  00 00				add	[bx+si],al
0020:43AD  00 00				add	[bx+si],al
0020:43AF  00 00				add	[bx+si],al
0020:43B1  00 00				add	[bx+si],al
0020:43B3  00 00				add	[bx+si],al
0020:43B5  00 00				add	[bx+si],al
0020:43B7  00 00				add	[bx+si],al
0020:43B9  00 00				add	[bx+si],al
0020:43BB  00 00				add	[bx+si],al
0020:43BD  00 00				add	[bx+si],al
0020:43BF  00 00				add	[bx+si],al
0020:43C1  00 00				add	[bx+si],al
0020:43C3  00 00				add	[bx+si],al
0020:43C5  00 00				add	[bx+si],al
0020:43C7  00 00				add	[bx+si],al
0020:43C9  00 00				add	[bx+si],al
0020:43CB  00 00				add	[bx+si],al
0020:43CD  00 00				add	[bx+si],al
0020:43CF  00 00				add	[bx+si],al
0020:43D1  00 00				add	[bx+si],al
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 137

0020:43D3  00 00				add	[bx+si],al
0020:43D5  00 00				add	[bx+si],al
0020:43D7  00 00				add	[bx+si],al
0020:43D9  00 00				add	[bx+si],al
0020:43DB  00 00				add	[bx+si],al
0020:43DD  00 00				add	[bx+si],al
0020:43DF  00 00				add	[bx+si],al
0020:43E1  00 00				add	[bx+si],al
0020:43E3  00 00				add	[bx+si],al
0020:43E5  00 00				add	[bx+si],al
0020:43E7  00 00				add	[bx+si],al
0020:43E9  00 00				add	[bx+si],al
0020:43EB  00 00				add	[bx+si],al
0020:43ED  00 00				add	[bx+si],al
0020:43EF  00 00				add	[bx+si],al
0020:43F1  00 00				add	[bx+si],al
0020:43F3  00 00				add	[bx+si],al
0020:43F5  00 00				add	[bx+si],al
0020:43F7  00 00				add	[bx+si],al
0020:43F9  00 00				add	[bx+si],al
0020:43FB  00 00				add	[bx+si],al
0020:43FD  00 00				add	[bx+si],al
0020:43FF  00 00				add	[bx+si],al
0020:4401  00 00				add	[bx+si],al
0020:4403  00 00				add	[bx+si],al
0020:4405  00 00				add	[bx+si],al
0020:4407  00 00				add	[bx+si],al
0020:4409  00 00				add	[bx+si],al
0020:440B  00 00				add	[bx+si],al
0020:440D  00 00				add	[bx+si],al
0020:440F  00 00				add	[bx+si],al
0020:4411  00 00				add	[bx+si],al
0020:4413  00 00				add	[bx+si],al
0020:4415  00 00				add	[bx+si],al
0020:4417  00 00				add	[bx+si],al
0020:4419  00 00				add	[bx+si],al
0020:441B  00 00				add	[bx+si],al
0020:441D  66					db	66h
0020:441E  00 D9				add	cl,bl
0020:4420  02 12				add	dl,[bp+si]
0020:4422  0A A2 0000				or	ah,[bp+si+0]
0020:4426  0031[00]				db	49 dup (0)
0020:4457  00			data_550	db	0
0020:4458  00 00				add	[bx+si],al
0020:445A  00 00				add	[bx+si],al
0020:445C  00 00				add	[bx+si],al
0020:445E  00 00				add	[bx+si],al
0020:4460  00 00				add	[bx+si],al
0020:4462  00 00				add	[bx+si],al
0020:4464  00 00				add	[bx+si],al
0020:4466  00 63 AC				add	[bp+di-54h],ah
0020:4469  90					nop
0020:446A  00 00				add	[bx+si],al
0020:446C  00 00				add	[bx+si],al
0020:446E  E7 0C				out	0Ch,ax			; port 0Ch, DMA-1 clr byte ptr
0020:4470  D5					db	0D5h
0020:4471  20 AB FA90				and	[bp+di-570h],ch
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 138

0020:4475  20 FA				and	dl,bh
0020:4477  20 F7				and	bh,dh
0020:4479  07					pop	es
0020:447A  00 07				add	[bx],al
0020:447C  D9 02				esc	1,[bp+si]		; coprocessor escape
0020:447E  01 00				add	[bx+si],ax
0020:4480  D9 02				esc	1,[bp+si]		; coprocessor escape
0020:4482  47					inc	di
0020:4483  01 D9				add	cx,bx
0020:4485  02 24				add	ah,[si]
0020:4487  25 95EA				and	ax,95EAh
0020:448A  00 3E 9ACE				add	byte ptr ds:[9ACEh],bh	; (0000:9ACE=0BDh)
0020:448E  09 04				or	[si],ax
0020:4490  00 00				add	[bx+si],al
0020:4492  00 01				add	[bx+di],al
0020:4494  00 01				add	[bx+di],al
0020:4496  81 00 0409				add	word ptr [bx+si],409h
0020:449A  09 04				or	[si],ax
0020:449C  DE 01				esc	6,[bx+di]		; coprocessor escape
0020:449E  09 04				or	[si],ax
0020:44A0  46					inc	si
0020:44A1  32 00				xor	al,[bx+si]
0020:44A3  00 00				add	[bx+si],al
0020:44A5  41					inc	cx
0020:44A6  52					push	dx
0020:44A7  49					dec	cx
0020:44A8  46					inc	si
0020:44A9  59					pop	cx
0020:44AA  4E					dec	si
0020:44AB  05 6241				add	ax,6241h
0020:44AE  6F					db	6Fh
0020:44AF  72 74				jc	loc_412			; Jump if carry Set
0020:44B1  07					pop	es
0020:44B2  2C 20				sub	al,20h			; ' '
0020:44B4  52					push	dx
0020:44B5  65					db	65h
0020:44B6  74 72				jz	loc_414			; Jump if zero
0020:44B8  79 08				jns	loc_411			; Jump if not sign
0020:44BA  2C 20				sub	al,20h			; ' '
0020:44BC  49					dec	cx
0020:44BD  67					db	67h
0020:44BE  6E					db	6Eh
0020:44BF  6F					db	6Fh
0020:44C0  72 65				jc	loc_413			; Jump if carry Set
0020:44C2			loc_411:
0020:44C2  06					push	es
0020:44C3  2C 20				sub	al,20h			; ' '
0020:44C5  46					inc	si
0020:44C6  61					db	61h
0020:44C7  69					db	69h
0020:44C8  6C					db	6Ch
0020:44C9  01 3F				add	[bx],di
0020:44CB  08 72 65				or	[bp+si+65h],dh
0020:44CE  61					db	61h
0020:44CF  64					db	64h
0020:44D0  69					db	69h
0020:44D1  6E					db	6Eh
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 139

0020:44D2  67					db	67h
0020:44D3  00 08				add	[bx+si],cl
0020:44D5  77 72				ja	loc_416			; Jump if above
0020:44D7  69					db	69h
0020:44D8  74 69				jz	loc_415			; Jump if zero
0020:44DA  6E					db	6Eh
0020:44DB  67					db	67h
0020:44DC  00 0E 2520				add	byte ptr ds:[2520h],cl	; (0000:2520=0F9h)
0020:44E0  31 20				xor	[bx+si],sp
0020:44E2  64					db	64h
0020:44E3  72 69				jc	loc_418			; Jump if carry Set
0020:44E5  76 65				jbe	loc_417			; Jump if below or =
0020:44E7  20 25				and	[di],ah
0020:44E9  32 0D				xor	cl,[di]
0020:44EB  0A 0F				or	cl,[bx]
0020:44ED  20 25 31 20 64 65			db	' %1 device '
0020:44F3  76 69 63 65 20
0020:44F8  3225			data_552	dw	3225h
0020:44FA  0A0D			data_553	dw	0A0Dh
0020:44FC  5026			data_554	dw	5026h
0020:44FE  656C			data_555	dw	656Ch
0020:4500  61			data_556	db	61h
0020:4501  73 65				jnc	$+67h			; Jump if carry=0
0020:4503  20 69 6E				and	[bx+di+6Eh],ch
0020:4506  73 65				jnc	$+67h			; Jump if carry=0
0020:4508  72			data_558	db	72h
0020:4509  2074			data_559	dw	2074h
0020:450B  6F76			data_560	dw	6F76h
0020:450D  756C			data_561	dw	756Ch
0020:450F  656D			data_562	dw	656Dh
0020:4511  2520			data_563	dw	2520h
0020:4513  31 20				xor	[bx+si],sp
0020:4515  73 65				jnc	$+67h			; Jump if carry=0
0020:4517  72 69				jc	$+6Bh			; Jump if carry Set
0020:4519  61					db	61h
0020:451A  6C					db	6Ch
0020:451B  20 25				and	[di],ah
0020:451D  32 2D				xor	ch,[di]
0020:451F  25 0D33				and	ax,0D33h
0020:4522  0A 25				or	ah,[di]
0020:4524  46					inc	si
0020:4525			loc_412:
0020:4525  69					db	69h
0020:4526  6C					db	6Ch
0020:4527			loc_413:
0020:4527  65					db	65h
0020:4528  20 61 6C				and	[bx+di+6Ch],ah
0020:452B  6C					db	6Ch
0020:452C  6F					db	6Fh
0020:452D  63					db	63h
0020:452E  61					db	61h
0020:452F  74 69				jz	loc_419			; Jump if zero
0020:4531  6F					db	6Fh
0020:4532  6E					db	6Eh
0020:4533  20 74 61				and	[si+61h],dh
0020:4536  62					db	62h
0020:4537  6C					db	6Ch
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 140

0020:4538  65					db	65h
0020:4539  20 62 61				and	[bp+si+61h],ah
0020:453C  64					db	64h
0020:453D  2C 20				sub	al,20h			; ' '
0020:453F  64					db	64h
0020:4540  72 69				jc	loc_421			; Jump if carry Set
0020:4542  76 65				jbe	loc_420			; Jump if below or =
0020:4544  20 25				and	[di],ah
0020:4546  31 0D				xor	[di],cx
0020:4548  0A 15				or	dl,[di]
0020:454A  49					dec	cx
0020:454B  6E					db	6Eh
0020:454C			loc_417:
0020:454C  76 61				jbe	loc_422			; Jump if below or =
0020:454E			loc_418:
0020:454E  6C 69 64 20 43 4F			db	'lid COMMAND.COM', 0Dh, 0Ah, '!In'
0020:4554  4D 4D 41 4E 44 2E
0020:455A  43 4F 4D 0D 0A 21
0020:4560  49 6E
0020:4562  73 65 72 74 20 64			db	'sert disk with %1 in drive %2', 0Dh
0020:4568  69 73 6B 20 77 69
0020:456E  74 68 20 25 31 20
0020:4574  69 6E 20 64 72 69
0020:457A  76 65 20 25 32 0D
0020:4580  0A 21 50 72 65 73			db	0Ah, '!Press any key to continu'
0020:4586  73 20 61 6E 79 20
0020:458C  6B 65 79 20 74 6F
0020:4592  20 63 6F 6E 74 69
0020:4598  6E 75
0020:459A			loc_419:
0020:459A  65					db	65h
0020:459B  20 2E 2E20				and	byte ptr ds:[2E20h],ch	; (0000:2E20=2)
0020:459F  20 2E 0A0D				and	byte ptr ds:[0A0Dh],ch	; (0000:0A0D=0)
0020:45A3  1C 0D				sbb	al,0Dh
0020:45A5  0A 54 65				or	dl,[si+65h]
0020:45A8  72 6D				jc	loc_426			; Jump if carry Set
0020:45AA  69					db	69h
0020:45AB			loc_421:
0020:45AB  6E					db	6Eh
0020:45AC  61					db	61h
0020:45AD  74 65				jz	loc_425			; Jump if zero
0020:45AF			loc_422:
0020:45AF  20 62 61				and	[bp+si+61h],ah
0020:45B2  74 63				jz	loc_426			; Jump if zero
0020:45B4  68					db	68h
0020:45B5  20 6A 6F				and	[bp+si+6Fh],ch
0020:45B8  62					db	62h
0020:45B9  20 28				and	[bx+si],ch
0020:45BB  59					pop	cx
0020:45BC  2F					das				; Decimal adjust
0020:45BD  4E					dec	si
0020:45BE  29 3F				sub	[bx],di
0020:45C0  13 43 61				adc	ax,[bp+di+61h]
0020:45C3  6E					db	6Eh
0020:45C4  6E					db	6Eh
0020:45C5  6F					db	6Fh
0020:45C6  74 20				jz	loc_423			; Jump if zero
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 141

0020:45C8  65					db	65h
0020:45C9  78 65				js	loc_428			; Jump if sign=1
0020:45CB  63					db	63h
0020:45CC  75 74				jnz	loc_430			; Jump if not zero
0020:45CE  65					db	65h
0020:45CF  20 25				and	[di],ah
0020:45D1  31 0D				xor	[di],cx
0020:45D3  0A 13				or	dl,[bp+di]
0020:45D5  45					inc	bp
0020:45D6  72 72				jc	loc_431			; Jump if carry Set
0020:45D8  6F					db	6Fh
0020:45D9  72 20				jc	loc_424			; Jump if carry Set
0020:45DB  69					db	69h
0020:45DC  6E					db	6Eh
0020:45DD  20 45 58				and	[di+58h],al
0020:45E0  45					inc	bp
0020:45E1  20 66 69				and	[bp+69h],ah
0020:45E4  6C					db	6Ch
0020:45E5  65					db	65h
0020:45E6  0D 220A				or	ax,220Ah
0020:45E9  50					push	ax
0020:45EA  72 6F				jc	loc_433			; Jump if carry Set
0020:45EC  67					db	67h
0020:45ED  72 61				jc	loc_432			; Jump if carry Set
0020:45EF  6D					db	6Dh
0020:45F0  20 74 6F				and	[si+6Fh],dh
0020:45F3  6F					db	6Fh
0020:45F4  20 62 69				and	[bp+si+69h],ah
0020:45F7  67					db	67h
0020:45F8  20 74 6F				and	[si+6Fh],dh
0020:45FB			loc_424:
0020:45FB  20 66 69				and	[bp+69h],ah
0020:45FE  74 20				jz	loc_427			; Jump if zero
0020:4600  69					db	69h
0020:4601  6E					db	6Eh
0020:4602  20 6D 65				and	[di+65h],ch
0020:4605  6D					db	6Dh
0020:4606  6F					db	6Fh
0020:4607  72 79				jc	loc_434			; Jump if carry Set
0020:4609  0D 160A				or	ax,160Ah
0020:460C  0D 4E0A				or	ax,4E0Ah
0020:460F  6F					db	6Fh
0020:4610  20 66 72				and	[bp+72h],ah
0020:4613  65					db	65h
0020:4614			loc_425:
0020:4614  65					db	65h
0020:4615  20 66 69				and	[bp+69h],ah
0020:4618  6C					db	6Ch
0020:4619  65					db	65h
0020:461A  20 68 61				and	[bx+si+61h],ch
0020:461D  6E					db	6Eh
0020:461E  64					db	64h
0020:461F  6C					db	6Ch
0020:4620			loc_427:
0020:4620  65					db	65h
0020:4621  73 1A				jnc	loc_429			; Jump if carry=0
0020:4623  42					inc	dx
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 142

0020:4624  61					db	61h
0020:4625  64					db	64h
0020:4626  20 43 6F				and	[bp+di+6Fh],al
0020:4629  6D					db	6Dh
0020:462A  6D					db	6Dh
0020:462B  61					db	61h
0020:462C  6E					db	6Eh
0020:462D  64					db	64h
0020:462E  20 6F 72				and	[bx+72h],ch
0020:4631  20 66 69				and	[bp+69h],ah
0020:4634  6C					db	6Ch
0020:4635  65					db	65h
0020:4636  20 6E 61				and	[bp+61h],ch
0020:4639  6D					db	6Dh
0020:463A  65					db	65h
0020:463B  0D 0E0A				or	ax,0E0Ah
0020:463E  41					inc	cx
0020:463F  63					db	63h
0020:4640  63					db	63h
0020:4641  65					db	65h
0020:4642			loc_430:
0020:4642  73 73				jnc	loc_435			; Jump if carry=0
0020:4644  20 64 65				and	[si+65h],ah
0020:4647  6E					db	6Eh
0020:4648  69					db	69h
0020:4649  65					db	65h
0020:464A			loc_431:
0020:464A  64					db	64h
0020:464B  20 19				and	[bx+di],bl
0020:464D  0D 4D0A				or	ax,4D0Ah
0020:4650			loc_432:
0020:4650  65					db	65h
0020:4651  6D					db	6Dh
0020:4652  6F					db	6Fh
0020:4653  72 79				jc	loc_436			; Jump if carry Set
0020:4655  20 61 6C				and	[bx+di+6Ch],ah
0020:4658  6C					db	6Ch
0020:4659  6F					db	6Fh
0020:465A  63					db	63h
0020:465B			loc_433:
0020:465B  61 74 69 6F 6E 20			db	'ation error&', 0Dh, 0Ah, 'Cannot'
0020:4661  65 72 72 6F 72 26
0020:4667  0D 0A 43 61 6E 6E
0020:466D  6F 74
0020:466F  20 6C 6F 61 64 20			db	' load COMMAND, syst'
0020:4675  43 4F 4D 4D 41 4E
0020:467B  44 2C 20 73 79 73
0020:4681  74
0020:4682			loc_434:
0020:4682  65 6D 20 68 61 6C			db	'em halted', 0Dh, 0Ah, '!', 0Dh, 0Ah
0020:4688  74 65 64 0D 0A 21
0020:468E  0D 0A
0020:4690  43 61 6E 6E 6F 74			db	'Cannot start COMMAND, exiting', 0Dh
0020:4696  20 73 74 61 72 74
0020:469C  20 43 4F 4D 4D 41
0020:46A2  4E 44 2C 20 65 78
0020:46A8  69 74 69 6E 67 0D
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 143

0020:46AE  0A 2E 0D 0A 54 6F			db	0Ah, '.', 0Dh, 0Ah, 'Top l'
0020:46B4  70 20 6C
0020:46B7			loc_435:
0020:46B7  65					db	65h
0020:46B8  76 65				jbe	loc_438			; Jump if below or =
0020:46BA  6C					db	6Ch
0020:46BB  20 70 72				and	[bx+si+72h],dh
0020:46BE  6F					db	6Fh
0020:46BF  63					db	63h
0020:46C0  65					db	65h
0020:46C1  73 73				jnc	loc_439			; Jump if carry=0
0020:46C3  20 61 62				and	[bx+di+62h],ah
0020:46C6  6F					db	6Fh
0020:46C7  72 74				jc	loc_441			; Jump if carry Set
0020:46C9  65					db	65h
0020:46CA  64					db	64h
0020:46CB  2C 20				sub	al,20h			; ' '
0020:46CD  63					db	63h
0020:46CE			loc_436:
0020:46CE  61					db	61h
0020:46CF  6E					db	6Eh
0020:46D0  6E					db	6Eh
0020:46D1  6F					db	6Fh
0020:46D2  74 20				jz	loc_437			; Jump if zero
0020:46D4  63					db	63h
0020:46D5  6F					db	6Fh
0020:46D6  6E					db	6Eh
0020:46D7  74 69				jz	loc_443			; Jump if zero
0020:46D9  6E					db	6Eh
0020:46DA  75 65				jnz	loc_442			; Jump if not zero
0020:46DC  0D 020A				or	ax,20Ah
0020:46DF  0D 600A				or	ax,600Ah
0020:46E2  0D 0001				or	ax,1
0020:46E5  0C 0B				or	al,0Bh
0020:46E7  01 00				add	[bx+si],ax
0020:46E9  60					db	60h
0020:46EA  0D 0001				or	ax,1
0020:46ED  00 00				add	[bx+si],al
0020:46EF  00 00				add	[bx+si],al
0020:46F1  89 01				mov	[bx+di],ax
0020:46F3  09 04				or	[si],ax
0020:46F5  13 57 72				adc	dx,[bx+72h]
0020:46F8  69 74 65 20 70 72			db	'ite protect error', 0Ch, 'Invali'
0020:46FE  6F 74 65 63 74 20
0020:4704  65 72 72 6F 72 0C
0020:470A  49 6E 76 61 6C 69
0020:4710  64 20 75 6E 69 74			db	'd unit', 9, 'Not read'
0020:4716  09 4E 6F 74 20 72
0020:471C  65 61 64
0020:471F			loc_438:
0020:471F  79 16				jns	loc_440			; Jump if not sign
0020:4721  49					dec	cx
0020:4722  6E					db	6Eh
0020:4723  76 61				jbe	loc_446			; Jump if below or =
0020:4725  6C					db	6Ch
0020:4726  69					db	69h
0020:4727  64					db	64h
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 144

0020:4728  20 64 65				and	[si+65h],ah
0020:472B  76 69				jbe	loc_447			; Jump if below or =
0020:472D  63					db	63h
0020:472E  65					db	65h
0020:472F  20 72 65				and	[bp+si+65h],dh
0020:4732  71 75				jno	loc_449			; Jump if not overflw
0020:4734  65					db	65h
0020:4735  73 74				jnc	loc_451			; Jump if carry=0
0020:4737			loc_440:
0020:4737  0A 44 61				or	al,[si+61h]
0020:473A  74 61				jz	loc_448			; Jump if zero
0020:473C  20 65 72				and	[di+72h],ah
0020:473F  72 6F				jc	loc_453			; Jump if carry Set
0020:4741			loc_442:
0020:4741  72 21				jc	loc_444			; Jump if carry Set
0020:4743  49 6E 76 61 6C 69			db	'Invalid device request parameter'
0020:4749  64 20 64 65 76 69
0020:474F  63 65 20 72 65 71
0020:4755  75 65 73 74 20 70
0020:475B  61 72 61 6D 65 74
0020:4761  65 72
0020:4763  73					db	's'
0020:4764			loc_444:
0020:4764  0A 53 65				or	dl,[bp+di+65h]
0020:4767  65					db	65h
0020:4768  6B					db	6Bh
0020:4769  20 65 72				and	[di+72h],ah
0020:476C  72 6F				jc	loc_460			; Jump if carry Set
0020:476E  72 12				jc	loc_445			; Jump if carry Set
0020:4770  49					dec	cx
0020:4771  6E					db	6Eh
0020:4772  76 61				jbe	loc_458			; Jump if below or =
0020:4774  6C					db	6Ch
0020:4775  69					db	69h
0020:4776  64					db	64h
0020:4777  20 6D 65				and	[di+65h],ch
0020:477A  64					db	64h
0020:477B  69					db	69h
0020:477C  61					db	61h
0020:477D  20 74 79				and	[si+79h],dh
0020:4780  70 65				jo	loc_462			; Jump if overflow=1
0020:4782			loc_445:
0020:4782  10 53 65				adc	[bp+di+65h],dl
0020:4785  63					db	63h
0020:4786			loc_446:
0020:4786  74 6F				jz	loc_464			; Jump if zero
0020:4788  72 20				jc	loc_450			; Jump if carry Set
0020:478A  6E					db	6Eh
0020:478B  6F					db	6Fh
0020:478C  74 20				jz	loc_452			; Jump if zero
0020:478E  66					db	66h
0020:478F  6F					db	6Fh
0020:4790  75 6E				jnz	loc_466			; Jump if not zero
0020:4792  64					db	64h
0020:4793  1A 50 72				sbb	dl,[bx+si+72h]
0020:4796			loc_447:
0020:4796  69					db	69h
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 145

0020:4797  6E					db	6Eh
0020:4798  74 65				jz	loc_465			; Jump if zero
0020:479A  72 20				jc	loc_454			; Jump if carry Set
0020:479C  6F					db	6Fh
0020:479D			loc_448:
0020:479D  75 74				jnz	loc_468			; Jump if not zero
0020:479F  20 6F 66				and	[bx+66h],ch
0020:47A2  20 70 61				and	[bx+si+61h],dh
0020:47A5  70 65				jo	loc_467			; Jump if overflow=1
0020:47A7  72 20				jc	loc_456			; Jump if carry Set
0020:47A9			loc_449:
0020:47A9  65					db	65h
0020:47AA			loc_450:
0020:47AA  72 72				jc	loc_471			; Jump if carry Set
0020:47AC  6F					db	6Fh
0020:47AD  72 11				jc	loc_455			; Jump if carry Set
0020:47AF  57					push	di
0020:47B0			loc_453:
0020:47B0  72 69				jc	loc_470			; Jump if carry Set
0020:47B2  74 65				jz	loc_469			; Jump if zero
0020:47B4  20 66 61				and	[bp+61h],ah
0020:47B7  75 6C				jnz	loc_472			; Jump if not zero
0020:47B9  74 20				jz	loc_459			; Jump if zero
0020:47BB  65					db	65h
0020:47BC			loc_454:
0020:47BC  72 72				jc	loc_473			; Jump if carry Set
0020:47BE  6F					db	6Fh
0020:47BF  72 10				jc	loc_457			; Jump if carry Set
0020:47C1  52					push	dx
0020:47C2  65					db	65h
0020:47C3  61					db	61h
0020:47C4  64					db	64h
0020:47C5  20 66 61				and	[bp+61h],ah
0020:47C8  75 6C				jnz	loc_474			; Jump if not zero
0020:47CA  74 20				jz	loc_463			; Jump if zero
0020:47CC  65					db	65h
0020:47CD  72 72				jc	loc_476			; Jump if carry Set
0020:47CF  6F					db	6Fh
0020:47D0  72 0F				jc	loc_461			; Jump if carry Set
0020:47D2  47					inc	di
0020:47D3  65					db	65h
0020:47D4  6E					db	6Eh
0020:47D5			loc_458:
0020:47D5  65					db	65h
0020:47D6  72 61				jc	loc_475			; Jump if carry Set
0020:47D8  6C					db	6Ch
0020:47D9  20 66 61				and	[bp+61h],ah
0020:47DC  69					db	69h
0020:47DD			loc_460:
0020:47DD  6C					db	6Ch
0020:47DE  75 72				jnz	loc_478			; Jump if not zero
0020:47E0  65					db	65h
0020:47E1			loc_461:
0020:47E1  11 53 68				adc	[bp+di+68h],dx
0020:47E4  61					db	61h
0020:47E5  72 69				jc	loc_477			; Jump if carry Set
0020:47E7			loc_462:
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 146

0020:47E7  6E					db	6Eh
0020:47E8  67					db	67h
0020:47E9  20 76 69				and	[bp+69h],dh
0020:47EC			loc_463:
0020:47EC  6F					db	6Fh
0020:47ED  6C					db	6Ch
0020:47EE  61					db	61h
0020:47EF  74 69				jz	loc_479			; Jump if zero
0020:47F1  6F					db	6Fh
0020:47F2  6E					db	6Eh
0020:47F3  0E					push	cs
0020:47F4  4C					dec	sp
0020:47F5  6F					db	6Fh
0020:47F6  63					db	63h
0020:47F7			loc_464:
0020:47F7  6B					db	6Bh
0020:47F8  20 76 69				and	[bp+69h],dh
0020:47FB  6F					db	6Fh
0020:47FC  6C					db	6Ch
0020:47FD  61					db	61h
0020:47FE  74 69				jz	loc_482			; Jump if zero
0020:4800			loc_466:
0020:4800  6F					db	6Fh
0020:4801  6E					db	6Eh
0020:4802  13 49 6E				adc	cx,[bx+di+6Eh]
0020:4805  76 61				jbe	loc_481			; Jump if below or =
0020:4807  6C					db	6Ch
0020:4808  69					db	69h
0020:4809  64					db	64h
0020:480A  20 64 69				and	[si+69h],ah
0020:480D  73 6B				jnc	loc_484			; Jump if carry=0
0020:480F  20 63 68				and	[bp+di+68h],ah
0020:4812  61					db	61h
0020:4813			loc_468:
0020:4813  6E					db	6Eh
0020:4814  67			data_574	db	67h
0020:4815  65					db	65h
0020:4816  0F					pop	cs			; Dangerous 8088 only
0020:4817  46					inc	si
0020:4818  43					inc	bx
0020:4819			loc_469:
0020:4819  42					inc	dx
0020:481A  20 75 6E				and	[di+6Eh],dh
0020:481D  61					db	61h
0020:481E			loc_471:
0020:481E  76 61				jbe	loc_485			; Jump if below or =
0020:4820  69					db	69h
0020:4821  6C					db	6Ch
0020:4822  61					db	61h
0020:4823  62					db	62h
0020:4824  6C					db	6Ch
0020:4825			loc_472:
0020:4825  65					db	65h
0020:4826  19 53 79				sbb	[bp+di+79h],dx
0020:4829  73 74				jnc	loc_487			; Jump if carry=0
0020:482B  65					db	65h
0020:482C  6D					db	6Dh
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 147

0020:482D  20 72 65				and	[bp+si+65h],dh
0020:4830			loc_473:
0020:4830  73 6F				jnc	loc_488			; Jump if carry=0
0020:4832  75 72				jnz	loc_490			; Jump if not zero
0020:4834  63					db	63h
0020:4835  65					db	65h
0020:4836			loc_474:
0020:4836  20 65 78				and	[di+78h],ah
0020:4839			loc_475:
0020:4839  68					db	68h
0020:483A  61					db	61h
0020:483B  75 73				jnz	loc_491			; Jump if not zero
0020:483D  74 65				jz	loc_489			; Jump if zero
0020:483F  64					db	64h
0020:4840  12 43 6F				adc	al,[bp+di+6Fh]
0020:4843  64					db	64h
0020:4844  65					db	65h
0020:4845  20 70 61				and	[bx+si+61h],dh
0020:4848  67					db	67h
0020:4849  65					db	65h
0020:484A  20 6D 69				and	[di+69h],ch
0020:484D  73 6D				jnc	loc_493			; Jump if carry=0
0020:484F  61					db	61h
0020:4850			loc_477:
0020:4850  74 63				jz	loc_492			; Jump if zero
0020:4852			loc_478:
0020:4852  68					db	68h
0020:4853  0C 4F				or	al,4Fh			; 'O'
0020:4855  75 74				jnz	loc_494			; Jump if not zero
0020:4857  6F20 2066		data_575	dd	20666F20h
0020:485B  69					db	69h
0020:485C  6E					db	6Eh
0020:485D  70 75				jo	loc_496			; Jump if overflow=1
0020:485F  74 17				jz	loc_483			; Jump if zero
0020:4861  6E49			data_577	dw	6E49h
  
				;ƒƒƒƒƒ Indexed Entry Point ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ
  
0020:4863			loc_480:
0020:4863  7573			data_578	dw	7573h
0020:4865  6666			data_579	dw	6666h
0020:4867  6369			data_580	dw	6369h
0020:4869			loc_482:
0020:4869  6569			data_581	dw	6569h
0020:486B  746E			data_582	dw	746Eh
0020:486D  6420			data_583	dw	6420h
0020:486F  7369			data_584	dw	7369h
0020:4871  206B			data_585	dw	206Bh
0020:4873  7073			data_586	dw	7073h
0020:4875  6361			data_587	dw	6361h
0020:4877  6565			data_588	dw	6565h
0020:4879  08 79 08				or	[bx+di+8],bh
0020:487C  86 08				xchg	cl,[bx+si]
0020:487E  90					nop
0020:487F  08 A7 B208				or	byte ptr ds:[0B208h][bx],ah	; (ss:B208=8Bh)
0020:4883  08 D4				or	ah,dl
0020:4885  08 DF				or	bh,bl
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 148

0020:4887  08 F2				or	dl,dh
0020:4889  08 03				or	[bp+di],al
0020:488B  09 1E 3009				or	word ptr ds:[3009h],bx	; (ss:3009=80CAh)
0020:488F  09 41 09				or	[bx+di+9],ax
0020:4892  51					push	cx
0020:4893  09 63 09				or	[bp+di+9],sp
0020:4896  72 09				jc	loc_488			; Jump if carry Set
0020:4898  86 09				xchg	cl,[bx+di]
0020:489A  96					xchg	ax,si
0020:489B  09 B0 C309				or	word ptr ds:[0C309h][bx+si],si	; (ss:C309=90E8h)
0020:489F			loc_487:
0020:489F  09 D0				or	ax,dx
0020:48A1			loc_488:
0020:48A1  09 13				or	[bp+di],dx
0020:48A3  54					push	sp
0020:48A4			loc_489:
0020:48A4  6F					db	6Fh
0020:48A5  6F					db	6Fh
0020:48A6			loc_490:
0020:48A6  20 6D 61				and	[di+61h],ch
0020:48A9  6E					db	6Eh
0020:48AA  79 20				jns	loc_495			; Jump if not sign
0020:48AC  70 61				jo	loc_500			; Jump if overflow=1
0020:48AE  72 61				jc	loc_501			; Jump if carry Set
0020:48B0			loc_491:
0020:48B0  4D					dec	bp
0020:48B1  00 00				add	[bx+si],al
0020:48B3  07					pop	es
0020:48B4  00 73 1A				add	[bp+di+1Ah],dh
0020:48B7  52					push	dx
0020:48B8  65					db	65h
0020:48B9  71 75				jno	loc_504			; Jump if not overflw
0020:48BB  69					db	69h
0020:48BC			loc_493:
0020:48BC  72 65				jc	loc_502			; Jump if carry Set
0020:48BE  64					db	64h
0020:48BF  20 00				and	[bx+si],al
0020:48C1  01 00				add	[bx+si],ax
0020:48C3  00 00				add	[bx+si],al
0020:48C5  00 00				add	[bx+si],al
0020:48C7  00 87 0006				add	[bx+6],al
0020:48CB			loc_494:
0020:48CB  00 FF				add	bh,bh
0020:48CD  0012[FF]				db	18 dup (0FFh)
0020:48DF  43FF			data_590	dw	43FFh
0020:48E1  3A 5C 57				cmp	bl,[si+57h]
0020:48E4  49					dec	cx
0020:48E5  4E					dec	si
0020:48E6  44					inc	sp
0020:48E7  4F					dec	di
0020:48E8  57					push	di
0020:48E9  53					push	bx
0020:48EA  5C					pop	sp
0020:48EB  54					push	sp
0020:48EC  45					inc	bp
0020:48ED  4D					dec	bp
0020:48EE  50					push	ax
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 149

0020:48EF  5C					pop	sp
0020:48F0  73 63				jnc	loc_506			; Jump if carry=0
0020:48F2  73 32				jnc	loc_503			; Jump if carry=0
0020:48F4  2E					db	2Eh
0020:48F5  74 6D				jz	loc_508			; Jump if zero
0020:48F7  70 00				jo	loc_499			; Jump if overflow=1
0020:48F9			loc_499:
0020:48F9  0028[00]				db	40 dup (0)
0020:4921  20 76 61				and	[bp+61h],dh
0020:4924  6C					db	6Ch
0020:4925  75 65				jnz	loc_509			; Jump if not zero
0020:4927  20 6E 6F				and	[bp+6Fh],ch
0020:492A  74 20				jz	loc_505			; Jump if zero
0020:492C  61					db	61h
0020:492D  6C					db	6Ch
0020:492E  6C					db	6Ch
0020:492F  6F					db	6Fh
0020:4930			loc_504:
0020:4930  4D					dec	bp
0020:4931  09 04				or	[si],ax
0020:4933  43					inc	bx
0020:4934  00 61 72				add	[bx+di+72h],ah
0020:4937  61					db	61h
0020:4938  6D					db	6Dh
0020:4939  65					db	65h
0020:493A  74 65				jz	loc_510			; Jump if zero
0020:493C  72 20				jc	loc_507			; Jump if carry Set
0020:493E  76 61				jbe	loc_510			; Jump if below or =
0020:4940  43					inc	bx
0020:4941  4F					dec	di
0020:4942  4D					dec	bp
0020:4943  53					push	bx
0020:4944  50					push	ax
0020:4945  45					inc	bp
0020:4946  43					inc	bx
0020:4947  3D 3A43				cmp	ax,3A43h
0020:494A  5C					pop	sp
0020:494B  57					push	di
0020:494C			loc_505:
0020:494C  49					dec	cx
0020:494D  4E					dec	si
0020:494E  44					inc	sp
0020:494F  4F					dec	di
  
				;ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ
				;			       SUBROUTINE
				;‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹
  
				sub_80		proc	near
0020:4950  57					push	di
0020:4951  53					push	bx
0020:4952  5C					pop	sp
0020:4953  53					push	bx
0020:4954  59					pop	cx
0020:4955			loc_506:
0020:4955  53					push	bx
0020:4956  54					push	sp
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 150

0020:4957  45					inc	bp
0020:4958  4D					dec	bp
0020:4959  33 32				xor	si,[bp+si]
0020:495B  5C					pop	sp
0020:495C  43					inc	bx
0020:495D  4F					dec	di
0020:495E			loc_507:
0020:495E  4D					dec	bp
0020:495F  4D					dec	bp
0020:4960  41					inc	cx
0020:4961  4E					dec	si
0020:4962  44					inc	sp
0020:4964			loc_508:
0020:4963  2E: 43 4F 4D 00			db	'COM', 0
0020:4968  41 4C 4C 55 53 45			db	'ALLUSERSPROFILE=C:\DOCUME~1\ALLU'
0020:496E  52 53 50 52 4F 46
0020:4974  49 4C 45 3D 43 3A
0020:497A  5C 44 4F 43 55 4D
0020:4980  45 7E 31 5C 41 4C
0020:4986  4C 55
0020:4988  53 45 7E 31				db	'SE~1'
0020:498C			loc_509:
0020:498C  00 41 50				add	[bx+di+50h],al
0020:498F  50					push	ax
0020:4990  44					inc	sp
0020:4991  41					inc	cx
0020:4992  54					push	sp
0020:4993  41					inc	cx
0020:4994  3D 3A43				cmp	ax,3A43h
0020:4997  5C					pop	sp
0020:4998  44					inc	sp
0020:4999  4F					dec	di
0020:499A  43					inc	bx
0020:499B  55					push	bp
0020:499C  4D					dec	bp
0020:499D  45					inc	bp
0020:499E  7E 31				jle	loc_511			; Jump if < or =
0020:49A0  5C					pop	sp
0020:49A1			loc_510:
0020:49A1  78 61 6E 64 65 72			db	'xander\APPLIC~1', 0
0020:49A7  5C 41 50 50 4C 49
0020:49AD  43 7E 31 00
0020:49B1  43 4C 49 45 4E 54			db	'CLIENTNAME=Console', 0
0020:49B7  4E 41 4D 45 3D 43
0020:49BD  6F 6E 73 6F 6C 65
0020:49C3  00
0020:49C4  43 4F 4D 4D 4F 4E			db	'COMMONPROGRAM'
0020:49CA  50 52 4F 47 52 41
0020:49D0  4D
0020:49D1			loc_511:
0020:49D1  46 49 4C 45 53 3D			db	'FILES=C:\PROGRA~1\COMMON~1', 0
0020:49D7  43 3A 5C 50 52 4F
0020:49DD  47 52 41 7E 31 5C
0020:49E3  43 4F 4D 4D 4F 4E
0020:49E9  7E 31 00
0020:49EC  43 4F 4D 50 55 54			db	'COMPUTERNAME=XANDER-JY56AED2', 0
0020:49F2  45 52 4E 41 4D 45
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 151

0020:49F8  3D 58 41 4E 44 45
0020:49FE  52 2D 4A 59 35 36
0020:4A04  41 45 44 32 00
0020:4A09  48 4F 4D 45 44 52			db	'HOMEDRIVE=C:', 0
0020:4A0F  49 56 45 3D 43 3A
0020:4A15  00
0020:4A16  48 4F 4D 45 50 41			db	'HOMEPATH=\Documents and Settings'
0020:4A1C  54 48 3D 5C 44 6F
0020:4A22  63 75 6D 65 6E 74
0020:4A28  73 20 61 6E 64 20
0020:4A2E  53 65 74 74 69 6E
0020:4A34  67 73
0020:4A36  5C 78 61 6E 64 65			db	'\xander', 0
0020:4A3C  72 00
0020:4A3E  4C 4F 47 4F 4E 53			db	'LOGONSERVER=\\XANDER-JY56AED2', 0
0020:4A44  45 52 56 45 52 3D
0020:4A4A  5C 5C 58 41 4E 44
0020:4A50  45 52 2D 4A 59 35
0020:4A56  36 41 45 44 32 00
0020:4A5C  4E 55 4D 42 45 52			db	'NUMBER_OF_PROCESSORS=1', 0
0020:4A62  5F 4F 46 5F 50 52
0020:4A68  4F 43 45 53 53 4F
0020:4A6E  52 53 3D 31 00
0020:4A73  4F 53 3D 57 69 6E			db	'OS=Windows_NT', 0
0020:4A79  64 6F 77 73 5F 4E
0020:4A7F  54 00
0020:4A81  50 41 54 48 3D 43			db	'PATH=C:\WINDOWS\system32;C:\WIND'
0020:4A87  3A 5C 57 49 4E 44
0020:4A8D  4F 57 53 5C 73 79
0020:4A93  73 74 65 6D 33 32
0020:4A99  3B 43 3A 5C 57 49
0020:4A9F  4E 44
0020:4AA1  4F 57 53 3B 43 3A			db	'OWS;C:\WINDOWS\System32\Wbem', 0
0020:4AA7  5C 57 49 4E 44 4F
0020:4AAD  57 53 5C 53 79 73
0020:4AB3  74 65 6D 33 32 5C
0020:4AB9  57 62 65 6D 00
0020:4ABE  50 41 54 48 45 58			db	'PATHEXT=.COM;.EXE;.BAT;.CMD;.VBS'
0020:4AC4  54 3D 2E 43 4F 4D
0020:4ACA  3B 2E 45 58 45 3B
0020:4AD0  2E 42 41 54 3B 2E
0020:4AD6  43 4D 44 3B 2E 56
0020:4ADC  42 53
0020:4ADE  3B 2E 56 42 45 3B			db	';.VBE;.JS;.JSE;.WSF;.WSH', 0
0020:4AE4  2E 4A 53 3B 2E 4A
0020:4AEA  53 45 3B 2E 57 53
0020:4AF0  46 3B 2E 57 53 48
0020:4AF6  00
0020:4AF7  50 52 4F 43 45 53			db	'PROCESSOR_ARCHITECTURE=x86', 0
0020:4AFD  53 4F 52 5F 41 52
0020:4B03  43 48 49 54 45 43
0020:4B09  54 55 52 45 3D 78
0020:4B0F  38 36 00
0020:4B12  50 52 4F 43 45 53			db	'PROCESSOR_IDENTIFIER=x86 Family '
0020:4B18  53 4F 52 5F 49 44
0020:4B1E  45 4E 54 49 46 49
0020:4B24  45 52 3D 78 38 36
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 152

0020:4B2A  20 46 61 6D 69 6C
0020:4B30  79 20
0020:4B32  32 33 20 4D 6F 64			db	'23 Model 8 Stepping 2, Authentic'
0020:4B38  65 6C 20 38 20 53
0020:4B3E  74 65 70 70 69 6E
0020:4B44  67 20 32 2C 20 41
0020:4B4A  75 74 68 65 6E 74
0020:4B50  69 63
0020:4B52  41 4D 44 00				db	'AMD', 0
0020:4B56  50 52 4F 43 45 53			db	'PROCESSOR_LEVEL=23', 0
0020:4B5C  53 4F 52 5F 4C 45
0020:4B62  56 45 4C 3D 32 33
0020:4B68  00
0020:4B69  50 52 4F 43 45 53			db	'PROCESSOR_REVISION=0802', 0
0020:4B6F  53 4F 52 5F 52 45
0020:4B75  56 49 53 49 4F 4E
0020:4B7B  3D 30 38 30 32 00
0020:4B81  50 52 4F 47 52 41			db	'PROGRAMFILES=C:\PROGRA~1', 0
0020:4B87  4D 46 49 4C 45 53
0020:4B8D  3D 43 3A 5C 50 52
0020:4B93  4F 47 52 41 7E 31
0020:4B99  00
0020:4B9A  50 52 4F 4D 50 54			db	'PROMPT=$'
0020:4BA0  3D 24
0020:4BA2  50 24				db	'P$'
0020:4BA4  47 00				db	'G', 0
0020:4BA6  53 41 46 45 42 4F			db	'SAFEBOOT_OPTION=MINIMAL', 0
0020:4BAC  4F 54 5F 4F 50 54
0020:4BB2  49 4F 4E 3D 4D 49
0020:4BB8  4E 49 4D 41 4C 00
0020:4BBE  53 45 53 53 49 4F			db	'SESSIONNAME=Console', 0
0020:4BC4  4E 4E 41 4D 45 3D
0020:4BCA  43 6F 6E 73 6F 6C
0020:4BD0  65 00
0020:4BD2  53 59 53 54 45 4D			db	'SYSTEMDRIVE=C:', 0
0020:4BD8  44 52 49 56 45 3D
0020:4BDE  43 3A 00
0020:4BE1  53 59 53 54 45 4D			db	'SYSTEMROOT=C:\WINDOWS', 0
0020:4BE7  52 4F 4F 54 3D 43
0020:4BED  3A 5C 57 49 4E 44
0020:4BF3  4F 57 53 00
0020:4BF7  54 45 4D 50 3D 43			db	'TEMP=C:\WINDOWS\TEMP', 0
0020:4BFD  3A 5C 57 49 4E 44
0020:4C03  4F 57 53 5C 54 45
0020:4C09  4D 50 00
0020:4C0C  54 4D 50 3D 43 3A			db	'TMP=C:\WINDOWS\TEMP', 0
0020:4C12  5C 57 49 4E 44 4F
0020:4C18  57 53 5C 54 45 4D
0020:4C1E  50 00
0020:4C20  55 53 45 52 44 4F			db	'USERDOMAIN=XANDER-JY56AED2', 0
0020:4C26  4D 41 49 4E 3D 58
0020:4C2C  41 4E 44 45 52 2D
0020:4C32  4A 59 35 36 41 45
0020:4C38  44 32 00
0020:4C3B  55 53 45 52 4E 41			db	'USERNAME=xander', 0
0020:4C41  4D 45 3D 78 61 6E
0020:4C47  64 65 72 00
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 153

0020:4C4B  55 53 45 52 50 52			db	'USERPROFILE=C:\DOCUME~1\xander', 0
0020:4C51  4F 46 49 4C 45 3D
0020:4C57  43 3A 5C 44 4F 43
0020:4C5D  55 4D 45 7E 31 5C
0020:4C63  78 61 6E 64 65 72
0020:4C69  00
0020:4C6A  42 4C 41 53 54 45			db	'BLASTER=A220 I5 D1 P330 T3'
0020:4C70  52 3D 41 32 32 30
0020:4C76  20 49 35 20 44 31
0020:4C7C  20 50 33 33 30 20
0020:4C82  54 33
0020:4C84  000A[00]				db	10 dup (0)
0020:4C8E  7D 0C				jge	loc_512			; Jump if > or =
0020:4C90  00 00				add	[bx+si],al
0020:4C92  89 0C				mov	[si],cx
0020:4C94  A5					movsw				; Mov [si] to es:[di]
0020:4C95  0C B4				or	al,0B4h
0020:4C97  0C CA				or	al,0CAh
0020:4C99  0C E0				or	al,0E0h
0020:4C9B  0C F1				or	al,0F1h
0020:4C9D  0C 03				or	al,3
0020:4C9F  0D 0D16				or	ax,0D16h
0020:4CA2  38 0D				cmp	[di],cl
0020:4CA4  000C[00]				db	12 dup (0)
0020:4CB0			loc_513:
0020:4CB0  BB 0792				mov	bx,792h
0020:4CB3  3C 02				cmp	al,2
0020:4CB5  74 1B				je	loc_514			; Jump if equal
0020:4CB7  BB 0758				mov	bx,758h
0020:4CBA  3C 08				cmp	al,8
0020:4CBC  74 14				je	loc_514			; Jump if equal
0020:4CBE  BB 0744				mov	bx,744h
0020:4CC1  3C 0B				cmp	al,0Bh
0020:4CC3  74 0D				je	loc_514			; Jump if equal
0020:4CC5  BB 07AD				mov	bx,7ADh
0020:4CC8  3C 05				cmp	al,5
0020:4CCA  74 06				je	loc_514			; Jump if equal
0020:4CCC  BB 0730				mov	bx,730h
0020:4CCF  BE 023D				mov	si,23Dh
0020:4CD2			loc_514:
0020:4CD2  8B D3				mov	dx,bx
0020:4CD4  E8 068C				call	sub_87			; (5363)
0020:4CD7  EB 09				jmp	short loc_515		; (4CE2)
0020:4CD9  72 D5				jc	loc_513			; Jump if carry Set
0020:4CDB  B4 4D				mov	ah,4Dh			; 'M'
0020:4CDD  CD 21				int	21h			; DOS Services  ah=function 4Dh
										;  get return code info in ax
0020:4CDF  A3 02A7				mov	data_142,ax		; (0020:02A7=5100h)
0020:4CE2			loc_515:
0020:4CE2  E9 0179				jmp	loc_525			; (4E5E)
0020:4CE5  1F					pop	ds
0020:4CE6  F6 06 0330 01			test	byte ptr ds:[330h],1	; (740B:0330=0)
0020:4CEB  74 0D				jz	loc_517			; Jump if zero
0020:4CED  F6 06 0330 02			test	byte ptr ds:[330h],2	; (740B:0330=0)
0020:4CF2  74 04				jz	loc_516			; Jump if zero
0020:4CF4  1F					pop	ds
0020:4CF5  E9 0F5A				jmp	loc_627			; (5C52)
     Temp.lst						 Sourcer Listing v3.07     6-Sep-22  11:39 pm   Page 154

0020:4CF8			loc_516:
0020:4CF8  1F					pop	ds
0020:4CF9  CF					iret				; Interrupt return
0020:4CFA			loc_517:
0020:4CFA  F6 06 0330 04			test	byte ptr ds:[330h],4	; (0000:0330=0)
0020:4CFF  74 12				jz	loc_518			; Jump if zero
0020:4D01  80 FC 01				cmp	ah,1
0020:4D04  72 F2				jb	loc_516			; Jump if below
0020:4D06  80 FC 0C				cmp	ah,0Ch
0020:4D09  77 ED				ja	loc_516			; Jump if above
0020:4D0B  1F					pop	ds
0020:4D0C  83 C4 06				add	sp,6
0020:4D0F  F9					stc				; Set carry flag
0020:4D10  CA 0002				retf	2			; Return far
0020:4D13			loc_518:
0020:4D13  80 0E 0330 04			or	byte ptr ds:[330h],4	; (44C6:0330=0FFh)
0020:4D18  FB					sti				; Enable interrupts
0020:4D19  58					pop	ax
0020:4D1A  A1 02B1				mov	ax,word ptr ds:[2B1h]	; (44C6:02B1=0FFFFh)
0020:4D1D  0B C0				or	ax,ax			; Zero ?
0020:4D1F  75 06				jnz	loc_519			; Jump if not zero
0020:4D21  50					push	ax
0020:4D22  B4 0D				mov	ah,0Dh
0020:4D24  CD 21				int	21h			; DOS Services  ah=function 0Dh
										;  flush disk buffers to disk
0020:4D26  58					pop	ax
0020:4D27			loc_519:
0020:4D27  F7 06 0256 FFFF			test	word ptr ds:[256h],0FFFFh	; (44C6:0256=0FFFFh)
0020:4D2D  74 52				jz	loc_522			; Jump if zero
0020:4D2F  0B C0				or	ax,ax			; Zero ?
0020:4D31  75 4E				jnz	loc_522			; Jump if not zero
0020:4D33  E8 02AC				call	sub_85			; (4FE2)
0020:4D36  E8 03BF				call	sub_86			; (50F8)
0020:4D39  73 40				jnc	loc_521			; Jump if carry=0
0020:4D3B  8A 0E 02AA				mov	cl,byte ptr ds:[2AAh]	; (44C6:02AA=0FFh)
0020:4D3F  53					push	bx
0020:4D40  8E 06 0256				mov	es,word ptr ds:[256h]	; (44C6:0256=0FFFFh)
